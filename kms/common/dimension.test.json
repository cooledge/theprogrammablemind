[
  {
    "associations": [
      [
        [
          "degree",
          0
        ],
        [
          "number",
          0
        ]
      ]
    ],
    "config": {
    },
    "contexts": [
      {
        "amount": {
          "dead": true,
          "instance": true,
          "level": 1,
          "marker": "number",
          "range": {
            "end": 1,
            "start": 0
          },
          "text": "10",
          "types": [
            "number"
          ],
          "value": 10,
          "word": "10"
        },
        "dead": true,
        "level": 1,
        "marker": "degree",
        "number": "many",
        "range": {
          "end": 9,
          "start": 0
        },
        "text": "10 degrees",
        "topLevel": true,
        "value": 10,
        "word": "degrees"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "number",
            0
          ],
          "ops": [
            [
              "degree",
              0
            ],
            [
              "number",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "degree",
            0
          ],
          "ops": [
            [
              "degree",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "comparable": "comparable2",
        "concept": "concept2",
        "countable": "countable2",
        "dialogues": "dialogues2",
        "dimension": "dimension1",
        "dimensionTemplate": "dimensionTemplate2",
        "formulas": "formulas2",
        "formulasTemplate": "formulasTemplate2",
        "gdefaults": "gdefaults2",
        "hierarchy": "hierarchy2",
        "math": "math2",
        "mathTemplate": "mathTemplate2",
        "meta": "meta2",
        "numbers": "numbers2",
        "pos": "pos2",
        "properties": "properties2",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "testing": "testing2"
      },
      "namespaced": {
        "comparable2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "countable2": {
        },
        "dialogues2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "dimension1": {
        },
        "dimensionTemplate2": {
        },
        "formulas2": {
          "formulas": {
          }
        },
        "formulasTemplate2": {
        },
        "gdefaults2": {
        },
        "hierarchy2": {
        },
        "math2": {
        },
        "mathTemplate2": {
        },
        "meta2": {
        },
        "numbers2": {
        },
        "pos2": {
        },
        "properties2": {
          "children": {
            "articlePOS": [
              "a",
              "the"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "concept": [
              "formula",
              "dimension",
              "unit"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "mathematical_operator": [
              "*",
              "+",
              "/",
              "-"
            ],
            "notAble": [
              "unknown"
            ],
            "object": [
              "unknown",
              "what",
              "whose"
            ],
            "preposition": [
              "between"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "xfx",
              "concept",
              "unknown",
              "it",
              "what",
              "whatAble",
              "this",
              "thisitthat",
              "reason"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "noun",
              "reason"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "unknown": [
              "property"
            ],
            "verby": [
              "modifies",
              "is"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "object",
            "what",
            "queryable",
            "readonly",
            "property",
            "xfx",
            "theAble",
            "whose",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "between",
            "preposition",
            "concept",
            "modifies",
            "verby",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "articlePOS",
            "the",
            "notAble",
            "whatAble",
            "is",
            "toAble",
            "noun",
            "thisitthat",
            "reason",
            "that",
            "orAble",
            "ifAble",
            "*",
            "mathematical_operator",
            "+",
            "/",
            "-",
            "formula",
            "dimension",
            "unit"
          ],
          "parents": {
            "*": [
              "mathematical_operator"
            ],
            "+": [
              "mathematical_operator"
            ],
            "-": [
              "mathematical_operator"
            ],
            "/": [
              "mathematical_operator"
            ],
            "a": [
              "articlePOS"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "dimension": [
              "concept"
            ],
            "formula": [
              "concept"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verby"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "modifies": [
              "verby"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble",
              "unknown"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "articlePOS"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "unit": [
              "concept"
            ],
            "unknown": [
              "hierarchyAble",
              "object",
              "notAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "*": {
              },
              "+": {
              },
              "-": {
              },
              "/": {
              },
              "a": {
              },
              "articlePOS": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "dimension": {
              },
              "formula": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "mathematical_operator": {
              },
              "modifies": {
              },
              "notAble": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "toAble": {
              },
              "unit": {
              },
              "unknown": {
              },
              "verby": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "testing2": {
        }
      },
      "processed": [
        {
          "context": {
            "amount": {
              "dead": true,
              "instance": true,
              "level": 1,
              "marker": "number",
              "range": {
                "end": 1,
                "start": 0
              },
              "text": "10",
              "types": [
                "number"
              ],
              "value": 10,
              "word": "10"
            },
            "dead": true,
            "level": 1,
            "marker": "degree",
            "number": "many",
            "range": {
              "end": 9,
              "start": 0
            },
            "text": "10 degrees",
            "topLevel": true,
            "value": 10,
            "word": "degrees"
          },
          "generatedParenthesized": "",
          "paraphrases": "10 degrees",
          "paraphrasesParenthesized": "((10) degrees)",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "default": true,
              "isList": true,
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 30,
                "start": 0
              },
              "text": "dimension and unit",
              "types": [
                "list",
                "type"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 8,
                    "start": 0
                  },
                  "text": "dimension",
                  "unknown": true,
                  "value": "dimension",
                  "word": "dimension"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 17,
                    "start": 14
                  },
                  "text": "unit",
                  "unknown": true,
                  "value": "unit",
                  "word": "unit"
                }
              ],
              "word": "and"
            },
            "range": {
              "end": 30,
              "start": 0
            },
            "text": "dimension and unit are concepts",
            "topLevel": true,
            "touchedBy": [
              "dimensionTemplate#call2",
              "instance0#dimensionTemplate#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 30,
                "start": 23
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "dimension and unit are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "many",
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "formulas",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "formulas",
              "word": "formulas"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "formulas are concepts",
            "topLevel": true,
            "touchedBy": [
              "formulasTemplate#call2",
              "instance0#formulasTemplate#call2",
              "instance0#formulas#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 13
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "formulas are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 37,
                "start": 0
              },
              "text": "* +",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 0,
                    "start": 0
                  },
                  "text": "*",
                  "unknown": true,
                  "value": "*",
                  "word": "*"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 2,
                    "start": 2
                  },
                  "text": "+",
                  "unknown": true,
                  "value": "+",
                  "word": "+"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 4,
                    "start": 4
                  },
                  "text": "/",
                  "unknown": true,
                  "value": "/",
                  "word": "/"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 10,
                    "start": 10
                  },
                  "text": "-",
                  "unknown": true,
                  "value": "-",
                  "word": "-"
                }
              ]
            },
            "range": {
              "end": 37,
              "start": 0
            },
            "text": "* + / and - are mathematical operators",
            "topLevel": true,
            "touchedBy": [
              "mathTemplate#call2",
              "instance1#mathTemplate#call2",
              "instance1#math#call2",
              "instance1#formulas#call2",
              "instance1#dimension#call2"
            ],
            "two": {
              "atomic": true,
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "mathematical_operator",
              "modifier_mathematical": {
                "level": 0,
                "marker": "mathematical",
                "range": {
                  "end": 27,
                  "start": 16
                },
                "text": "mathematical",
                "types": [
                  "mathematical"
                ],
                "value": "mathematical",
                "word": "mathematical"
              },
              "modifiers": [
                "modifier_mathematical"
              ],
              "number": "many",
              "range": {
                "end": 37,
                "start": 16
              },
              "text": "mathematical operators",
              "types": [
                "mathematical_operator",
                "operator"
              ],
              "value": "mathematical_operator",
              "word": "operators"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "*, +, / and - are mathematical operators",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "concept": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 29,
                "start": 22
              },
              "text": "operator",
              "unknown": true,
              "value": "operator",
              "word": "operator"
            },
            "dead": true,
            "flatten": false,
            "level": 1,
            "marker": "modifies",
            "modifiers": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 11,
                  "start": 0
                },
                "text": "mathematical",
                "unknown": true,
                "value": "mathematical",
                "word": "mathematical"
              }
            ],
            "number": "one",
            "range": {
              "end": 29,
              "start": 0
            },
            "text": "mathematical modifies operator",
            "topLevel": true,
            "touchedBy": [
              "mathTemplate#call2",
              "instance0#mathTemplate#call2",
              "instance0#math#call2",
              "instance0#formulas#call2",
              "instance0#dimension#call2"
            ],
            "word": "modifies"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "mathematical modifies operator",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "10 degrees"
    ],
    "paraphrasesParenthesized": [
      "((10) degrees)"
    ],
    "query": "10 degrees",
    "responses": [
      ""
    ]
  },
  {
    "associations": [
    ],
    "config": {
    },
    "contexts": [
      {
        "dead": true,
        "level": 0,
        "marker": "degree",
        "number": "many",
        "range": {
          "end": 6,
          "start": 0
        },
        "text": "degrees",
        "topLevel": true,
        "word": "degrees"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "degree",
            0
          ],
          "ops": [
            [
              "degree",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "comparable": "comparable2",
        "concept": "concept2",
        "countable": "countable2",
        "dialogues": "dialogues2",
        "dimension": "dimension1",
        "dimensionTemplate": "dimensionTemplate2",
        "formulas": "formulas2",
        "formulasTemplate": "formulasTemplate2",
        "gdefaults": "gdefaults2",
        "hierarchy": "hierarchy2",
        "math": "math2",
        "mathTemplate": "mathTemplate2",
        "meta": "meta2",
        "numbers": "numbers2",
        "pos": "pos2",
        "properties": "properties2",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "testing": "testing2"
      },
      "namespaced": {
        "comparable2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "countable2": {
        },
        "dialogues2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "dimension1": {
        },
        "dimensionTemplate2": {
        },
        "formulas2": {
          "formulas": {
          }
        },
        "formulasTemplate2": {
        },
        "gdefaults2": {
        },
        "hierarchy2": {
        },
        "math2": {
        },
        "mathTemplate2": {
        },
        "meta2": {
        },
        "numbers2": {
        },
        "pos2": {
        },
        "properties2": {
          "children": {
            "articlePOS": [
              "a",
              "the"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "concept": [
              "formula",
              "dimension",
              "unit"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "mathematical_operator": [
              "*",
              "+",
              "/",
              "-"
            ],
            "notAble": [
              "unknown"
            ],
            "object": [
              "unknown",
              "what",
              "whose"
            ],
            "preposition": [
              "between"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "xfx",
              "concept",
              "unknown",
              "it",
              "what",
              "whatAble",
              "this",
              "thisitthat",
              "reason"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "noun",
              "reason"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "unknown": [
              "property"
            ],
            "verby": [
              "modifies",
              "is"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "object",
            "what",
            "queryable",
            "readonly",
            "property",
            "xfx",
            "theAble",
            "whose",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "between",
            "preposition",
            "concept",
            "modifies",
            "verby",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "articlePOS",
            "the",
            "notAble",
            "whatAble",
            "is",
            "toAble",
            "noun",
            "thisitthat",
            "reason",
            "that",
            "orAble",
            "ifAble",
            "*",
            "mathematical_operator",
            "+",
            "/",
            "-",
            "formula",
            "dimension",
            "unit"
          ],
          "parents": {
            "*": [
              "mathematical_operator"
            ],
            "+": [
              "mathematical_operator"
            ],
            "-": [
              "mathematical_operator"
            ],
            "/": [
              "mathematical_operator"
            ],
            "a": [
              "articlePOS"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "dimension": [
              "concept"
            ],
            "formula": [
              "concept"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verby"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "modifies": [
              "verby"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble",
              "unknown"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "articlePOS"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "unit": [
              "concept"
            ],
            "unknown": [
              "hierarchyAble",
              "object",
              "notAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "*": {
              },
              "+": {
              },
              "-": {
              },
              "/": {
              },
              "a": {
              },
              "articlePOS": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "dimension": {
              },
              "formula": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "mathematical_operator": {
              },
              "modifies": {
              },
              "notAble": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "toAble": {
              },
              "unit": {
              },
              "unknown": {
              },
              "verby": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "testing2": {
        }
      },
      "processed": [
        {
          "context": {
            "dead": true,
            "level": 0,
            "marker": "degree",
            "number": "many",
            "range": {
              "end": 6,
              "start": 0
            },
            "text": "degrees",
            "topLevel": true,
            "word": "degrees"
          },
          "generatedParenthesized": "",
          "paraphrases": "degrees",
          "paraphrasesParenthesized": "(degrees)",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "default": true,
              "isList": true,
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 30,
                "start": 0
              },
              "text": "dimension and unit",
              "types": [
                "list",
                "type"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 8,
                    "start": 0
                  },
                  "text": "dimension",
                  "unknown": true,
                  "value": "dimension",
                  "word": "dimension"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 17,
                    "start": 14
                  },
                  "text": "unit",
                  "unknown": true,
                  "value": "unit",
                  "word": "unit"
                }
              ],
              "word": "and"
            },
            "range": {
              "end": 30,
              "start": 0
            },
            "text": "dimension and unit are concepts",
            "topLevel": true,
            "touchedBy": [
              "dimensionTemplate#call2",
              "instance0#dimensionTemplate#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 30,
                "start": 23
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "dimension and unit are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "many",
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "formulas",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "formulas",
              "word": "formulas"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "formulas are concepts",
            "topLevel": true,
            "touchedBy": [
              "formulasTemplate#call2",
              "instance0#formulasTemplate#call2",
              "instance0#formulas#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 13
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "formulas are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 37,
                "start": 0
              },
              "text": "* +",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 0,
                    "start": 0
                  },
                  "text": "*",
                  "unknown": true,
                  "value": "*",
                  "word": "*"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 2,
                    "start": 2
                  },
                  "text": "+",
                  "unknown": true,
                  "value": "+",
                  "word": "+"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 4,
                    "start": 4
                  },
                  "text": "/",
                  "unknown": true,
                  "value": "/",
                  "word": "/"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 10,
                    "start": 10
                  },
                  "text": "-",
                  "unknown": true,
                  "value": "-",
                  "word": "-"
                }
              ]
            },
            "range": {
              "end": 37,
              "start": 0
            },
            "text": "* + / and - are mathematical operators",
            "topLevel": true,
            "touchedBy": [
              "mathTemplate#call2",
              "instance1#mathTemplate#call2",
              "instance1#math#call2",
              "instance1#formulas#call2",
              "instance1#dimension#call2"
            ],
            "two": {
              "atomic": true,
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "mathematical_operator",
              "modifier_mathematical": {
                "level": 0,
                "marker": "mathematical",
                "range": {
                  "end": 27,
                  "start": 16
                },
                "text": "mathematical",
                "types": [
                  "mathematical"
                ],
                "value": "mathematical",
                "word": "mathematical"
              },
              "modifiers": [
                "modifier_mathematical"
              ],
              "number": "many",
              "range": {
                "end": 37,
                "start": 16
              },
              "text": "mathematical operators",
              "types": [
                "mathematical_operator",
                "operator"
              ],
              "value": "mathematical_operator",
              "word": "operators"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "*, +, / and - are mathematical operators",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "concept": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 29,
                "start": 22
              },
              "text": "operator",
              "unknown": true,
              "value": "operator",
              "word": "operator"
            },
            "dead": true,
            "flatten": false,
            "level": 1,
            "marker": "modifies",
            "modifiers": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 11,
                  "start": 0
                },
                "text": "mathematical",
                "unknown": true,
                "value": "mathematical",
                "word": "mathematical"
              }
            ],
            "number": "one",
            "range": {
              "end": 29,
              "start": 0
            },
            "text": "mathematical modifies operator",
            "topLevel": true,
            "touchedBy": [
              "mathTemplate#call2",
              "instance0#mathTemplate#call2",
              "instance0#math#call2",
              "instance0#formulas#call2",
              "instance0#dimension#call2"
            ],
            "word": "modifies"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "mathematical modifies operator",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "degrees"
    ],
    "paraphrasesParenthesized": [
      "(degrees)"
    ],
    "query": "degrees",
    "responses": [
      ""
    ]
  },
  {
    "associations": [
      [
        [
          "degree",
          0
        ],
        [
          "number",
          0
        ]
      ]
    ],
    "config": {
    },
    "contexts": [
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "number": "one",
          "range": {
            "end": 25,
            "start": 0
          },
          "text": "temperature",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "temperature",
          "word": "temperature"
        },
        "range": {
          "end": 25,
          "start": 0
        },
        "text": "temperature is a dimension",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": {
            "default": true,
            "level": 0,
            "marker": "a",
            "range": {
              "end": 15,
              "start": 15
            },
            "text": "a",
            "word": "a"
          },
          "level": 1,
          "marker": "dimension",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "pullFromContext": false,
          "range": {
            "end": 25,
            "start": 15
          },
          "text": "a dimension",
          "types": [
            "dimension"
          ],
          "value": "dimension",
          "wantsValue": true,
          "word": "dimension"
        },
        "word": "is"
      },
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "many",
        "one": {
          "level": 1,
          "listable": true,
          "marker": "list",
          "number": "many",
          "range": {
            "end": 53,
            "start": 0
          },
          "text": "fahrenheit",
          "types": [
            "list",
            "unknown"
          ],
          "value": [
            {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 9,
                "start": 0
              },
              "text": "fahrenheit",
              "unknown": true,
              "value": "fahrenheit",
              "word": "fahrenheit"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 17,
                "start": 11
              },
              "text": "celcuis",
              "unknown": true,
              "value": "celcuis",
              "word": "celcuis"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 28,
                "start": 23
              },
              "text": "kelvin",
              "unknown": true,
              "value": "kelvin",
              "word": "kelvin"
            }
          ]
        },
        "range": {
          "end": 53,
          "start": 0
        },
        "text": "fahrenheit celcuis and kelvin are units of temperature",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "level": 1,
          "marker": "unit",
          "number": "many",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "temperature",
            "number": "one",
            "range": {
              "end": 53,
              "start": 43
            },
            "text": "temperature",
            "types": [
              "temperature"
            ],
            "value": "temperature",
            "word": "temperature"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "range": {
                "end": 38,
                "start": 34
              },
              "text": "units",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "temperature",
              "number": "one",
              "range": {
                "end": 53,
                "start": 43
              },
              "text": "temperature",
              "types": [
                "temperature"
              ],
              "value": "temperature",
              "word": "temperature"
            }
          ],
          "range": {
            "end": 53,
            "start": 34
          },
          "text": "units of temperature",
          "types": [
            "unit"
          ],
          "value": "unit",
          "word": "units"
        },
        "word": "are"
      },
      {
        "amount": {
          "amount": {
            "dead": true,
            "instance": true,
            "level": 1,
            "marker": "number",
            "range": {
              "end": 1,
              "start": 0
            },
            "text": "10",
            "types": [
              "number"
            ],
            "value": 10,
            "word": "10"
          },
          "dead": true,
          "level": 1,
          "marker": "degree",
          "number": "many",
          "range": {
            "end": 9,
            "start": 0
          },
          "text": "10 degrees",
          "types": [
            "degree"
          ],
          "value": 10,
          "word": "degrees"
        },
        "dead": true,
        "level": 1,
        "marker": "dimension",
        "range": {
          "end": 20,
          "start": 0
        },
        "text": "10 degrees fahrenheit",
        "topLevel": true,
        "unit": {
          "dead": true,
          "level": 1,
          "marker": "fahrenheit",
          "number": "one",
          "range": {
            "end": 20,
            "start": 11
          },
          "text": "fahrenheit",
          "types": [
            "fahrenheit"
          ],
          "value": "fahrenheit",
          "word": "fahrenheit"
        },
        "value": 10
      }
    ],
    "generatedParenthesized": [
      "",
      "",
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "a",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "list",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "unit",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "temperature",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "number",
            0
          ],
          "ops": [
            [
              "degree",
              0
            ],
            [
              "fahrenheit",
              0
            ],
            [
              "number",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "degree",
            0
          ],
          "ops": [
            [
              "degree",
              0
            ],
            [
              "fahrenheit",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "fahrenheit",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "fahrenheit",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "amountOfDimension",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "dimension",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "comparable": "comparable2",
        "concept": "concept2",
        "countable": "countable2",
        "dialogues": "dialogues2",
        "dimension": "dimension1",
        "dimensionTemplate": "dimensionTemplate2",
        "formulas": "formulas2",
        "formulasTemplate": "formulasTemplate2",
        "gdefaults": "gdefaults2",
        "hierarchy": "hierarchy2",
        "math": "math2",
        "mathTemplate": "mathTemplate2",
        "meta": "meta2",
        "numbers": "numbers2",
        "pos": "pos2",
        "properties": "properties2",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "testing": "testing2"
      },
      "namespaced": {
        "comparable2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "countable2": {
        },
        "dialogues2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "dimension1": {
        },
        "dimensionTemplate2": {
        },
        "formulas2": {
          "formulas": {
          }
        },
        "formulasTemplate2": {
        },
        "gdefaults2": {
        },
        "hierarchy2": {
        },
        "math2": {
        },
        "mathTemplate2": {
        },
        "meta2": {
        },
        "numbers2": {
        },
        "pos2": {
        },
        "properties2": {
          "children": {
            "articlePOS": [
              "a",
              "the"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "concept": [
              "formula",
              "dimension",
              "unit"
            ],
            "dimension": [
              "temperature"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "mathematical_operator": [
              "*",
              "+",
              "/",
              "-"
            ],
            "notAble": [
              "unknown"
            ],
            "object": [
              "unknown",
              "what",
              "whose"
            ],
            "preposition": [
              "between"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "xfx",
              "concept",
              "unknown",
              "it",
              "what",
              "whatAble",
              "this",
              "thisitthat",
              "reason"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "noun",
              "reason"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "unit": [
              "fahrenheit",
              "celcui",
              "kelvin"
            ],
            "unknown": [
              "property"
            ],
            "verby": [
              "modifies",
              "is"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "object",
            "what",
            "queryable",
            "readonly",
            "property",
            "xfx",
            "theAble",
            "whose",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "between",
            "preposition",
            "concept",
            "modifies",
            "verby",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "articlePOS",
            "the",
            "notAble",
            "whatAble",
            "is",
            "toAble",
            "noun",
            "thisitthat",
            "reason",
            "that",
            "orAble",
            "ifAble",
            "*",
            "mathematical_operator",
            "+",
            "/",
            "-",
            "formula",
            "dimension",
            "unit",
            "temperature",
            "fahrenheit",
            "celcui",
            "kelvin"
          ],
          "parents": {
            "*": [
              "mathematical_operator"
            ],
            "+": [
              "mathematical_operator"
            ],
            "-": [
              "mathematical_operator"
            ],
            "/": [
              "mathematical_operator"
            ],
            "a": [
              "articlePOS"
            ],
            "between": [
              "preposition"
            ],
            "celcui": [
              "unit"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "dimension": [
              "concept"
            ],
            "fahrenheit": [
              "unit"
            ],
            "formula": [
              "concept"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verby"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "kelvin": [
              "unit"
            ],
            "modifies": [
              "verby"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble",
              "unknown"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "temperature": [
              "dimension"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "articlePOS"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "unit": [
              "concept"
            ],
            "unknown": [
              "hierarchyAble",
              "object",
              "notAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "*": {
              },
              "+": {
              },
              "-": {
              },
              "/": {
              },
              "a": {
              },
              "articlePOS": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "celcui": {
              },
              "concept": {
              },
              "dimension": {
              },
              "fahrenheit": {
              },
              "formula": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "kelvin": {
              },
              "mathematical_operator": {
              },
              "modifies": {
              },
              "notAble": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "temperature": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "toAble": {
              },
              "unit": {
              },
              "unknown": {
              },
              "verby": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "testing2": {
        }
      },
      "processed": [
        {
          "context": {
            "amount": {
              "amount": {
                "dead": true,
                "instance": true,
                "level": 1,
                "marker": "number",
                "range": {
                  "end": 1,
                  "start": 0
                },
                "text": "10",
                "types": [
                  "number"
                ],
                "value": 10,
                "word": "10"
              },
              "dead": true,
              "level": 1,
              "marker": "degree",
              "number": "many",
              "range": {
                "end": 9,
                "start": 0
              },
              "text": "10 degrees",
              "types": [
                "degree"
              ],
              "value": 10,
              "word": "degrees"
            },
            "dead": true,
            "level": 1,
            "marker": "dimension",
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "10 degrees fahrenheit",
            "topLevel": true,
            "unit": {
              "dead": true,
              "level": 1,
              "marker": "fahrenheit",
              "number": "one",
              "range": {
                "end": 20,
                "start": 11
              },
              "text": "fahrenheit",
              "types": [
                "fahrenheit"
              ],
              "value": "fahrenheit",
              "word": "fahrenheit"
            },
            "value": 10
          },
          "generatedParenthesized": "",
          "paraphrases": "10 fahrenheit",
          "paraphrasesParenthesized": "((10) (fahrenheit))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 53,
                "start": 0
              },
              "text": "fahrenheit",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 9,
                    "start": 0
                  },
                  "text": "fahrenheit",
                  "unknown": true,
                  "value": "fahrenheit",
                  "word": "fahrenheit"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 17,
                    "start": 11
                  },
                  "text": "celcuis",
                  "unknown": true,
                  "value": "celcuis",
                  "word": "celcuis"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 28,
                    "start": 23
                  },
                  "text": "kelvin",
                  "unknown": true,
                  "value": "kelvin",
                  "word": "kelvin"
                }
              ]
            },
            "range": {
              "end": 53,
              "start": 0
            },
            "text": "fahrenheit celcuis and kelvin are units of temperature",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "temperature",
                "number": "one",
                "range": {
                  "end": 53,
                  "start": 43
                },
                "text": "temperature",
                "types": [
                  "temperature"
                ],
                "value": "temperature",
                "word": "temperature"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unit",
                  "number": "many",
                  "range": {
                    "end": 38,
                    "start": 34
                  },
                  "text": "units",
                  "types": [
                    "unit"
                  ],
                  "value": "unit",
                  "word": "units"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "temperature",
                  "number": "one",
                  "range": {
                    "end": 53,
                    "start": 43
                  },
                  "text": "temperature",
                  "types": [
                    "temperature"
                  ],
                  "value": "temperature",
                  "word": "temperature"
                }
              ],
              "range": {
                "end": 53,
                "start": 34
              },
              "text": "units of temperature",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            "word": "are"
          },
          "generatedParenthesized": "",
          "paraphrases": "fahrenheit, celcuis and kelvin are units of temperature",
          "paraphrasesParenthesized": "(((fahrenheit), (celcuis) and (kelvin)) are ((units) of (temperature)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "one",
              "range": {
                "end": 25,
                "start": 0
              },
              "text": "temperature",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "temperature",
              "word": "temperature"
            },
            "range": {
              "end": 25,
              "start": 0
            },
            "text": "temperature is a dimension",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": {
                "default": true,
                "level": 0,
                "marker": "a",
                "range": {
                  "end": 15,
                  "start": 15
                },
                "text": "a",
                "word": "a"
              },
              "level": 1,
              "marker": "dimension",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "pullFromContext": false,
              "range": {
                "end": 25,
                "start": 15
              },
              "text": "a dimension",
              "types": [
                "dimension"
              ],
              "value": "dimension",
              "wantsValue": true,
              "word": "dimension"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "temperature is a dimension",
          "paraphrasesParenthesized": "((temperature) is ((a) (dimension)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "default": true,
              "isList": true,
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 30,
                "start": 0
              },
              "text": "dimension and unit",
              "types": [
                "list",
                "type"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 8,
                    "start": 0
                  },
                  "text": "dimension",
                  "unknown": true,
                  "value": "dimension",
                  "word": "dimension"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 17,
                    "start": 14
                  },
                  "text": "unit",
                  "unknown": true,
                  "value": "unit",
                  "word": "unit"
                }
              ],
              "word": "and"
            },
            "range": {
              "end": 30,
              "start": 0
            },
            "text": "dimension and unit are concepts",
            "topLevel": true,
            "touchedBy": [
              "dimensionTemplate#call2",
              "instance0#dimensionTemplate#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 30,
                "start": 23
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "dimension and unit are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "many",
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "formulas",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "formulas",
              "word": "formulas"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "formulas are concepts",
            "topLevel": true,
            "touchedBy": [
              "formulasTemplate#call2",
              "instance0#formulasTemplate#call2",
              "instance0#formulas#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 13
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "formulas are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 37,
                "start": 0
              },
              "text": "* +",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 0,
                    "start": 0
                  },
                  "text": "*",
                  "unknown": true,
                  "value": "*",
                  "word": "*"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 2,
                    "start": 2
                  },
                  "text": "+",
                  "unknown": true,
                  "value": "+",
                  "word": "+"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 4,
                    "start": 4
                  },
                  "text": "/",
                  "unknown": true,
                  "value": "/",
                  "word": "/"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 10,
                    "start": 10
                  },
                  "text": "-",
                  "unknown": true,
                  "value": "-",
                  "word": "-"
                }
              ]
            },
            "range": {
              "end": 37,
              "start": 0
            },
            "text": "* + / and - are mathematical operators",
            "topLevel": true,
            "touchedBy": [
              "mathTemplate#call2",
              "instance1#mathTemplate#call2",
              "instance1#math#call2",
              "instance1#formulas#call2",
              "instance1#dimension#call2"
            ],
            "two": {
              "atomic": true,
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "mathematical_operator",
              "modifier_mathematical": {
                "level": 0,
                "marker": "mathematical",
                "range": {
                  "end": 27,
                  "start": 16
                },
                "text": "mathematical",
                "types": [
                  "mathematical"
                ],
                "value": "mathematical",
                "word": "mathematical"
              },
              "modifiers": [
                "modifier_mathematical"
              ],
              "number": "many",
              "range": {
                "end": 37,
                "start": 16
              },
              "text": "mathematical operators",
              "types": [
                "mathematical_operator",
                "operator"
              ],
              "value": "mathematical_operator",
              "word": "operators"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "*, +, / and - are mathematical operators",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "temperature is a dimension",
      "fahrenheit, celcuis and kelvin are units of temperature",
      "10 fahrenheit"
    ],
    "paraphrasesParenthesized": [
      "((temperature) is ((a) (dimension)))",
      "(((fahrenheit), (celcuis) and (kelvin)) are ((units) of (temperature)))",
      "((10) (fahrenheit))"
    ],
    "query": "temperature is a dimension\\nfahrenheit celcuis and kelvin are units of temperature\\n10 degrees fahrenheit",
    "responses": [
      "",
      "",
      ""
    ]
  },
  {
    "associations": [
      [
        [
          "number",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "number",
          0
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
    },
    "contexts": [
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "number": "one",
          "range": {
            "end": 25,
            "start": 0
          },
          "text": "temperature",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "temperature",
          "word": "temperature"
        },
        "range": {
          "end": 25,
          "start": 0
        },
        "text": "temperature is a dimension",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": {
            "default": true,
            "level": 0,
            "marker": "a",
            "range": {
              "end": 15,
              "start": 15
            },
            "text": "a",
            "word": "a"
          },
          "level": 1,
          "marker": "dimension",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "pullFromContext": false,
          "range": {
            "end": 25,
            "start": 15
          },
          "text": "a dimension",
          "types": [
            "dimension"
          ],
          "value": "dimension",
          "wantsValue": true,
          "word": "dimension"
        },
        "word": "is"
      },
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "many",
        "one": {
          "level": 1,
          "listable": true,
          "marker": "list",
          "number": "many",
          "range": {
            "end": 53,
            "start": 0
          },
          "text": "fahrenheit",
          "types": [
            "list",
            "unknown"
          ],
          "value": [
            {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 9,
                "start": 0
              },
              "text": "fahrenheit",
              "unknown": true,
              "value": "fahrenheit",
              "word": "fahrenheit"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 17,
                "start": 11
              },
              "text": "celcuis",
              "unknown": true,
              "value": "celcuis",
              "word": "celcuis"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 28,
                "start": 23
              },
              "text": "kelvin",
              "unknown": true,
              "value": "kelvin",
              "word": "kelvin"
            }
          ]
        },
        "range": {
          "end": 53,
          "start": 0
        },
        "text": "fahrenheit celcuis and kelvin are units of temperature",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "level": 1,
          "marker": "unit",
          "number": "many",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "temperature",
            "number": "one",
            "range": {
              "end": 53,
              "start": 43
            },
            "text": "temperature",
            "types": [
              "temperature"
            ],
            "value": "temperature",
            "word": "temperature"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "range": {
                "end": 38,
                "start": 34
              },
              "text": "units",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "temperature",
              "number": "one",
              "range": {
                "end": 53,
                "start": 43
              },
              "text": "temperature",
              "types": [
                "temperature"
              ],
              "value": "temperature",
              "word": "temperature"
            }
          ],
          "range": {
            "end": 53,
            "start": 34
          },
          "text": "units of temperature",
          "types": [
            "unit"
          ],
          "value": "unit",
          "word": "units"
        },
        "word": "are"
      },
      {
        "amount": {
          "dead": true,
          "instance": true,
          "level": 1,
          "marker": "number",
          "range": {
            "end": 1,
            "start": 0
          },
          "text": "10",
          "types": [
            "number"
          ],
          "value": 10,
          "word": "10"
        },
        "dead": true,
        "level": 1,
        "marker": "dimension",
        "range": {
          "end": 9,
          "start": 0
        },
        "text": "10 celcius",
        "topLevel": true,
        "unit": {
          "dead": true,
          "level": 1,
          "marker": "unit",
          "range": {
            "end": 9,
            "start": 3
          },
          "text": "celcius",
          "types": [
            "unit"
          ],
          "unknown": true,
          "value": "celcius",
          "word": "celcius"
        },
        "value": 10
      }
    ],
    "generatedParenthesized": [
      "",
      "",
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "a",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "list",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "unit",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "temperature",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "number",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "number",
            0
          ],
          "ops": [
            [
              "number",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "amountOfDimension",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "dimension",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "comparable": "comparable2",
        "concept": "concept2",
        "countable": "countable2",
        "dialogues": "dialogues2",
        "dimension": "dimension1",
        "dimensionTemplate": "dimensionTemplate2",
        "formulas": "formulas2",
        "formulasTemplate": "formulasTemplate2",
        "gdefaults": "gdefaults2",
        "hierarchy": "hierarchy2",
        "math": "math2",
        "mathTemplate": "mathTemplate2",
        "meta": "meta2",
        "numbers": "numbers2",
        "pos": "pos2",
        "properties": "properties2",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "testing": "testing2"
      },
      "namespaced": {
        "comparable2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "countable2": {
        },
        "dialogues2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "dimension1": {
        },
        "dimensionTemplate2": {
        },
        "formulas2": {
          "formulas": {
          }
        },
        "formulasTemplate2": {
        },
        "gdefaults2": {
        },
        "hierarchy2": {
        },
        "math2": {
        },
        "mathTemplate2": {
        },
        "meta2": {
        },
        "numbers2": {
        },
        "pos2": {
        },
        "properties2": {
          "children": {
            "articlePOS": [
              "a",
              "the"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "concept": [
              "formula",
              "dimension",
              "unit"
            ],
            "dimension": [
              "temperature"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "mathematical_operator": [
              "*",
              "+",
              "/",
              "-"
            ],
            "notAble": [
              "unknown"
            ],
            "object": [
              "unknown",
              "what",
              "whose"
            ],
            "preposition": [
              "between"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "xfx",
              "concept",
              "unknown",
              "it",
              "what",
              "whatAble",
              "this",
              "thisitthat",
              "reason"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "noun",
              "reason"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "unit": [
              "fahrenheit",
              "celcui",
              "kelvin"
            ],
            "unknown": [
              "property"
            ],
            "verby": [
              "modifies",
              "is"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "object",
            "what",
            "queryable",
            "readonly",
            "property",
            "xfx",
            "theAble",
            "whose",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "between",
            "preposition",
            "concept",
            "modifies",
            "verby",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "articlePOS",
            "the",
            "notAble",
            "whatAble",
            "is",
            "toAble",
            "noun",
            "thisitthat",
            "reason",
            "that",
            "orAble",
            "ifAble",
            "*",
            "mathematical_operator",
            "+",
            "/",
            "-",
            "formula",
            "dimension",
            "unit",
            "temperature",
            "fahrenheit",
            "celcui",
            "kelvin"
          ],
          "parents": {
            "*": [
              "mathematical_operator"
            ],
            "+": [
              "mathematical_operator"
            ],
            "-": [
              "mathematical_operator"
            ],
            "/": [
              "mathematical_operator"
            ],
            "a": [
              "articlePOS"
            ],
            "between": [
              "preposition"
            ],
            "celcui": [
              "unit"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "dimension": [
              "concept"
            ],
            "fahrenheit": [
              "unit"
            ],
            "formula": [
              "concept"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verby"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "kelvin": [
              "unit"
            ],
            "modifies": [
              "verby"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble",
              "unknown"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "temperature": [
              "dimension"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "articlePOS"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "unit": [
              "concept"
            ],
            "unknown": [
              "hierarchyAble",
              "object",
              "notAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "*": {
              },
              "+": {
              },
              "-": {
              },
              "/": {
              },
              "a": {
              },
              "articlePOS": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "celcui": {
              },
              "concept": {
              },
              "dimension": {
              },
              "fahrenheit": {
              },
              "formula": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "kelvin": {
              },
              "mathematical_operator": {
              },
              "modifies": {
              },
              "notAble": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "temperature": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "toAble": {
              },
              "unit": {
              },
              "unknown": {
              },
              "verby": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "testing2": {
        }
      },
      "processed": [
        {
          "context": {
            "amount": {
              "dead": true,
              "instance": true,
              "level": 1,
              "marker": "number",
              "range": {
                "end": 1,
                "start": 0
              },
              "text": "10",
              "types": [
                "number"
              ],
              "value": 10,
              "word": "10"
            },
            "dead": true,
            "level": 1,
            "marker": "dimension",
            "range": {
              "end": 9,
              "start": 0
            },
            "text": "10 celcius",
            "topLevel": true,
            "unit": {
              "dead": true,
              "level": 1,
              "marker": "unit",
              "range": {
                "end": 9,
                "start": 3
              },
              "text": "celcius",
              "types": [
                "unit"
              ],
              "unknown": true,
              "value": "celcius",
              "word": "celcius"
            },
            "value": 10
          },
          "generatedParenthesized": "",
          "paraphrases": "10 celcius",
          "paraphrasesParenthesized": "((10) (celcius))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 53,
                "start": 0
              },
              "text": "fahrenheit",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 9,
                    "start": 0
                  },
                  "text": "fahrenheit",
                  "unknown": true,
                  "value": "fahrenheit",
                  "word": "fahrenheit"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 17,
                    "start": 11
                  },
                  "text": "celcuis",
                  "unknown": true,
                  "value": "celcuis",
                  "word": "celcuis"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 28,
                    "start": 23
                  },
                  "text": "kelvin",
                  "unknown": true,
                  "value": "kelvin",
                  "word": "kelvin"
                }
              ]
            },
            "range": {
              "end": 53,
              "start": 0
            },
            "text": "fahrenheit celcuis and kelvin are units of temperature",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "temperature",
                "number": "one",
                "range": {
                  "end": 53,
                  "start": 43
                },
                "text": "temperature",
                "types": [
                  "temperature"
                ],
                "value": "temperature",
                "word": "temperature"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unit",
                  "number": "many",
                  "range": {
                    "end": 38,
                    "start": 34
                  },
                  "text": "units",
                  "types": [
                    "unit"
                  ],
                  "value": "unit",
                  "word": "units"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "temperature",
                  "number": "one",
                  "range": {
                    "end": 53,
                    "start": 43
                  },
                  "text": "temperature",
                  "types": [
                    "temperature"
                  ],
                  "value": "temperature",
                  "word": "temperature"
                }
              ],
              "range": {
                "end": 53,
                "start": 34
              },
              "text": "units of temperature",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            "word": "are"
          },
          "generatedParenthesized": "",
          "paraphrases": "fahrenheit, celcuis and kelvin are units of temperature",
          "paraphrasesParenthesized": "(((fahrenheit), (celcuis) and (kelvin)) are ((units) of (temperature)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "one",
              "range": {
                "end": 25,
                "start": 0
              },
              "text": "temperature",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "temperature",
              "word": "temperature"
            },
            "range": {
              "end": 25,
              "start": 0
            },
            "text": "temperature is a dimension",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": {
                "default": true,
                "level": 0,
                "marker": "a",
                "range": {
                  "end": 15,
                  "start": 15
                },
                "text": "a",
                "word": "a"
              },
              "level": 1,
              "marker": "dimension",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "pullFromContext": false,
              "range": {
                "end": 25,
                "start": 15
              },
              "text": "a dimension",
              "types": [
                "dimension"
              ],
              "value": "dimension",
              "wantsValue": true,
              "word": "dimension"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "temperature is a dimension",
          "paraphrasesParenthesized": "((temperature) is ((a) (dimension)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "default": true,
              "isList": true,
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 30,
                "start": 0
              },
              "text": "dimension and unit",
              "types": [
                "list",
                "type"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 8,
                    "start": 0
                  },
                  "text": "dimension",
                  "unknown": true,
                  "value": "dimension",
                  "word": "dimension"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 17,
                    "start": 14
                  },
                  "text": "unit",
                  "unknown": true,
                  "value": "unit",
                  "word": "unit"
                }
              ],
              "word": "and"
            },
            "range": {
              "end": 30,
              "start": 0
            },
            "text": "dimension and unit are concepts",
            "topLevel": true,
            "touchedBy": [
              "dimensionTemplate#call2",
              "instance0#dimensionTemplate#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 30,
                "start": 23
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "dimension and unit are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "many",
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "formulas",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "formulas",
              "word": "formulas"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "formulas are concepts",
            "topLevel": true,
            "touchedBy": [
              "formulasTemplate#call2",
              "instance0#formulasTemplate#call2",
              "instance0#formulas#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 13
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "formulas are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 37,
                "start": 0
              },
              "text": "* +",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 0,
                    "start": 0
                  },
                  "text": "*",
                  "unknown": true,
                  "value": "*",
                  "word": "*"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 2,
                    "start": 2
                  },
                  "text": "+",
                  "unknown": true,
                  "value": "+",
                  "word": "+"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 4,
                    "start": 4
                  },
                  "text": "/",
                  "unknown": true,
                  "value": "/",
                  "word": "/"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 10,
                    "start": 10
                  },
                  "text": "-",
                  "unknown": true,
                  "value": "-",
                  "word": "-"
                }
              ]
            },
            "range": {
              "end": 37,
              "start": 0
            },
            "text": "* + / and - are mathematical operators",
            "topLevel": true,
            "touchedBy": [
              "mathTemplate#call2",
              "instance1#mathTemplate#call2",
              "instance1#math#call2",
              "instance1#formulas#call2",
              "instance1#dimension#call2"
            ],
            "two": {
              "atomic": true,
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "mathematical_operator",
              "modifier_mathematical": {
                "level": 0,
                "marker": "mathematical",
                "range": {
                  "end": 27,
                  "start": 16
                },
                "text": "mathematical",
                "types": [
                  "mathematical"
                ],
                "value": "mathematical",
                "word": "mathematical"
              },
              "modifiers": [
                "modifier_mathematical"
              ],
              "number": "many",
              "range": {
                "end": 37,
                "start": 16
              },
              "text": "mathematical operators",
              "types": [
                "mathematical_operator",
                "operator"
              ],
              "value": "mathematical_operator",
              "word": "operators"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "*, +, / and - are mathematical operators",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "temperature is a dimension",
      "fahrenheit, celcuis and kelvin are units of temperature",
      "10 celcius"
    ],
    "paraphrasesParenthesized": [
      "((temperature) is ((a) (dimension)))",
      "(((fahrenheit), (celcuis) and (kelvin)) are ((units) of (temperature)))",
      "((10) (celcius))"
    ],
    "query": "temperature is a dimension\\nfahrenheit celcuis and kelvin are units of temperature\\n10 celcius",
    "responses": [
      "",
      "",
      ""
    ]
  },
  {
    "associations": [
      [
        [
          "degree",
          0
        ],
        [
          "number",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "degree",
          0
        ],
        [
          "number",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "degree",
          0
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
    },
    "contexts": [
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "number": "one",
          "range": {
            "end": 25,
            "start": 0
          },
          "text": "temperature",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "temperature",
          "word": "temperature"
        },
        "range": {
          "end": 25,
          "start": 0
        },
        "text": "temperature is a dimension",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": {
            "default": true,
            "level": 0,
            "marker": "a",
            "range": {
              "end": 15,
              "start": 15
            },
            "text": "a",
            "word": "a"
          },
          "level": 1,
          "marker": "dimension",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "pullFromContext": false,
          "range": {
            "end": 25,
            "start": 15
          },
          "text": "a dimension",
          "types": [
            "dimension"
          ],
          "value": "dimension",
          "wantsValue": true,
          "word": "dimension"
        },
        "word": "is"
      },
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "many",
        "one": {
          "level": 1,
          "listable": true,
          "marker": "list",
          "number": "many",
          "range": {
            "end": 53,
            "start": 0
          },
          "text": "fahrenheit",
          "types": [
            "list",
            "unknown"
          ],
          "value": [
            {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 9,
                "start": 0
              },
              "text": "fahrenheit",
              "unknown": true,
              "value": "fahrenheit",
              "word": "fahrenheit"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 17,
                "start": 11
              },
              "text": "celcuis",
              "unknown": true,
              "value": "celcuis",
              "word": "celcuis"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 28,
                "start": 23
              },
              "text": "kelvin",
              "unknown": true,
              "value": "kelvin",
              "word": "kelvin"
            }
          ]
        },
        "range": {
          "end": 53,
          "start": 0
        },
        "text": "fahrenheit celcuis and kelvin are units of temperature",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "level": 1,
          "marker": "unit",
          "number": "many",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "temperature",
            "number": "one",
            "range": {
              "end": 53,
              "start": 43
            },
            "text": "temperature",
            "types": [
              "temperature"
            ],
            "value": "temperature",
            "word": "temperature"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "range": {
                "end": 38,
                "start": 34
              },
              "text": "units",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "temperature",
              "number": "one",
              "range": {
                "end": 53,
                "start": 43
              },
              "text": "temperature",
              "types": [
                "temperature"
              ],
              "value": "temperature",
              "word": "temperature"
            }
          ],
          "range": {
            "end": 53,
            "start": 34
          },
          "text": "units of temperature",
          "types": [
            "unit"
          ],
          "value": "unit",
          "word": "units"
        },
        "word": "are"
      },
      {
        "amount": {
          "amount": {
            "dead": true,
            "instance": true,
            "level": 1,
            "marker": "number",
            "range": {
              "end": 1,
              "start": 0
            },
            "text": "10",
            "types": [
              "number"
            ],
            "value": 10,
            "word": "10"
          },
          "dead": true,
          "level": 1,
          "marker": "degree",
          "number": "many",
          "range": {
            "end": 9,
            "start": 0
          },
          "text": "10 degrees",
          "types": [
            "degree"
          ],
          "value": 10,
          "word": "degrees"
        },
        "dead": true,
        "level": 1,
        "marker": "dimension",
        "range": {
          "end": 17,
          "start": 0
        },
        "text": "10 degrees celcius",
        "topLevel": true,
        "unit": {
          "dead": true,
          "level": 1,
          "marker": "unit",
          "range": {
            "end": 17,
            "start": 11
          },
          "text": "celcius",
          "types": [
            "unit"
          ],
          "unknown": true,
          "value": "celcius",
          "word": "celcius"
        },
        "value": 10
      }
    ],
    "generatedParenthesized": [
      "",
      "",
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "a",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "list",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "unit",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "temperature",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "degree",
              0
            ],
            [
              "number",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "number",
            0
          ],
          "ops": [
            [
              "degree",
              0
            ],
            [
              "number",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "degree",
            0
          ],
          "ops": [
            [
              "degree",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "amountOfDimension",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "dimension",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "comparable": "comparable2",
        "concept": "concept2",
        "countable": "countable2",
        "dialogues": "dialogues2",
        "dimension": "dimension1",
        "dimensionTemplate": "dimensionTemplate2",
        "formulas": "formulas2",
        "formulasTemplate": "formulasTemplate2",
        "gdefaults": "gdefaults2",
        "hierarchy": "hierarchy2",
        "math": "math2",
        "mathTemplate": "mathTemplate2",
        "meta": "meta2",
        "numbers": "numbers2",
        "pos": "pos2",
        "properties": "properties2",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "testing": "testing2"
      },
      "namespaced": {
        "comparable2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "countable2": {
        },
        "dialogues2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "dimension1": {
        },
        "dimensionTemplate2": {
        },
        "formulas2": {
          "formulas": {
          }
        },
        "formulasTemplate2": {
        },
        "gdefaults2": {
        },
        "hierarchy2": {
        },
        "math2": {
        },
        "mathTemplate2": {
        },
        "meta2": {
        },
        "numbers2": {
        },
        "pos2": {
        },
        "properties2": {
          "children": {
            "articlePOS": [
              "a",
              "the"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "concept": [
              "formula",
              "dimension",
              "unit"
            ],
            "dimension": [
              "temperature"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "mathematical_operator": [
              "*",
              "+",
              "/",
              "-"
            ],
            "notAble": [
              "unknown"
            ],
            "object": [
              "unknown",
              "what",
              "whose"
            ],
            "preposition": [
              "between"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "xfx",
              "concept",
              "unknown",
              "it",
              "what",
              "whatAble",
              "this",
              "thisitthat",
              "reason"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "noun",
              "reason"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "unit": [
              "fahrenheit",
              "celcui",
              "kelvin"
            ],
            "unknown": [
              "property"
            ],
            "verby": [
              "modifies",
              "is"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "object",
            "what",
            "queryable",
            "readonly",
            "property",
            "xfx",
            "theAble",
            "whose",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "between",
            "preposition",
            "concept",
            "modifies",
            "verby",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "articlePOS",
            "the",
            "notAble",
            "whatAble",
            "is",
            "toAble",
            "noun",
            "thisitthat",
            "reason",
            "that",
            "orAble",
            "ifAble",
            "*",
            "mathematical_operator",
            "+",
            "/",
            "-",
            "formula",
            "dimension",
            "unit",
            "temperature",
            "fahrenheit",
            "celcui",
            "kelvin"
          ],
          "parents": {
            "*": [
              "mathematical_operator"
            ],
            "+": [
              "mathematical_operator"
            ],
            "-": [
              "mathematical_operator"
            ],
            "/": [
              "mathematical_operator"
            ],
            "a": [
              "articlePOS"
            ],
            "between": [
              "preposition"
            ],
            "celcui": [
              "unit"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "dimension": [
              "concept"
            ],
            "fahrenheit": [
              "unit"
            ],
            "formula": [
              "concept"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verby"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "kelvin": [
              "unit"
            ],
            "modifies": [
              "verby"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble",
              "unknown"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "temperature": [
              "dimension"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "articlePOS"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "unit": [
              "concept"
            ],
            "unknown": [
              "hierarchyAble",
              "object",
              "notAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "*": {
              },
              "+": {
              },
              "-": {
              },
              "/": {
              },
              "a": {
              },
              "articlePOS": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "celcui": {
              },
              "concept": {
              },
              "dimension": {
              },
              "fahrenheit": {
              },
              "formula": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "kelvin": {
              },
              "mathematical_operator": {
              },
              "modifies": {
              },
              "notAble": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "temperature": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "toAble": {
              },
              "unit": {
              },
              "unknown": {
              },
              "verby": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "testing2": {
        }
      },
      "processed": [
        {
          "context": {
            "amount": {
              "amount": {
                "dead": true,
                "instance": true,
                "level": 1,
                "marker": "number",
                "range": {
                  "end": 1,
                  "start": 0
                },
                "text": "10",
                "types": [
                  "number"
                ],
                "value": 10,
                "word": "10"
              },
              "dead": true,
              "level": 1,
              "marker": "degree",
              "number": "many",
              "range": {
                "end": 9,
                "start": 0
              },
              "text": "10 degrees",
              "types": [
                "degree"
              ],
              "value": 10,
              "word": "degrees"
            },
            "dead": true,
            "level": 1,
            "marker": "dimension",
            "range": {
              "end": 17,
              "start": 0
            },
            "text": "10 degrees celcius",
            "topLevel": true,
            "unit": {
              "dead": true,
              "level": 1,
              "marker": "unit",
              "range": {
                "end": 17,
                "start": 11
              },
              "text": "celcius",
              "types": [
                "unit"
              ],
              "unknown": true,
              "value": "celcius",
              "word": "celcius"
            },
            "value": 10
          },
          "generatedParenthesized": "",
          "paraphrases": "10 celcius",
          "paraphrasesParenthesized": "((10) (celcius))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 53,
                "start": 0
              },
              "text": "fahrenheit",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 9,
                    "start": 0
                  },
                  "text": "fahrenheit",
                  "unknown": true,
                  "value": "fahrenheit",
                  "word": "fahrenheit"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 17,
                    "start": 11
                  },
                  "text": "celcuis",
                  "unknown": true,
                  "value": "celcuis",
                  "word": "celcuis"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 28,
                    "start": 23
                  },
                  "text": "kelvin",
                  "unknown": true,
                  "value": "kelvin",
                  "word": "kelvin"
                }
              ]
            },
            "range": {
              "end": 53,
              "start": 0
            },
            "text": "fahrenheit celcuis and kelvin are units of temperature",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "temperature",
                "number": "one",
                "range": {
                  "end": 53,
                  "start": 43
                },
                "text": "temperature",
                "types": [
                  "temperature"
                ],
                "value": "temperature",
                "word": "temperature"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unit",
                  "number": "many",
                  "range": {
                    "end": 38,
                    "start": 34
                  },
                  "text": "units",
                  "types": [
                    "unit"
                  ],
                  "value": "unit",
                  "word": "units"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "temperature",
                  "number": "one",
                  "range": {
                    "end": 53,
                    "start": 43
                  },
                  "text": "temperature",
                  "types": [
                    "temperature"
                  ],
                  "value": "temperature",
                  "word": "temperature"
                }
              ],
              "range": {
                "end": 53,
                "start": 34
              },
              "text": "units of temperature",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            "word": "are"
          },
          "generatedParenthesized": "",
          "paraphrases": "fahrenheit, celcuis and kelvin are units of temperature",
          "paraphrasesParenthesized": "(((fahrenheit), (celcuis) and (kelvin)) are ((units) of (temperature)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "one",
              "range": {
                "end": 25,
                "start": 0
              },
              "text": "temperature",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "temperature",
              "word": "temperature"
            },
            "range": {
              "end": 25,
              "start": 0
            },
            "text": "temperature is a dimension",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": {
                "default": true,
                "level": 0,
                "marker": "a",
                "range": {
                  "end": 15,
                  "start": 15
                },
                "text": "a",
                "word": "a"
              },
              "level": 1,
              "marker": "dimension",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "pullFromContext": false,
              "range": {
                "end": 25,
                "start": 15
              },
              "text": "a dimension",
              "types": [
                "dimension"
              ],
              "value": "dimension",
              "wantsValue": true,
              "word": "dimension"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "temperature is a dimension",
          "paraphrasesParenthesized": "((temperature) is ((a) (dimension)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "default": true,
              "isList": true,
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 30,
                "start": 0
              },
              "text": "dimension and unit",
              "types": [
                "list",
                "type"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 8,
                    "start": 0
                  },
                  "text": "dimension",
                  "unknown": true,
                  "value": "dimension",
                  "word": "dimension"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 17,
                    "start": 14
                  },
                  "text": "unit",
                  "unknown": true,
                  "value": "unit",
                  "word": "unit"
                }
              ],
              "word": "and"
            },
            "range": {
              "end": 30,
              "start": 0
            },
            "text": "dimension and unit are concepts",
            "topLevel": true,
            "touchedBy": [
              "dimensionTemplate#call2",
              "instance0#dimensionTemplate#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 30,
                "start": 23
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "dimension and unit are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "many",
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "formulas",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "formulas",
              "word": "formulas"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "formulas are concepts",
            "topLevel": true,
            "touchedBy": [
              "formulasTemplate#call2",
              "instance0#formulasTemplate#call2",
              "instance0#formulas#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 13
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "formulas are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 37,
                "start": 0
              },
              "text": "* +",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 0,
                    "start": 0
                  },
                  "text": "*",
                  "unknown": true,
                  "value": "*",
                  "word": "*"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 2,
                    "start": 2
                  },
                  "text": "+",
                  "unknown": true,
                  "value": "+",
                  "word": "+"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 4,
                    "start": 4
                  },
                  "text": "/",
                  "unknown": true,
                  "value": "/",
                  "word": "/"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 10,
                    "start": 10
                  },
                  "text": "-",
                  "unknown": true,
                  "value": "-",
                  "word": "-"
                }
              ]
            },
            "range": {
              "end": 37,
              "start": 0
            },
            "text": "* + / and - are mathematical operators",
            "topLevel": true,
            "touchedBy": [
              "mathTemplate#call2",
              "instance1#mathTemplate#call2",
              "instance1#math#call2",
              "instance1#formulas#call2",
              "instance1#dimension#call2"
            ],
            "two": {
              "atomic": true,
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "mathematical_operator",
              "modifier_mathematical": {
                "level": 0,
                "marker": "mathematical",
                "range": {
                  "end": 27,
                  "start": 16
                },
                "text": "mathematical",
                "types": [
                  "mathematical"
                ],
                "value": "mathematical",
                "word": "mathematical"
              },
              "modifiers": [
                "modifier_mathematical"
              ],
              "number": "many",
              "range": {
                "end": 37,
                "start": 16
              },
              "text": "mathematical operators",
              "types": [
                "mathematical_operator",
                "operator"
              ],
              "value": "mathematical_operator",
              "word": "operators"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "*, +, / and - are mathematical operators",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "temperature is a dimension",
      "fahrenheit, celcuis and kelvin are units of temperature",
      "10 celcius"
    ],
    "paraphrasesParenthesized": [
      "((temperature) is ((a) (dimension)))",
      "(((fahrenheit), (celcuis) and (kelvin)) are ((units) of (temperature)))",
      "((10) (celcius))"
    ],
    "query": "temperature is a dimension\\nfahrenheit celcuis and kelvin are units of temperature\\n10 degrees celcius",
    "responses": [
      "",
      "",
      ""
    ]
  },
  {
    "associations": [
      [
        [
          "convertToUnits",
          0
        ],
        [
          "degree",
          0
        ],
        [
          "number",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "degree",
          0
        ],
        [
          "number",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "degree",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "dimension",
          0
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
    },
    "contexts": [
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "number": "one",
          "range": {
            "end": 25,
            "start": 0
          },
          "text": "temperature",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "temperature",
          "word": "temperature"
        },
        "range": {
          "end": 25,
          "start": 0
        },
        "text": "temperature is a dimension",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": {
            "default": true,
            "level": 0,
            "marker": "a",
            "range": {
              "end": 15,
              "start": 15
            },
            "text": "a",
            "word": "a"
          },
          "level": 1,
          "marker": "dimension",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "pullFromContext": false,
          "range": {
            "end": 25,
            "start": 15
          },
          "text": "a dimension",
          "types": [
            "dimension"
          ],
          "value": "dimension",
          "wantsValue": true,
          "word": "dimension"
        },
        "word": "is"
      },
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "many",
        "one": {
          "level": 1,
          "listable": true,
          "marker": "list",
          "number": "many",
          "range": {
            "end": 53,
            "start": 0
          },
          "text": "fahrenheit",
          "types": [
            "list",
            "unknown"
          ],
          "value": [
            {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 9,
                "start": 0
              },
              "text": "fahrenheit",
              "unknown": true,
              "value": "fahrenheit",
              "word": "fahrenheit"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 17,
                "start": 11
              },
              "text": "celcuis",
              "unknown": true,
              "value": "celcuis",
              "word": "celcuis"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 28,
                "start": 23
              },
              "text": "kelvin",
              "unknown": true,
              "value": "kelvin",
              "word": "kelvin"
            }
          ]
        },
        "range": {
          "end": 53,
          "start": 0
        },
        "text": "fahrenheit celcuis and kelvin are units of temperature",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "level": 1,
          "marker": "unit",
          "number": "many",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "temperature",
            "number": "one",
            "range": {
              "end": 53,
              "start": 43
            },
            "text": "temperature",
            "types": [
              "temperature"
            ],
            "value": "temperature",
            "word": "temperature"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "range": {
                "end": 38,
                "start": 34
              },
              "text": "units",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "temperature",
              "number": "one",
              "range": {
                "end": 53,
                "start": 43
              },
              "text": "temperature",
              "types": [
                "temperature"
              ],
              "value": "temperature",
              "word": "temperature"
            }
          ],
          "range": {
            "end": 53,
            "start": 34
          },
          "text": "units of temperature",
          "types": [
            "unit"
          ],
          "value": "unit",
          "word": "units"
        },
        "word": "are"
      },
      {
        "dead": true,
        "default": true,
        "from": {
          "amount": {
            "amount": {
              "dead": true,
              "instance": true,
              "level": 1,
              "marker": "number",
              "range": {
                "end": 1,
                "start": 0
              },
              "text": "10",
              "types": [
                "number"
              ],
              "value": 10,
              "word": "10"
            },
            "dead": true,
            "level": 1,
            "marker": "degree",
            "number": "many",
            "range": {
              "end": 9,
              "start": 0
            },
            "text": "10 degrees",
            "types": [
              "degree"
            ],
            "value": 10,
            "word": "degrees"
          },
          "dead": true,
          "level": 1,
          "marker": "dimension",
          "range": {
            "end": 17,
            "start": 0
          },
          "text": "10 degrees celcius",
          "types": [
            "dimension"
          ],
          "unit": {
            "dead": true,
            "level": 1,
            "marker": "unit",
            "range": {
              "end": 17,
              "start": 11
            },
            "text": "celcius",
            "types": [
              "unit"
            ],
            "unknown": true,
            "value": "celcius",
            "word": "celcius"
          },
          "value": 10
        },
        "level": 1,
        "marker": "convertToUnits",
        "range": {
          "end": 31,
          "start": 0
        },
        "text": "10 degrees celcius in fahrenheit",
        "to": {
          "dead": true,
          "level": 1,
          "marker": "fahrenheit",
          "number": "one",
          "range": {
            "end": 31,
            "start": 22
          },
          "text": "fahrenheit",
          "types": [
            "fahrenheit"
          ],
          "value": "fahrenheit",
          "word": "fahrenheit"
        },
        "topLevel": true,
        "word": "in"
      }
    ],
    "generatedParenthesized": [
      "",
      "",
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "a",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "list",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "unit",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "temperature",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "degree",
              0
            ],
            [
              "fahrenheit",
              0
            ],
            [
              "number",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "number",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "degree",
              0
            ],
            [
              "fahrenheit",
              0
            ],
            [
              "number",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "degree",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "degree",
              0
            ],
            [
              "fahrenheit",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "fahrenheit",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "fahrenheit",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "amountOfDimension",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "convertToUnits",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "dimension",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "convertToUnits",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "comparable": "comparable2",
        "concept": "concept2",
        "countable": "countable2",
        "dialogues": "dialogues2",
        "dimension": "dimension1",
        "dimensionTemplate": "dimensionTemplate2",
        "formulas": "formulas2",
        "formulasTemplate": "formulasTemplate2",
        "gdefaults": "gdefaults2",
        "hierarchy": "hierarchy2",
        "math": "math2",
        "mathTemplate": "mathTemplate2",
        "meta": "meta2",
        "numbers": "numbers2",
        "pos": "pos2",
        "properties": "properties2",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "testing": "testing2"
      },
      "namespaced": {
        "comparable2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "countable2": {
        },
        "dialogues2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "dimension1": {
        },
        "dimensionTemplate2": {
        },
        "formulas2": {
          "formulas": {
          }
        },
        "formulasTemplate2": {
        },
        "gdefaults2": {
        },
        "hierarchy2": {
        },
        "math2": {
        },
        "mathTemplate2": {
        },
        "meta2": {
        },
        "numbers2": {
        },
        "pos2": {
        },
        "properties2": {
          "children": {
            "articlePOS": [
              "a",
              "the"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "concept": [
              "formula",
              "dimension",
              "unit"
            ],
            "dimension": [
              "temperature"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "mathematical_operator": [
              "*",
              "+",
              "/",
              "-"
            ],
            "notAble": [
              "unknown"
            ],
            "object": [
              "unknown",
              "what",
              "whose"
            ],
            "preposition": [
              "between"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "xfx",
              "concept",
              "unknown",
              "it",
              "what",
              "whatAble",
              "this",
              "thisitthat",
              "reason"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "noun",
              "reason"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "unit": [
              "fahrenheit",
              "celcui",
              "kelvin"
            ],
            "unknown": [
              "property"
            ],
            "verby": [
              "modifies",
              "is"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "object",
            "what",
            "queryable",
            "readonly",
            "property",
            "xfx",
            "theAble",
            "whose",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "between",
            "preposition",
            "concept",
            "modifies",
            "verby",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "articlePOS",
            "the",
            "notAble",
            "whatAble",
            "is",
            "toAble",
            "noun",
            "thisitthat",
            "reason",
            "that",
            "orAble",
            "ifAble",
            "*",
            "mathematical_operator",
            "+",
            "/",
            "-",
            "formula",
            "dimension",
            "unit",
            "temperature",
            "fahrenheit",
            "celcui",
            "kelvin"
          ],
          "parents": {
            "*": [
              "mathematical_operator"
            ],
            "+": [
              "mathematical_operator"
            ],
            "-": [
              "mathematical_operator"
            ],
            "/": [
              "mathematical_operator"
            ],
            "a": [
              "articlePOS"
            ],
            "between": [
              "preposition"
            ],
            "celcui": [
              "unit"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "dimension": [
              "concept"
            ],
            "fahrenheit": [
              "unit"
            ],
            "formula": [
              "concept"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verby"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "kelvin": [
              "unit"
            ],
            "modifies": [
              "verby"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble",
              "unknown"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "temperature": [
              "dimension"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "articlePOS"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "unit": [
              "concept"
            ],
            "unknown": [
              "hierarchyAble",
              "object",
              "notAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "*": {
              },
              "+": {
              },
              "-": {
              },
              "/": {
              },
              "a": {
              },
              "articlePOS": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "celcui": {
              },
              "concept": {
              },
              "dimension": {
              },
              "fahrenheit": {
              },
              "formula": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "kelvin": {
              },
              "mathematical_operator": {
              },
              "modifies": {
              },
              "notAble": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "temperature": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "toAble": {
              },
              "unit": {
              },
              "unknown": {
              },
              "verby": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "testing2": {
        }
      },
      "processed": [
        {
          "context": {
            "dead": true,
            "default": true,
            "from": {
              "amount": {
                "amount": {
                  "dead": true,
                  "instance": true,
                  "level": 1,
                  "marker": "number",
                  "range": {
                    "end": 1,
                    "start": 0
                  },
                  "text": "10",
                  "types": [
                    "number"
                  ],
                  "value": 10,
                  "word": "10"
                },
                "dead": true,
                "level": 1,
                "marker": "degree",
                "number": "many",
                "range": {
                  "end": 9,
                  "start": 0
                },
                "text": "10 degrees",
                "types": [
                  "degree"
                ],
                "value": 10,
                "word": "degrees"
              },
              "dead": true,
              "level": 1,
              "marker": "dimension",
              "range": {
                "end": 17,
                "start": 0
              },
              "text": "10 degrees celcius",
              "types": [
                "dimension"
              ],
              "unit": {
                "dead": true,
                "level": 1,
                "marker": "unit",
                "range": {
                  "end": 17,
                  "start": 11
                },
                "text": "celcius",
                "types": [
                  "unit"
                ],
                "unknown": true,
                "value": "celcius",
                "word": "celcius"
              },
              "value": 10
            },
            "level": 1,
            "marker": "convertToUnits",
            "range": {
              "end": 31,
              "start": 0
            },
            "text": "10 degrees celcius in fahrenheit",
            "to": {
              "dead": true,
              "level": 1,
              "marker": "fahrenheit",
              "number": "one",
              "range": {
                "end": 31,
                "start": 22
              },
              "text": "fahrenheit",
              "types": [
                "fahrenheit"
              ],
              "value": "fahrenheit",
              "word": "fahrenheit"
            },
            "topLevel": true,
            "word": "in"
          },
          "generatedParenthesized": "",
          "paraphrases": "10 celcius in fahrenheit",
          "paraphrasesParenthesized": "(((10) (celcius)) in (fahrenheit))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 53,
                "start": 0
              },
              "text": "fahrenheit",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 9,
                    "start": 0
                  },
                  "text": "fahrenheit",
                  "unknown": true,
                  "value": "fahrenheit",
                  "word": "fahrenheit"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 17,
                    "start": 11
                  },
                  "text": "celcuis",
                  "unknown": true,
                  "value": "celcuis",
                  "word": "celcuis"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 28,
                    "start": 23
                  },
                  "text": "kelvin",
                  "unknown": true,
                  "value": "kelvin",
                  "word": "kelvin"
                }
              ]
            },
            "range": {
              "end": 53,
              "start": 0
            },
            "text": "fahrenheit celcuis and kelvin are units of temperature",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "temperature",
                "number": "one",
                "range": {
                  "end": 53,
                  "start": 43
                },
                "text": "temperature",
                "types": [
                  "temperature"
                ],
                "value": "temperature",
                "word": "temperature"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unit",
                  "number": "many",
                  "range": {
                    "end": 38,
                    "start": 34
                  },
                  "text": "units",
                  "types": [
                    "unit"
                  ],
                  "value": "unit",
                  "word": "units"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "temperature",
                  "number": "one",
                  "range": {
                    "end": 53,
                    "start": 43
                  },
                  "text": "temperature",
                  "types": [
                    "temperature"
                  ],
                  "value": "temperature",
                  "word": "temperature"
                }
              ],
              "range": {
                "end": 53,
                "start": 34
              },
              "text": "units of temperature",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            "word": "are"
          },
          "generatedParenthesized": "",
          "paraphrases": "fahrenheit, celcuis and kelvin are units of temperature",
          "paraphrasesParenthesized": "(((fahrenheit), (celcuis) and (kelvin)) are ((units) of (temperature)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "one",
              "range": {
                "end": 25,
                "start": 0
              },
              "text": "temperature",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "temperature",
              "word": "temperature"
            },
            "range": {
              "end": 25,
              "start": 0
            },
            "text": "temperature is a dimension",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": {
                "default": true,
                "level": 0,
                "marker": "a",
                "range": {
                  "end": 15,
                  "start": 15
                },
                "text": "a",
                "word": "a"
              },
              "level": 1,
              "marker": "dimension",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "pullFromContext": false,
              "range": {
                "end": 25,
                "start": 15
              },
              "text": "a dimension",
              "types": [
                "dimension"
              ],
              "value": "dimension",
              "wantsValue": true,
              "word": "dimension"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "temperature is a dimension",
          "paraphrasesParenthesized": "((temperature) is ((a) (dimension)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "default": true,
              "isList": true,
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 30,
                "start": 0
              },
              "text": "dimension and unit",
              "types": [
                "list",
                "type"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 8,
                    "start": 0
                  },
                  "text": "dimension",
                  "unknown": true,
                  "value": "dimension",
                  "word": "dimension"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 17,
                    "start": 14
                  },
                  "text": "unit",
                  "unknown": true,
                  "value": "unit",
                  "word": "unit"
                }
              ],
              "word": "and"
            },
            "range": {
              "end": 30,
              "start": 0
            },
            "text": "dimension and unit are concepts",
            "topLevel": true,
            "touchedBy": [
              "dimensionTemplate#call2",
              "instance0#dimensionTemplate#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 30,
                "start": 23
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "dimension and unit are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "many",
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "formulas",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "formulas",
              "word": "formulas"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "formulas are concepts",
            "topLevel": true,
            "touchedBy": [
              "formulasTemplate#call2",
              "instance0#formulasTemplate#call2",
              "instance0#formulas#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 13
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "formulas are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 37,
                "start": 0
              },
              "text": "* +",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 0,
                    "start": 0
                  },
                  "text": "*",
                  "unknown": true,
                  "value": "*",
                  "word": "*"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 2,
                    "start": 2
                  },
                  "text": "+",
                  "unknown": true,
                  "value": "+",
                  "word": "+"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 4,
                    "start": 4
                  },
                  "text": "/",
                  "unknown": true,
                  "value": "/",
                  "word": "/"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 10,
                    "start": 10
                  },
                  "text": "-",
                  "unknown": true,
                  "value": "-",
                  "word": "-"
                }
              ]
            },
            "range": {
              "end": 37,
              "start": 0
            },
            "text": "* + / and - are mathematical operators",
            "topLevel": true,
            "touchedBy": [
              "mathTemplate#call2",
              "instance1#mathTemplate#call2",
              "instance1#math#call2",
              "instance1#formulas#call2",
              "instance1#dimension#call2"
            ],
            "two": {
              "atomic": true,
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "mathematical_operator",
              "modifier_mathematical": {
                "level": 0,
                "marker": "mathematical",
                "range": {
                  "end": 27,
                  "start": 16
                },
                "text": "mathematical",
                "types": [
                  "mathematical"
                ],
                "value": "mathematical",
                "word": "mathematical"
              },
              "modifiers": [
                "modifier_mathematical"
              ],
              "number": "many",
              "range": {
                "end": 37,
                "start": 16
              },
              "text": "mathematical operators",
              "types": [
                "mathematical_operator",
                "operator"
              ],
              "value": "mathematical_operator",
              "word": "operators"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "*, +, / and - are mathematical operators",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "temperature is a dimension",
      "fahrenheit, celcuis and kelvin are units of temperature",
      "10 celcius in fahrenheit"
    ],
    "paraphrasesParenthesized": [
      "((temperature) is ((a) (dimension)))",
      "(((fahrenheit), (celcuis) and (kelvin)) are ((units) of (temperature)))",
      "(((10) (celcius)) in (fahrenheit))"
    ],
    "query": "temperature is a dimension\\nfahrenheit celcuis and kelvin are units of temperature\\n10 degrees celcius in fahrenheit",
    "responses": [
      "",
      "",
      ""
    ]
  },
  {
    "associations": [
      [
        [
          "convertToUnits",
          0
        ],
        [
          "degree",
          0
        ],
        [
          "is",
          0
        ],
        [
          "number",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "degree",
          0
        ],
        [
          "is",
          0
        ],
        [
          "number",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "degree",
          0
        ],
        [
          "is",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "dimension",
          0
        ],
        [
          "is",
          0
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "is",
          0
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "is",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "is",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "what",
          0
        ]
      ]
    ],
    "config": {
    },
    "contexts": [
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "number": "one",
          "range": {
            "end": 25,
            "start": 0
          },
          "text": "temperature",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "temperature",
          "word": "temperature"
        },
        "range": {
          "end": 25,
          "start": 0
        },
        "text": "temperature is a dimension",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": {
            "default": true,
            "level": 0,
            "marker": "a",
            "range": {
              "end": 15,
              "start": 15
            },
            "text": "a",
            "word": "a"
          },
          "level": 1,
          "marker": "dimension",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "pullFromContext": false,
          "range": {
            "end": 25,
            "start": 15
          },
          "text": "a dimension",
          "types": [
            "dimension"
          ],
          "value": "dimension",
          "wantsValue": true,
          "word": "dimension"
        },
        "word": "is"
      },
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "many",
        "one": {
          "level": 1,
          "listable": true,
          "marker": "list",
          "number": "many",
          "range": {
            "end": 53,
            "start": 0
          },
          "text": "fahrenheit",
          "types": [
            "list",
            "unknown"
          ],
          "value": [
            {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 9,
                "start": 0
              },
              "text": "fahrenheit",
              "unknown": true,
              "value": "fahrenheit",
              "word": "fahrenheit"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 17,
                "start": 11
              },
              "text": "celcuis",
              "unknown": true,
              "value": "celcuis",
              "word": "celcuis"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 28,
                "start": 23
              },
              "text": "kelvin",
              "unknown": true,
              "value": "kelvin",
              "word": "kelvin"
            }
          ]
        },
        "range": {
          "end": 53,
          "start": 0
        },
        "text": "fahrenheit celcuis and kelvin are units of temperature",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "level": 1,
          "marker": "unit",
          "number": "many",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "temperature",
            "number": "one",
            "range": {
              "end": 53,
              "start": 43
            },
            "text": "temperature",
            "types": [
              "temperature"
            ],
            "value": "temperature",
            "word": "temperature"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "range": {
                "end": 38,
                "start": 34
              },
              "text": "units",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "temperature",
              "number": "one",
              "range": {
                "end": 53,
                "start": 43
              },
              "text": "temperature",
              "types": [
                "temperature"
              ],
              "value": "temperature",
              "word": "temperature"
            }
          ],
          "range": {
            "end": 53,
            "start": 34
          },
          "text": "units of temperature",
          "types": [
            "unit"
          ],
          "value": "unit",
          "word": "units"
        },
        "word": "are"
      },
      {
        "dead": true,
        "left": {
          "dead": true,
          "level": 1,
          "marker": "fahrenheit",
          "number": "one",
          "range": {
            "end": 9,
            "start": 0
          },
          "text": "fahrenheit",
          "types": [
            "expression",
            "fahrenheit"
          ],
          "value": "fahrenheit",
          "word": "fahrenheit"
        },
        "level": 1,
        "marker": "equals",
        "range": {
          "end": 28,
          "start": 0
        },
        "right": {
          "dead": true,
          "evaluate": true,
          "isResponse": true,
          "level": 1,
          "marker": "plusExpression",
          "number": "one",
          "range": {
            "end": 28,
            "start": 13
          },
          "text": "celcius * 9 / 5 + 32",
          "types": [
            "number",
            "plusExpression"
          ],
          "value": null,
          "word": "+",
          "x": {
            "dead": true,
            "evaluate": true,
            "isResponse": true,
            "level": 1,
            "marker": "divideByExpression",
            "number": "one",
            "range": {
              "end": 23,
              "start": 13
            },
            "text": "celcius * 9 / 5",
            "types": [
              "divideByExpression",
              "number"
            ],
            "value": null,
            "word": "/",
            "x": {
              "dead": true,
              "evaluate": true,
              "isResponse": true,
              "level": 1,
              "marker": "timesExpression",
              "number": "one",
              "range": {
                "end": 21,
                "start": 13
              },
              "text": "celcius * 9",
              "types": [
                "number",
                "timesExpression"
              ],
              "value": null,
              "word": "*",
              "x": {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 19,
                  "start": 13
                },
                "text": "celcius",
                "types": [
                  "number",
                  "unknown"
                ],
                "unknown": true,
                "value": "celcius",
                "word": "celcius"
              },
              "y": {
                "dead": true,
                "instance": true,
                "level": 1,
                "marker": "number",
                "range": {
                  "end": 21,
                  "start": 21
                },
                "text": "9",
                "types": [
                  "number"
                ],
                "value": 9,
                "word": "9"
              }
            },
            "y": {
              "dead": true,
              "instance": true,
              "level": 1,
              "marker": "number",
              "range": {
                "end": 23,
                "start": 23
              },
              "text": "5",
              "types": [
                "number"
              ],
              "value": 5,
              "word": "5"
            }
          },
          "y": {
            "dead": true,
            "instance": true,
            "level": 1,
            "marker": "number",
            "range": {
              "end": 28,
              "start": 27
            },
            "text": "32",
            "types": [
              "number"
            ],
            "value": 32,
            "word": "32"
          }
        },
        "text": "fahrenheit = celcius*9/5 + 32",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "value": "=",
        "word": "="
      },
      {
        "dead": true,
        "evalue": {
          "default": true,
          "focusable": [
            "two",
            "one"
          ],
          "marker": "is",
          "one": {
            "dead": true,
            "default": true,
            "from": {
              "amount": {
                "amount": {
                  "dead": true,
                  "instance": true,
                  "level": 1,
                  "marker": "number",
                  "range": {
                    "end": 9,
                    "start": 8
                  },
                  "text": "10",
                  "types": [
                    "number"
                  ],
                  "value": 10,
                  "word": "10"
                },
                "dead": true,
                "level": 1,
                "marker": "degree",
                "number": "many",
                "range": {
                  "end": 17,
                  "start": 8
                },
                "text": "10 degrees",
                "types": [
                  "degree"
                ],
                "value": 10,
                "word": "degrees"
              },
              "dead": true,
              "level": 1,
              "marker": "dimension",
              "range": {
                "end": 25,
                "start": 8
              },
              "text": "10 degrees celcius",
              "types": [
                "dimension"
              ],
              "unit": {
                "dead": true,
                "level": 1,
                "marker": "unit",
                "range": {
                  "end": 25,
                  "start": 19
                },
                "text": "celcius",
                "types": [
                  "unit"
                ],
                "unknown": true,
                "value": "celcius",
                "word": "celcius"
              },
              "value": 10
            },
            "level": 1,
            "marker": "convertToUnits",
            "range": {
              "end": 39,
              "start": 8
            },
            "text": "10 degrees celcius in fahrenheit",
            "to": {
              "dead": true,
              "level": 1,
              "marker": "fahrenheit",
              "number": "one",
              "range": {
                "end": 39,
                "start": 30
              },
              "text": "fahrenheit",
              "types": [
                "fahrenheit"
              ],
              "value": "fahrenheit",
              "word": "fahrenheit"
            },
            "types": [
              "convertToUnits"
            ],
            "word": "in"
          },
          "two": {
            "dead": true,
            "default": true,
            "evalue": {
              "amount": {
                "evalue": {
                  "dead": true,
                  "evalue": 50,
                  "instance": true,
                  "isResponse": true,
                  "level": 1,
                  "marker": "plusExpression",
                  "number": "one",
                  "range": {
                    "end": 28,
                    "start": 13
                  },
                  "text": "celcius * 9 / 5 + 32",
                  "touchedBy": [
                    "dimension#call4",
                    "dimension#call3"
                  ],
                  "types": [
                    "number",
                    "plusExpression"
                  ],
                  "value": null,
                  "word": "+",
                  "x": {
                    "dead": true,
                    "evaluate": true,
                    "isResponse": true,
                    "level": 1,
                    "marker": "divideByExpression",
                    "number": "one",
                    "range": {
                      "end": 23,
                      "start": 13
                    },
                    "text": "celcius * 9 / 5",
                    "types": [
                      "divideByExpression",
                      "number"
                    ],
                    "value": null,
                    "word": "/",
                    "x": {
                      "dead": true,
                      "evaluate": true,
                      "isResponse": true,
                      "level": 1,
                      "marker": "timesExpression",
                      "number": "one",
                      "range": {
                        "end": 21,
                        "start": 13
                      },
                      "text": "celcius * 9",
                      "types": [
                        "number",
                        "timesExpression"
                      ],
                      "value": null,
                      "word": "*",
                      "x": {
                        "dead": true,
                        "level": 1,
                        "marker": "unknown",
                        "range": {
                          "end": 19,
                          "start": 13
                        },
                        "text": "celcius",
                        "types": [
                          "number",
                          "unknown"
                        ],
                        "unknown": true,
                        "value": "celcius",
                        "word": "celcius"
                      },
                      "y": {
                        "dead": true,
                        "instance": true,
                        "level": 1,
                        "marker": "number",
                        "range": {
                          "end": 21,
                          "start": 21
                        },
                        "text": "9",
                        "types": [
                          "number"
                        ],
                        "value": 9,
                        "word": "9"
                      }
                    },
                    "y": {
                      "dead": true,
                      "instance": true,
                      "level": 1,
                      "marker": "number",
                      "range": {
                        "end": 23,
                        "start": 23
                      },
                      "text": "5",
                      "types": [
                        "number"
                      ],
                      "value": 5,
                      "word": "5"
                    }
                  },
                  "y": {
                    "dead": true,
                    "instance": true,
                    "level": 1,
                    "marker": "number",
                    "range": {
                      "end": 28,
                      "start": 27
                    },
                    "text": "32",
                    "types": [
                      "number"
                    ],
                    "value": 32,
                    "word": "32"
                  }
                }
              },
              "level": 1,
              "marker": "dimension",
              "paraphrase": true,
              "unit": {
                "dead": true,
                "level": 1,
                "marker": "fahrenheit",
                "number": "one",
                "range": {
                  "end": 39,
                  "start": 30
                },
                "text": "fahrenheit",
                "types": [
                  "fahrenheit"
                ],
                "value": "fahrenheit",
                "word": "fahrenheit"
              }
            },
            "focus": true,
            "from": {
              "amount": {
                "amount": {
                  "dead": true,
                  "instance": true,
                  "level": 1,
                  "marker": "number",
                  "range": {
                    "end": 9,
                    "start": 8
                  },
                  "text": "10",
                  "types": [
                    "number"
                  ],
                  "value": 10,
                  "word": "10"
                },
                "dead": true,
                "level": 1,
                "marker": "degree",
                "number": "many",
                "range": {
                  "end": 17,
                  "start": 8
                },
                "text": "10 degrees",
                "types": [
                  "degree"
                ],
                "value": 10,
                "word": "degrees"
              },
              "dead": true,
              "level": 1,
              "marker": "dimension",
              "range": {
                "end": 25,
                "start": 8
              },
              "text": "10 degrees celcius",
              "types": [
                "dimension"
              ],
              "unit": {
                "dead": true,
                "level": 1,
                "marker": "unit",
                "range": {
                  "end": 25,
                  "start": 19
                },
                "text": "celcius",
                "types": [
                  "unit"
                ],
                "unknown": true,
                "value": "celcius",
                "word": "celcius"
              },
              "value": 10
            },
            "instance": true,
            "level": 1,
            "marker": "convertToUnits",
            "range": {
              "end": 39,
              "start": 8
            },
            "text": "10 degrees celcius in fahrenheit",
            "to": {
              "dead": true,
              "level": 1,
              "marker": "fahrenheit",
              "number": "one",
              "range": {
                "end": 39,
                "start": 30
              },
              "text": "fahrenheit",
              "types": [
                "fahrenheit"
              ],
              "value": "fahrenheit",
              "word": "fahrenheit"
            },
            "touchedBy": [
              "dimension#call3",
              "dimension#call2"
            ],
            "types": [
              "convertToUnits"
            ],
            "word": "in"
          },
          "word": "is"
        },
        "isResponse": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "default": true,
          "determined": true,
          "level": 1,
          "marker": "what",
          "number": "one",
          "query": [
            "what"
          ],
          "range": {
            "end": 39,
            "start": 0
          },
          "text": "what",
          "types": [
            "what"
          ],
          "value": "what",
          "word": "what"
        },
        "query": [
          "what"
        ],
        "range": {
          "end": 39,
          "start": 0
        },
        "text": "what is 10 degrees celcius in fahrenheit",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "dead": true,
          "default": true,
          "from": {
            "amount": {
              "amount": {
                "dead": true,
                "instance": true,
                "level": 1,
                "marker": "number",
                "range": {
                  "end": 9,
                  "start": 8
                },
                "text": "10",
                "types": [
                  "number"
                ],
                "value": 10,
                "word": "10"
              },
              "dead": true,
              "level": 1,
              "marker": "degree",
              "number": "many",
              "range": {
                "end": 17,
                "start": 8
              },
              "text": "10 degrees",
              "types": [
                "degree"
              ],
              "value": 10,
              "word": "degrees"
            },
            "dead": true,
            "level": 1,
            "marker": "dimension",
            "range": {
              "end": 25,
              "start": 8
            },
            "text": "10 degrees celcius",
            "types": [
              "dimension"
            ],
            "unit": {
              "dead": true,
              "level": 1,
              "marker": "unit",
              "range": {
                "end": 25,
                "start": 19
              },
              "text": "celcius",
              "types": [
                "unit"
              ],
              "unknown": true,
              "value": "celcius",
              "word": "celcius"
            },
            "value": 10
          },
          "level": 1,
          "marker": "convertToUnits",
          "range": {
            "end": 39,
            "start": 8
          },
          "text": "10 degrees celcius in fahrenheit",
          "to": {
            "dead": true,
            "level": 1,
            "marker": "fahrenheit",
            "number": "one",
            "range": {
              "end": 39,
              "start": 30
            },
            "text": "fahrenheit",
            "types": [
              "fahrenheit"
            ],
            "value": "fahrenheit",
            "word": "fahrenheit"
          },
          "types": [
            "convertToUnits"
          ],
          "word": "in"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      "",
      "",
      "",
      "(((((10) (celcius)) in (fahrenheit)) is ((((50)) (fahrenheit)))))"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "a",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "list",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "unit",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "temperature",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "temperature",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "divideByOperator",
              0
            ],
            [
              "equals",
              0
            ],
            [
              "fahrenheit",
              0
            ],
            [
              "number",
              0
            ],
            [
              "number",
              0
            ],
            [
              "number",
              0
            ],
            [
              "plusOperator",
              0
            ],
            [
              "timesOperator",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "number",
            0
          ],
          "ops": [
            [
              "divideByOperator",
              0
            ],
            [
              "equals",
              0
            ],
            [
              "fahrenheit",
              0
            ],
            [
              "number",
              0
            ],
            [
              "number",
              0
            ],
            [
              "number",
              0
            ],
            [
              "plusOperator",
              0
            ],
            [
              "timesOperator",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "number",
            0
          ],
          "ops": [
            [
              "divideByOperator",
              0
            ],
            [
              "equals",
              0
            ],
            [
              "fahrenheit",
              0
            ],
            [
              "number",
              0
            ],
            [
              "number",
              0
            ],
            [
              "plusOperator",
              0
            ],
            [
              "timesOperator",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "number",
            0
          ],
          "ops": [
            [
              "divideByOperator",
              0
            ],
            [
              "equals",
              0
            ],
            [
              "fahrenheit",
              0
            ],
            [
              "number",
              0
            ],
            [
              "plusOperator",
              0
            ],
            [
              "timesOperator",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "fahrenheit",
            0
          ],
          "ops": [
            [
              "divideByOperator",
              0
            ],
            [
              "equals",
              0
            ],
            [
              "fahrenheit",
              0
            ],
            [
              "plusOperator",
              0
            ],
            [
              "timesOperator",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "timesOperator",
            0
          ],
          "ops": [
            [
              "divideByOperator",
              0
            ],
            [
              "equals",
              0
            ],
            [
              "plusOperator",
              0
            ],
            [
              "timesOperator",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "divideByOperator",
            0
          ],
          "ops": [
            [
              "divideByOperator",
              0
            ],
            [
              "equals",
              0
            ],
            [
              "plusOperator",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "plusOperator",
            0
          ],
          "ops": [
            [
              "equals",
              0
            ],
            [
              "plusOperator",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "equals",
            0
          ],
          "ops": [
            [
              "equals",
              0
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "degree",
              0
            ],
            [
              "fahrenheit",
              0
            ],
            [
              "is",
              0
            ],
            [
              "number",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "number",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "degree",
              0
            ],
            [
              "fahrenheit",
              0
            ],
            [
              "is",
              0
            ],
            [
              "number",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "degree",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "degree",
              0
            ],
            [
              "fahrenheit",
              0
            ],
            [
              "is",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "fahrenheit",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "fahrenheit",
              0
            ],
            [
              "is",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "amountOfDimension",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "convertToUnits",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "comparable": "comparable2",
        "concept": "concept2",
        "countable": "countable2",
        "dialogues": "dialogues2",
        "dimension": "dimension1",
        "dimensionTemplate": "dimensionTemplate2",
        "formulas": "formulas2",
        "formulasTemplate": "formulasTemplate2",
        "gdefaults": "gdefaults2",
        "hierarchy": "hierarchy2",
        "math": "math2",
        "mathTemplate": "mathTemplate2",
        "meta": "meta2",
        "numbers": "numbers2",
        "pos": "pos2",
        "properties": "properties2",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "testing": "testing2"
      },
      "namespaced": {
        "comparable2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "countable2": {
        },
        "dialogues2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "dimension1": {
        },
        "dimensionTemplate2": {
        },
        "formulas2": {
          "formulas": {
            "fahrenheit": [
              {
                "equality": {
                  "dead": true,
                  "left": {
                    "dead": true,
                    "level": 1,
                    "marker": "fahrenheit",
                    "number": "one",
                    "range": {
                      "end": 9,
                      "start": 0
                    },
                    "text": "fahrenheit",
                    "types": [
                      "expression",
                      "fahrenheit"
                    ],
                    "value": "fahrenheit",
                    "word": "fahrenheit"
                  },
                  "level": 1,
                  "marker": "equals",
                  "range": {
                    "end": 28,
                    "start": 0
                  },
                  "right": {
                    "dead": true,
                    "evaluate": true,
                    "isResponse": true,
                    "level": 1,
                    "marker": "plusExpression",
                    "number": "one",
                    "range": {
                      "end": 28,
                      "start": 13
                    },
                    "text": "celcius * 9 / 5 + 32",
                    "types": [
                      "number",
                      "plusExpression"
                    ],
                    "value": null,
                    "word": "+",
                    "x": {
                      "dead": true,
                      "evaluate": true,
                      "isResponse": true,
                      "level": 1,
                      "marker": "divideByExpression",
                      "number": "one",
                      "range": {
                        "end": 23,
                        "start": 13
                      },
                      "text": "celcius * 9 / 5",
                      "types": [
                        "divideByExpression",
                        "number"
                      ],
                      "value": null,
                      "word": "/",
                      "x": {
                        "dead": true,
                        "evaluate": true,
                        "isResponse": true,
                        "level": 1,
                        "marker": "timesExpression",
                        "number": "one",
                        "range": {
                          "end": 21,
                          "start": 13
                        },
                        "text": "celcius * 9",
                        "types": [
                          "number",
                          "timesExpression"
                        ],
                        "value": null,
                        "word": "*",
                        "x": {
                          "dead": true,
                          "level": 1,
                          "marker": "unknown",
                          "range": {
                            "end": 19,
                            "start": 13
                          },
                          "text": "celcius",
                          "types": [
                            "number",
                            "unknown"
                          ],
                          "unknown": true,
                          "value": "celcius",
                          "word": "celcius"
                        },
                        "y": {
                          "dead": true,
                          "instance": true,
                          "level": 1,
                          "marker": "number",
                          "range": {
                            "end": 21,
                            "start": 21
                          },
                          "text": "9",
                          "types": [
                            "number"
                          ],
                          "value": 9,
                          "word": "9"
                        }
                      },
                      "y": {
                        "dead": true,
                        "instance": true,
                        "level": 1,
                        "marker": "number",
                        "range": {
                          "end": 23,
                          "start": 23
                        },
                        "text": "5",
                        "types": [
                          "number"
                        ],
                        "value": 5,
                        "word": "5"
                      }
                    },
                    "y": {
                      "dead": true,
                      "instance": true,
                      "level": 1,
                      "marker": "number",
                      "range": {
                        "end": 28,
                        "start": 27
                      },
                      "text": "32",
                      "types": [
                        "number"
                      ],
                      "value": 32,
                      "word": "32"
                    }
                  },
                  "text": "fahrenheit = celcius*9/5 + 32",
                  "topLevel": true,
                  "touchedBy": [
                    "dimension#call2"
                  ],
                  "value": "=",
                  "word": "="
                },
                "formula": {
                  "dead": true,
                  "evaluate": true,
                  "isResponse": true,
                  "level": 1,
                  "marker": "plusExpression",
                  "number": "one",
                  "range": {
                    "end": 28,
                    "start": 13
                  },
                  "text": "celcius * 9 / 5 + 32",
                  "types": [
                    "number",
                    "plusExpression"
                  ],
                  "value": null,
                  "word": "+",
                  "x": {
                    "dead": true,
                    "evaluate": true,
                    "isResponse": true,
                    "level": 1,
                    "marker": "divideByExpression",
                    "number": "one",
                    "range": {
                      "end": 23,
                      "start": 13
                    },
                    "text": "celcius * 9 / 5",
                    "types": [
                      "divideByExpression",
                      "number"
                    ],
                    "value": null,
                    "word": "/",
                    "x": {
                      "dead": true,
                      "evaluate": true,
                      "isResponse": true,
                      "level": 1,
                      "marker": "timesExpression",
                      "number": "one",
                      "range": {
                        "end": 21,
                        "start": 13
                      },
                      "text": "celcius * 9",
                      "types": [
                        "number",
                        "timesExpression"
                      ],
                      "value": null,
                      "word": "*",
                      "x": {
                        "dead": true,
                        "level": 1,
                        "marker": "unknown",
                        "range": {
                          "end": 19,
                          "start": 13
                        },
                        "text": "celcius",
                        "types": [
                          "number",
                          "unknown"
                        ],
                        "unknown": true,
                        "value": "celcius",
                        "word": "celcius"
                      },
                      "y": {
                        "dead": true,
                        "instance": true,
                        "level": 1,
                        "marker": "number",
                        "range": {
                          "end": 21,
                          "start": 21
                        },
                        "text": "9",
                        "types": [
                          "number"
                        ],
                        "value": 9,
                        "word": "9"
                      }
                    },
                    "y": {
                      "dead": true,
                      "instance": true,
                      "level": 1,
                      "marker": "number",
                      "range": {
                        "end": 23,
                        "start": 23
                      },
                      "text": "5",
                      "types": [
                        "number"
                      ],
                      "value": 5,
                      "word": "5"
                    }
                  },
                  "y": {
                    "dead": true,
                    "instance": true,
                    "level": 1,
                    "marker": "number",
                    "range": {
                      "end": 28,
                      "start": 27
                    },
                    "text": "32",
                    "types": [
                      "number"
                    ],
                    "value": 32,
                    "word": "32"
                  }
                },
                "name": {
                  "dead": true,
                  "level": 1,
                  "marker": "fahrenheit",
                  "number": "one",
                  "range": {
                    "end": 9,
                    "start": 0
                  },
                  "text": "fahrenheit",
                  "types": [
                    "expression",
                    "fahrenheit"
                  ],
                  "value": "fahrenheit",
                  "word": "fahrenheit"
                }
              }
            ]
          }
        },
        "formulasTemplate2": {
        },
        "gdefaults2": {
        },
        "hierarchy2": {
        },
        "math2": {
        },
        "mathTemplate2": {
        },
        "meta2": {
        },
        "numbers2": {
        },
        "pos2": {
        },
        "properties2": {
          "children": {
            "articlePOS": [
              "a",
              "the"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "concept": [
              "formula",
              "dimension",
              "unit"
            ],
            "dimension": [
              "temperature"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "mathematical_operator": [
              "*",
              "+",
              "/",
              "-"
            ],
            "notAble": [
              "unknown"
            ],
            "object": [
              "unknown",
              "what",
              "whose"
            ],
            "preposition": [
              "between"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "xfx",
              "concept",
              "unknown",
              "it",
              "what",
              "whatAble",
              "this",
              "thisitthat",
              "reason"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "noun",
              "reason"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "unit": [
              "fahrenheit",
              "celcui",
              "kelvin"
            ],
            "unknown": [
              "property"
            ],
            "verby": [
              "modifies",
              "is"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "object",
            "what",
            "queryable",
            "readonly",
            "property",
            "xfx",
            "theAble",
            "whose",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "between",
            "preposition",
            "concept",
            "modifies",
            "verby",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "articlePOS",
            "the",
            "notAble",
            "whatAble",
            "is",
            "toAble",
            "noun",
            "thisitthat",
            "reason",
            "that",
            "orAble",
            "ifAble",
            "*",
            "mathematical_operator",
            "+",
            "/",
            "-",
            "formula",
            "dimension",
            "unit",
            "temperature",
            "fahrenheit",
            "celcui",
            "kelvin"
          ],
          "parents": {
            "*": [
              "mathematical_operator"
            ],
            "+": [
              "mathematical_operator"
            ],
            "-": [
              "mathematical_operator"
            ],
            "/": [
              "mathematical_operator"
            ],
            "a": [
              "articlePOS"
            ],
            "between": [
              "preposition"
            ],
            "celcui": [
              "unit"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "dimension": [
              "concept"
            ],
            "fahrenheit": [
              "unit"
            ],
            "formula": [
              "concept"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verby"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "kelvin": [
              "unit"
            ],
            "modifies": [
              "verby"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble",
              "unknown"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "temperature": [
              "dimension"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "articlePOS"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "unit": [
              "concept"
            ],
            "unknown": [
              "hierarchyAble",
              "object",
              "notAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "*": {
              },
              "+": {
              },
              "-": {
              },
              "/": {
              },
              "a": {
              },
              "articlePOS": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "celcui": {
              },
              "concept": {
              },
              "dimension": {
              },
              "fahrenheit": {
              },
              "formula": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "kelvin": {
              },
              "mathematical_operator": {
              },
              "modifies": {
              },
              "notAble": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "temperature": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "toAble": {
              },
              "unit": {
              },
              "unknown": {
              },
              "verby": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
            {
              "marker": "celcius",
              "pullFromContext": false,
              "value": {
                "amount": {
                  "dead": true,
                  "instance": true,
                  "level": 1,
                  "marker": "number",
                  "range": {
                    "end": 9,
                    "start": 8
                  },
                  "text": "10",
                  "types": [
                    "number"
                  ],
                  "value": 10,
                  "word": "10"
                },
                "dead": true,
                "level": 1,
                "marker": "degree",
                "number": "many",
                "range": {
                  "end": 17,
                  "start": 8
                },
                "text": "10 degrees",
                "types": [
                  "degree"
                ],
                "value": 10,
                "word": "degrees"
              }
            }
          ],
          "variables": {
          }
        },
        "testing2": {
        }
      },
      "processed": [
        {
          "context": {
            "dead": true,
            "evalue": {
              "default": true,
              "focusable": [
                "two",
                "one"
              ],
              "marker": "is",
              "one": {
                "dead": true,
                "default": true,
                "from": {
                  "amount": {
                    "amount": {
                      "dead": true,
                      "instance": true,
                      "level": 1,
                      "marker": "number",
                      "range": {
                        "end": 9,
                        "start": 8
                      },
                      "text": "10",
                      "types": [
                        "number"
                      ],
                      "value": 10,
                      "word": "10"
                    },
                    "dead": true,
                    "level": 1,
                    "marker": "degree",
                    "number": "many",
                    "range": {
                      "end": 17,
                      "start": 8
                    },
                    "text": "10 degrees",
                    "types": [
                      "degree"
                    ],
                    "value": 10,
                    "word": "degrees"
                  },
                  "dead": true,
                  "level": 1,
                  "marker": "dimension",
                  "range": {
                    "end": 25,
                    "start": 8
                  },
                  "text": "10 degrees celcius",
                  "types": [
                    "dimension"
                  ],
                  "unit": {
                    "dead": true,
                    "level": 1,
                    "marker": "unit",
                    "range": {
                      "end": 25,
                      "start": 19
                    },
                    "text": "celcius",
                    "types": [
                      "unit"
                    ],
                    "unknown": true,
                    "value": "celcius",
                    "word": "celcius"
                  },
                  "value": 10
                },
                "level": 1,
                "marker": "convertToUnits",
                "range": {
                  "end": 39,
                  "start": 8
                },
                "text": "10 degrees celcius in fahrenheit",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "fahrenheit",
                  "number": "one",
                  "range": {
                    "end": 39,
                    "start": 30
                  },
                  "text": "fahrenheit",
                  "types": [
                    "fahrenheit"
                  ],
                  "value": "fahrenheit",
                  "word": "fahrenheit"
                },
                "types": [
                  "convertToUnits"
                ],
                "word": "in"
              },
              "two": {
                "dead": true,
                "default": true,
                "evalue": {
                  "amount": {
                    "evalue": {
                      "dead": true,
                      "evalue": 50,
                      "instance": true,
                      "isResponse": true,
                      "level": 1,
                      "marker": "plusExpression",
                      "number": "one",
                      "range": {
                        "end": 28,
                        "start": 13
                      },
                      "text": "celcius * 9 / 5 + 32",
                      "touchedBy": [
                        "dimension#call4",
                        "dimension#call3"
                      ],
                      "types": [
                        "number",
                        "plusExpression"
                      ],
                      "value": null,
                      "word": "+",
                      "x": {
                        "dead": true,
                        "evaluate": true,
                        "isResponse": true,
                        "level": 1,
                        "marker": "divideByExpression",
                        "number": "one",
                        "range": {
                          "end": 23,
                          "start": 13
                        },
                        "text": "celcius * 9 / 5",
                        "types": [
                          "divideByExpression",
                          "number"
                        ],
                        "value": null,
                        "word": "/",
                        "x": {
                          "dead": true,
                          "evaluate": true,
                          "isResponse": true,
                          "level": 1,
                          "marker": "timesExpression",
                          "number": "one",
                          "range": {
                            "end": 21,
                            "start": 13
                          },
                          "text": "celcius * 9",
                          "types": [
                            "number",
                            "timesExpression"
                          ],
                          "value": null,
                          "word": "*",
                          "x": {
                            "dead": true,
                            "level": 1,
                            "marker": "unknown",
                            "range": {
                              "end": 19,
                              "start": 13
                            },
                            "text": "celcius",
                            "types": [
                              "number",
                              "unknown"
                            ],
                            "unknown": true,
                            "value": "celcius",
                            "word": "celcius"
                          },
                          "y": {
                            "dead": true,
                            "instance": true,
                            "level": 1,
                            "marker": "number",
                            "range": {
                              "end": 21,
                              "start": 21
                            },
                            "text": "9",
                            "types": [
                              "number"
                            ],
                            "value": 9,
                            "word": "9"
                          }
                        },
                        "y": {
                          "dead": true,
                          "instance": true,
                          "level": 1,
                          "marker": "number",
                          "range": {
                            "end": 23,
                            "start": 23
                          },
                          "text": "5",
                          "types": [
                            "number"
                          ],
                          "value": 5,
                          "word": "5"
                        }
                      },
                      "y": {
                        "dead": true,
                        "instance": true,
                        "level": 1,
                        "marker": "number",
                        "range": {
                          "end": 28,
                          "start": 27
                        },
                        "text": "32",
                        "types": [
                          "number"
                        ],
                        "value": 32,
                        "word": "32"
                      }
                    }
                  },
                  "level": 1,
                  "marker": "dimension",
                  "paraphrase": true,
                  "unit": {
                    "dead": true,
                    "level": 1,
                    "marker": "fahrenheit",
                    "number": "one",
                    "range": {
                      "end": 39,
                      "start": 30
                    },
                    "text": "fahrenheit",
                    "types": [
                      "fahrenheit"
                    ],
                    "value": "fahrenheit",
                    "word": "fahrenheit"
                  }
                },
                "focus": true,
                "from": {
                  "amount": {
                    "amount": {
                      "dead": true,
                      "instance": true,
                      "level": 1,
                      "marker": "number",
                      "range": {
                        "end": 9,
                        "start": 8
                      },
                      "text": "10",
                      "types": [
                        "number"
                      ],
                      "value": 10,
                      "word": "10"
                    },
                    "dead": true,
                    "level": 1,
                    "marker": "degree",
                    "number": "many",
                    "range": {
                      "end": 17,
                      "start": 8
                    },
                    "text": "10 degrees",
                    "types": [
                      "degree"
                    ],
                    "value": 10,
                    "word": "degrees"
                  },
                  "dead": true,
                  "level": 1,
                  "marker": "dimension",
                  "range": {
                    "end": 25,
                    "start": 8
                  },
                  "text": "10 degrees celcius",
                  "types": [
                    "dimension"
                  ],
                  "unit": {
                    "dead": true,
                    "level": 1,
                    "marker": "unit",
                    "range": {
                      "end": 25,
                      "start": 19
                    },
                    "text": "celcius",
                    "types": [
                      "unit"
                    ],
                    "unknown": true,
                    "value": "celcius",
                    "word": "celcius"
                  },
                  "value": 10
                },
                "instance": true,
                "level": 1,
                "marker": "convertToUnits",
                "range": {
                  "end": 39,
                  "start": 8
                },
                "text": "10 degrees celcius in fahrenheit",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "fahrenheit",
                  "number": "one",
                  "range": {
                    "end": 39,
                    "start": 30
                  },
                  "text": "fahrenheit",
                  "types": [
                    "fahrenheit"
                  ],
                  "value": "fahrenheit",
                  "word": "fahrenheit"
                },
                "touchedBy": [
                  "dimension#call3",
                  "dimension#call2"
                ],
                "types": [
                  "convertToUnits"
                ],
                "word": "in"
              },
              "word": "is"
            },
            "isResponse": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "default": true,
              "determined": true,
              "level": 1,
              "marker": "what",
              "number": "one",
              "query": [
                "what"
              ],
              "range": {
                "end": 39,
                "start": 0
              },
              "text": "what",
              "types": [
                "what"
              ],
              "value": "what",
              "word": "what"
            },
            "query": [
              "what"
            ],
            "range": {
              "end": 39,
              "start": 0
            },
            "text": "what is 10 degrees celcius in fahrenheit",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "dead": true,
              "default": true,
              "from": {
                "amount": {
                  "amount": {
                    "dead": true,
                    "instance": true,
                    "level": 1,
                    "marker": "number",
                    "range": {
                      "end": 9,
                      "start": 8
                    },
                    "text": "10",
                    "types": [
                      "number"
                    ],
                    "value": 10,
                    "word": "10"
                  },
                  "dead": true,
                  "level": 1,
                  "marker": "degree",
                  "number": "many",
                  "range": {
                    "end": 17,
                    "start": 8
                  },
                  "text": "10 degrees",
                  "types": [
                    "degree"
                  ],
                  "value": 10,
                  "word": "degrees"
                },
                "dead": true,
                "level": 1,
                "marker": "dimension",
                "range": {
                  "end": 25,
                  "start": 8
                },
                "text": "10 degrees celcius",
                "types": [
                  "dimension"
                ],
                "unit": {
                  "dead": true,
                  "level": 1,
                  "marker": "unit",
                  "range": {
                    "end": 25,
                    "start": 19
                  },
                  "text": "celcius",
                  "types": [
                    "unit"
                  ],
                  "unknown": true,
                  "value": "celcius",
                  "word": "celcius"
                },
                "value": 10
              },
              "level": 1,
              "marker": "convertToUnits",
              "range": {
                "end": 39,
                "start": 8
              },
              "text": "10 degrees celcius in fahrenheit",
              "to": {
                "dead": true,
                "level": 1,
                "marker": "fahrenheit",
                "number": "one",
                "range": {
                  "end": 39,
                  "start": 30
                },
                "text": "fahrenheit",
                "types": [
                  "fahrenheit"
                ],
                "value": "fahrenheit",
                "word": "fahrenheit"
              },
              "types": [
                "convertToUnits"
              ],
              "word": "in"
            },
            "word": "is"
          },
          "generatedParenthesized": "(((((10) (celcius)) in (fahrenheit)) is ((((50)) (fahrenheit)))))",
          "paraphrases": "what is 10 celcius in fahrenheit?",
          "paraphrasesParenthesized": "(((what) is (((10) (celcius)) in (fahrenheit)))?)",
          "responses": [
            "10 celcius in fahrenheit is 50 fahrenheit"
          ]
        },
        {
          "context": {
            "dead": true,
            "left": {
              "dead": true,
              "level": 1,
              "marker": "fahrenheit",
              "number": "one",
              "range": {
                "end": 9,
                "start": 0
              },
              "text": "fahrenheit",
              "types": [
                "expression",
                "fahrenheit"
              ],
              "value": "fahrenheit",
              "word": "fahrenheit"
            },
            "level": 1,
            "marker": "equals",
            "range": {
              "end": 28,
              "start": 0
            },
            "right": {
              "dead": true,
              "evaluate": true,
              "isResponse": true,
              "level": 1,
              "marker": "plusExpression",
              "number": "one",
              "range": {
                "end": 28,
                "start": 13
              },
              "text": "celcius * 9 / 5 + 32",
              "types": [
                "number",
                "plusExpression"
              ],
              "value": null,
              "word": "+",
              "x": {
                "dead": true,
                "evaluate": true,
                "isResponse": true,
                "level": 1,
                "marker": "divideByExpression",
                "number": "one",
                "range": {
                  "end": 23,
                  "start": 13
                },
                "text": "celcius * 9 / 5",
                "types": [
                  "divideByExpression",
                  "number"
                ],
                "value": null,
                "word": "/",
                "x": {
                  "dead": true,
                  "evaluate": true,
                  "isResponse": true,
                  "level": 1,
                  "marker": "timesExpression",
                  "number": "one",
                  "range": {
                    "end": 21,
                    "start": 13
                  },
                  "text": "celcius * 9",
                  "types": [
                    "number",
                    "timesExpression"
                  ],
                  "value": null,
                  "word": "*",
                  "x": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 19,
                      "start": 13
                    },
                    "text": "celcius",
                    "types": [
                      "number",
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "celcius",
                    "word": "celcius"
                  },
                  "y": {
                    "dead": true,
                    "instance": true,
                    "level": 1,
                    "marker": "number",
                    "range": {
                      "end": 21,
                      "start": 21
                    },
                    "text": "9",
                    "types": [
                      "number"
                    ],
                    "value": 9,
                    "word": "9"
                  }
                },
                "y": {
                  "dead": true,
                  "instance": true,
                  "level": 1,
                  "marker": "number",
                  "range": {
                    "end": 23,
                    "start": 23
                  },
                  "text": "5",
                  "types": [
                    "number"
                  ],
                  "value": 5,
                  "word": "5"
                }
              },
              "y": {
                "dead": true,
                "instance": true,
                "level": 1,
                "marker": "number",
                "range": {
                  "end": 28,
                  "start": 27
                },
                "text": "32",
                "types": [
                  "number"
                ],
                "value": 32,
                "word": "32"
              }
            },
            "text": "fahrenheit = celcius*9/5 + 32",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "value": "=",
            "word": "="
          },
          "generatedParenthesized": "",
          "paraphrases": "fahrenheit = celcius * 9 / 5 + 32",
          "paraphrasesParenthesized": "((fahrenheit) = ((((celcius) * (9)) / (5)) + (32)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 53,
                "start": 0
              },
              "text": "fahrenheit",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 9,
                    "start": 0
                  },
                  "text": "fahrenheit",
                  "unknown": true,
                  "value": "fahrenheit",
                  "word": "fahrenheit"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 17,
                    "start": 11
                  },
                  "text": "celcuis",
                  "unknown": true,
                  "value": "celcuis",
                  "word": "celcuis"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 28,
                    "start": 23
                  },
                  "text": "kelvin",
                  "unknown": true,
                  "value": "kelvin",
                  "word": "kelvin"
                }
              ]
            },
            "range": {
              "end": 53,
              "start": 0
            },
            "text": "fahrenheit celcuis and kelvin are units of temperature",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "temperature",
                "number": "one",
                "range": {
                  "end": 53,
                  "start": 43
                },
                "text": "temperature",
                "types": [
                  "temperature"
                ],
                "value": "temperature",
                "word": "temperature"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unit",
                  "number": "many",
                  "range": {
                    "end": 38,
                    "start": 34
                  },
                  "text": "units",
                  "types": [
                    "unit"
                  ],
                  "value": "unit",
                  "word": "units"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "temperature",
                  "number": "one",
                  "range": {
                    "end": 53,
                    "start": 43
                  },
                  "text": "temperature",
                  "types": [
                    "temperature"
                  ],
                  "value": "temperature",
                  "word": "temperature"
                }
              ],
              "range": {
                "end": 53,
                "start": 34
              },
              "text": "units of temperature",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            "word": "are"
          },
          "generatedParenthesized": "",
          "paraphrases": "fahrenheit, celcuis and kelvin are units of temperature",
          "paraphrasesParenthesized": "(((fahrenheit), (celcuis) and (kelvin)) are ((units) of (temperature)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "one",
              "range": {
                "end": 25,
                "start": 0
              },
              "text": "temperature",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "temperature",
              "word": "temperature"
            },
            "range": {
              "end": 25,
              "start": 0
            },
            "text": "temperature is a dimension",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": {
                "default": true,
                "level": 0,
                "marker": "a",
                "range": {
                  "end": 15,
                  "start": 15
                },
                "text": "a",
                "word": "a"
              },
              "level": 1,
              "marker": "dimension",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "pullFromContext": false,
              "range": {
                "end": 25,
                "start": 15
              },
              "text": "a dimension",
              "types": [
                "dimension"
              ],
              "value": "dimension",
              "wantsValue": true,
              "word": "dimension"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "temperature is a dimension",
          "paraphrasesParenthesized": "((temperature) is ((a) (dimension)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "default": true,
              "isList": true,
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 30,
                "start": 0
              },
              "text": "dimension and unit",
              "types": [
                "list",
                "type"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 8,
                    "start": 0
                  },
                  "text": "dimension",
                  "unknown": true,
                  "value": "dimension",
                  "word": "dimension"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 17,
                    "start": 14
                  },
                  "text": "unit",
                  "unknown": true,
                  "value": "unit",
                  "word": "unit"
                }
              ],
              "word": "and"
            },
            "range": {
              "end": 30,
              "start": 0
            },
            "text": "dimension and unit are concepts",
            "topLevel": true,
            "touchedBy": [
              "dimensionTemplate#call2",
              "instance0#dimensionTemplate#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 30,
                "start": 23
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "dimension and unit are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "many",
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "formulas",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "formulas",
              "word": "formulas"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "formulas are concepts",
            "topLevel": true,
            "touchedBy": [
              "formulasTemplate#call2",
              "instance0#formulasTemplate#call2",
              "instance0#formulas#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 13
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "formulas are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "temperature is a dimension",
      "fahrenheit, celcuis and kelvin are units of temperature",
      "fahrenheit = celcius * 9 / 5 + 32",
      "what is 10 celcius in fahrenheit?"
    ],
    "paraphrasesParenthesized": [
      "((temperature) is ((a) (dimension)))",
      "(((fahrenheit), (celcuis) and (kelvin)) are ((units) of (temperature)))",
      "((fahrenheit) = ((((celcius) * (9)) / (5)) + (32)))",
      "(((what) is (((10) (celcius)) in (fahrenheit)))?)"
    ],
    "query": "temperature is a dimension\\nfahrenheit celcuis and kelvin are units of temperature\\nfahrenheit = celcius*9/5 + 32\\nwhat is 10 degrees celcius in fahrenheit",
    "responses": [
      "",
      "",
      "",
      "10 celcius in fahrenheit is 50 fahrenheit"
    ]
  },
  {
    "associations": [
      [
        [
          "convertToUnits",
          0
        ],
        [
          "dimension",
          0
        ],
        [
          "is",
          0
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "is",
          0
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "is",
          0
        ],
        [
          "number",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "convertToUnits",
          0
        ],
        [
          "is",
          0
        ],
        [
          "what",
          0
        ]
      ]
    ],
    "config": {
    },
    "contexts": [
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "number": "one",
          "range": {
            "end": 16,
            "start": 0
          },
          "text": "c1",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "c1",
          "word": "c1"
        },
        "range": {
          "end": 16,
          "start": 0
        },
        "text": "c1 is a dimension",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": {
            "default": true,
            "level": 0,
            "marker": "a",
            "range": {
              "end": 6,
              "start": 6
            },
            "text": "a",
            "word": "a"
          },
          "level": 1,
          "marker": "dimension",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "pullFromContext": false,
          "range": {
            "end": 16,
            "start": 6
          },
          "text": "a dimension",
          "types": [
            "dimension"
          ],
          "value": "dimension",
          "wantsValue": true,
          "word": "dimension"
        },
        "word": "is"
      },
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "many",
        "one": {
          "level": 1,
          "listable": true,
          "marker": "list",
          "number": "many",
          "range": {
            "end": 24,
            "start": 0
          },
          "text": "a1 and b1 are units of d1",
          "types": [
            "list",
            "unknown"
          ],
          "value": [
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 1,
                "start": 0
              },
              "text": "a1",
              "unknown": true,
              "value": "a1",
              "word": "a1"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 8,
                "start": 7
              },
              "text": "b1",
              "unknown": true,
              "value": "b1",
              "word": "b1"
            }
          ]
        },
        "range": {
          "end": 24,
          "start": 0
        },
        "text": "a1 and b1 are units of d1",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "level": 1,
          "marker": "unit",
          "number": "many",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "unknown",
            "range": {
              "end": 24,
              "start": 23
            },
            "text": "d1",
            "types": [
              "unknown"
            ],
            "unknown": true,
            "value": "d1",
            "word": "d1"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "range": {
                "end": 18,
                "start": 14
              },
              "text": "units",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 24,
                "start": 23
              },
              "text": "d1",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "d1",
              "word": "d1"
            }
          ],
          "range": {
            "end": 24,
            "start": 14
          },
          "text": "units of d1",
          "types": [
            "unit"
          ],
          "value": "unit",
          "word": "units"
        },
        "word": "are"
      },
      {
        "context": {
          "dead": true,
          "level": 2,
          "marker": "is",
          "number": "many",
          "one": {
            "dead": true,
            "default": true,
            "determined": true,
            "level": 1,
            "marker": "what",
            "number": "many",
            "query": [
              "what"
            ],
            "range": {
              "end": 19,
              "start": 0
            },
            "text": "what",
            "types": [
              "what"
            ],
            "value": "what",
            "word": "what"
          },
          "query": [
            "what"
          ],
          "range": {
            "end": 19,
            "start": 0
          },
          "text": "what are 10 a1 in b1",
          "topLevel": true,
          "two": {
            "dead": true,
            "default": true,
            "from": {
              "amount": {
                "dead": true,
                "instance": true,
                "level": 1,
                "marker": "number",
                "range": {
                  "end": 10,
                  "start": 9
                },
                "text": "10",
                "types": [
                  "number"
                ],
                "value": 10,
                "word": "10"
              },
              "dead": true,
              "level": 1,
              "marker": "dimension",
              "range": {
                "end": 13,
                "start": 9
              },
              "text": "10 a1",
              "types": [
                "dimension"
              ],
              "unit": {
                "dead": true,
                "level": 1,
                "marker": "a1",
                "number": "one",
                "range": {
                  "end": 13,
                  "start": 12
                },
                "text": "a1",
                "types": [
                  "a1"
                ],
                "value": "a1",
                "word": "a1"
              },
              "value": 10
            },
            "level": 1,
            "marker": "convertToUnits",
            "range": {
              "end": 19,
              "start": 9
            },
            "text": "10 a1 in b1",
            "to": {
              "dead": true,
              "level": 1,
              "marker": "b1",
              "number": "one",
              "range": {
                "end": 19,
                "start": 18
              },
              "text": "b1",
              "types": [
                "b1"
              ],
              "value": "b1",
              "word": "b1"
            },
            "types": [
              "convertToUnits"
            ],
            "word": "in"
          },
          "word": "are"
        },
        "error": [
          "ERROR while applying (dialogues/#4) KM 'dialogues' ordinal: 4 where: \"/home/dev/code/theprogrammablemind/kms/common/dialogues.js:666\"\n to\n {\n  \"query\": [\n    \"what\"\n  ],\n  \"number\": \"many\",\n  \"text\": \"what are 10 a1 in b1\",\n  \"marker\": \"is\",\n  \"word\": \"are\",\n  \"range\": {\n    \"start\": 0,\n    \"end\": 19\n  },\n  \"one\": {\n    \"query\": [\n      \"what\"\n    ],\n    \"number\": \"many\",\n    \"marker\": \"what\",\n    \"value\": \"what\",\n    \"default\": true,\n    \"text\": \"what\",\n    \"word\": \"what\",\n    \"range\": {\n      \"start\": 0,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"determined\": true,\n    \"types\": [\n      \"what\"\n    ],\n    \"level\": 1\n  },\n  \"two\": {\n    \"marker\": \"convertToUnits\",\n    \"default\": true,\n    \"word\": \"in\",\n    \"text\": \"10 a1 in b1\",\n    \"range\": {\n      \"start\": 9,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"from\": {\n      \"marker\": \"dimension\",\n      \"unit\": {\n        \"value\": \"a1\",\n        \"number\": \"one\",\n        \"text\": \"a1\",\n        \"marker\": \"a1\",\n        \"word\": \"a1\",\n        \"range\": {\n          \"start\": 12,\n          \"end\": 13\n        },\n        \"dead\": true,\n        \"types\": [\n          \"a1\"\n        ],\n        \"level\": 1\n      },\n      \"value\": 10,\n      \"amount\": {\n        \"value\": 10,\n        \"instance\": true,\n        \"text\": \"10\",\n        \"marker\": \"number\",\n        \"word\": \"10\",\n        \"range\": {\n          \"start\": 9,\n          \"end\": 10\n        },\n        \"dead\": true,\n        \"types\": [\n          \"number\"\n        ],\n        \"level\": 1\n      },\n      \"text\": \"10 a1\",\n      \"range\": {\n        \"start\": 9,\n        \"end\": 13\n      },\n      \"dead\": true,\n      \"types\": [\n        \"dimension\"\n      ],\n      \"level\": 1\n    },\n    \"to\": {\n      \"value\": \"b1\",\n      \"number\": \"one\",\n      \"text\": \"b1\",\n      \"marker\": \"b1\",\n      \"word\": \"b1\",\n      \"range\": {\n        \"start\": 18,\n        \"end\": 19\n      },\n      \"dead\": true,\n      \"types\": [\n        \"b1\"\n      ],\n      \"level\": 1\n    },\n    \"types\": [\n      \"convertToUnits\"\n    ],\n    \"level\": 1\n  },\n  \"dead\": true,\n  \"level\": 2,\n  \"topLevel\": true\n}.\nError applying semantics 'what x is y?/home/dev/code/theprogrammablemind/kms/common/dialogues.js:666'. Error is ERROR while applying (dimension/#0) KM 'dimension' ordinal: 0 where: \"/home/dev/code/theprogrammablemind/kms/common/dimension.js:116\"\n to\n {\n  \"marker\": \"convertToUnits\",\n  \"default\": true,\n  \"word\": \"in\",\n  \"text\": \"10 a1 in b1\",\n  \"range\": {\n    \"start\": 9,\n    \"end\": 19\n  },\n  \"dead\": true,\n  \"from\": {\n    \"marker\": \"dimension\",\n    \"unit\": {\n      \"value\": \"a1\",\n      \"number\": \"one\",\n      \"text\": \"a1\",\n      \"marker\": \"a1\",\n      \"word\": \"a1\",\n      \"range\": {\n        \"start\": 12,\n        \"end\": 13\n      },\n      \"dead\": true,\n      \"types\": [\n        \"a1\"\n      ],\n      \"level\": 1\n    },\n    \"value\": 10,\n    \"amount\": {\n      \"value\": 10,\n      \"instance\": true,\n      \"text\": \"10\",\n      \"marker\": \"number\",\n      \"word\": \"10\",\n      \"range\": {\n        \"start\": 9,\n        \"end\": 10\n      },\n      \"dead\": true,\n      \"types\": [\n        \"number\"\n      ],\n      \"level\": 1\n    },\n    \"text\": \"10 a1\",\n    \"range\": {\n      \"start\": 9,\n      \"end\": 13\n    },\n    \"dead\": true,\n    \"types\": [\n      \"dimension\"\n    ],\n    \"level\": 1\n  },\n  \"to\": {\n    \"value\": \"b1\",\n    \"number\": \"one\",\n    \"text\": \"b1\",\n    \"marker\": \"b1\",\n    \"word\": \"b1\",\n    \"range\": {\n      \"start\": 18,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"types\": [\n      \"b1\"\n    ],\n    \"level\": 1\n  },\n  \"types\": [\n    \"convertToUnits\"\n  ],\n  \"level\": 1,\n  \"evaluate\": true\n}.\nError applying semantics '/home/dev/code/theprogrammablemind/kms/common/dimension.js:116'. Error is Error: {\"marker\":\"reason\",\"focusableForPhrase\":true,\"evalue\":{\"marker\":\"noconversion\",\"from\":{\"value\":\"a1\",\"number\":\"one\",\"text\":\"a1\",\"marker\":\"a1\",\"word\":\"a1\",\"range\":{\"start\":12,\"end\":13},\"dead\":true,\"types\":[\"a1\"],\"level\":1},\"to\":{\"value\":\"b1\",\"number\":\"one\",\"text\":\"b1\",\"marker\":\"b1\",\"word\":\"b1\",\"range\":{\"start\":18,\"end\":19},\"dead\":true,\"types\":[\"b1\"],\"level\":1}}} stack is Error: {\"marker\":\"reason\",\"focusableForPhrase\":true,\"evalue\":{\"marker\":\"noconversion\",\"from\":{\"value\":\"a1\",\"number\":\"one\",\"text\":\"a1\",\"marker\":\"a1\",\"word\":\"a1\",\"range\":{\"start\":12,\"end\":13},\"dead\":true,\"types\":[\"a1\"],\"level\":1},\"to\":{\"value\":\"b1\",\"number\":\"one\",\"text\":\"b1\",\"marker\":\"b1\",\"word\":\"b1\",\"range\":{\"start\":18,\"end\":19},\"dead\":true,\"types\":[\"b1\"],\"level\":1}}}\n    at args.error (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:158:11)\n    at Object.evaluator (/home/dev/code/theprogrammablemind/kms/common/dimension.js:146:13)\n    at Semantic.apply [as _apply] (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/config.js:318:35)\n    at Semantic.apply (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:124:10)\n    at Semantics.applyToContext (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:199:35)\n    at Semantics.apply (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:315:19)\n    at args.s (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:202:47)\n    at Config.getEvaluator (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/config.js:939:22)\n    at args.e (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:213:21)\n    at Semantic.apply [as _apply] (/home/dev/code/theprogrammablemind/kms/common/dialogues.js:689:24). Semantic is Semantic(({ context }) => bridge.id == context.marker && context.evaluate, ({callId, context, kms, e, error}) => {\n        /*\n        error(({context, e}) => {\n          context.evalue = 'dont know...'\n        })\n        */\n        if (callId == 'length#call3') {\n          debugger\n        }\n        const from = context.from;\n        const to = context.to;\n        let evalue;\n        let efrom = from\n        if (!from.unit) {\n          efrom = e(from).evalue\n        }\n        if (to.value == efrom.unit.value) {\n          evalue = efrom.amount\n        } else {\n          const formula = kms.formulas.api.get(to, [efrom.unit])\n          if (!formula) {\n            const reason = { marker: 'reason', focusableForPhrase: true, evalue: { marker: 'noconversion', from: efrom.unit, to } }\n            kms.stm.api.mentioned(reason)\n            error(reason)\n          }\n          kms.stm.api.setVariable(efrom.unit.value, efrom.amount)\n          evalue = e(formula)\n        }\n        /*\n        '{\n            \"marker\":\"dimension\",\n            \"unit\":{\"marker\":\"unit\",\"range\":{\"start\":19,\"end\":25},\"word\":\"celcius\",\"text\":\"celcius\",\"value\":\"celcius\",\"unknown\":true,\"types\":[\"unit\",\"unknown\"]},\n            \"value\":10,\n            \"amount\":{\"word\":\"degrees\",\"number\":\"many\",\"text\":\"10 degrees\",\"marker\":\"degree\",\"range\":{\"start\":8,\"end\":17},\"value\":10,\"amount\":{\"value\":10,\"text\":\"10\",\"marker\":\"number\",\"word\":\"10\",\"range\":{\"start\":8,\"end\":9},\"types\":[\"number\"]}},\n              \"text\":\"10 degrees celcius\",\"range\":{\"start\":8,\"end\":25}}'\n        */\n        context.evalue = { \n          paraphrase: true,\n          marker: 'dimension',\n          level: 1,\n          unit: to,\n          amount: { evalue, paraphrase: undefined }\n        }\n      })\nsee the evaluator property. The error has a retryCall property that will recall the function that failed.'. Semantic is Semantic(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.query, ({context, s, log, km, objects, e}) => {\n        const one = context.one;\n        const two = context.two;\n        let concept, value;\n        if (one.query) {\n          concept = one;\n          value = two;\n        } else {\n          concept = two;\n          value = one;\n        }\n        // km('dialogues').api.mentioned(concept)\n        // TODO wtf is the next line?\n        value = JSON.parse(JSON.stringify(value))\n        let instance = e(value)\n        if (false && instance.evalue) {\n          km('stm').api.mentioned(value)\n        }\n        if (instance.verbatim) {\n          context.evalue = { verbatim: instance.verbatim }\n          context.isResponse = true\n          return\n        }\n        // instance.focusable = ['one', 'two']\n        // concept = JSON.parse(JSON.stringify(value)) \n        concept = _.cloneDeep(value) \n        concept.isQuery = undefined\n        // greg101\n        // instance.focusableForPhrase = true\n        instance.focus = true\n        if (concept.hierarchy) {\n          concept.focusableForPhrase = true\n        }\n        // concept.focus = true\n\n        const many = isMany(concept) || isMany(instance)\n        const evalue = {\n          \"default\": true,\n          \"marker\": \"is\",\n          \"one\": concept,\n          \"two\": instance,\n          \"focusable\": ['two', 'one'],\n          \"word\": many ? \"are\" : \"is\",\n          \"number\": many ? \"many\" : undefined,\n        }\n        context.evalue = evalue\n        context.isResponse = true\n      }). The error has a retryCall property that will recall the function that failed.'"
        ],
        "evalue": "That is not known because there is no conversion between a1 and b1",
        "isResponse": true,
        "marker": "error",
        "reason": {
          "evalue": {
            "from": {
              "dead": true,
              "level": 1,
              "marker": "a1",
              "number": "one",
              "range": {
                "end": 13,
                "start": 12
              },
              "text": "a1",
              "types": [
                "a1"
              ],
              "value": "a1",
              "word": "a1"
            },
            "marker": "noconversion",
            "to": {
              "dead": true,
              "level": 1,
              "marker": "b1",
              "number": "one",
              "range": {
                "end": 19,
                "start": 18
              },
              "text": "b1",
              "types": [
                "b1"
              ],
              "value": "b1",
              "word": "b1"
            }
          },
          "focusableForPhrase": true,
          "marker": "reason"
        },
        "text": "[object Object]",
        "touchedBy": [
          "dimension#call4"
        ]
      }
    ],
    "generatedParenthesized": [
      "",
      "",
      "(That is not known because there is no conversion between a1 and b1)"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "a",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "list",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "unit",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "number",
            0
          ],
          "ops": [
            [
              "a1",
              0
            ],
            [
              "b1",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "number",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "a1",
            0
          ],
          "ops": [
            [
              "a1",
              0
            ],
            [
              "amountOfDimension",
              0
            ],
            [
              "b1",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "b1",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "b1",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "amountOfDimension",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "convertToUnits",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "comparable": "comparable2",
        "concept": "concept2",
        "countable": "countable2",
        "dialogues": "dialogues2",
        "dimension": "dimension1",
        "dimensionTemplate": "dimensionTemplate2",
        "formulas": "formulas2",
        "formulasTemplate": "formulasTemplate2",
        "gdefaults": "gdefaults2",
        "hierarchy": "hierarchy2",
        "math": "math2",
        "mathTemplate": "mathTemplate2",
        "meta": "meta2",
        "numbers": "numbers2",
        "pos": "pos2",
        "properties": "properties2",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "testing": "testing2"
      },
      "namespaced": {
        "comparable2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "countable2": {
        },
        "dialogues2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "dimension1": {
        },
        "dimensionTemplate2": {
        },
        "formulas2": {
          "formulas": {
          }
        },
        "formulasTemplate2": {
        },
        "gdefaults2": {
        },
        "hierarchy2": {
        },
        "math2": {
        },
        "mathTemplate2": {
        },
        "meta2": {
        },
        "numbers2": {
        },
        "pos2": {
        },
        "properties2": {
          "children": {
            "articlePOS": [
              "a",
              "the"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "concept": [
              "formula",
              "dimension",
              "unit"
            ],
            "dimension": [
              "c1"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "mathematical_operator": [
              "*",
              "+",
              "/",
              "-"
            ],
            "notAble": [
              "unknown"
            ],
            "object": [
              "unknown",
              "what",
              "whose"
            ],
            "preposition": [
              "between"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "xfx",
              "concept",
              "unknown",
              "it",
              "what",
              "whatAble",
              "this",
              "thisitthat",
              "reason"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "noun",
              "reason"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "unit": [
              "a1",
              "b1"
            ],
            "unknown": [
              "property"
            ],
            "verby": [
              "modifies",
              "is"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "object",
            "what",
            "queryable",
            "readonly",
            "property",
            "xfx",
            "theAble",
            "whose",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "between",
            "preposition",
            "concept",
            "modifies",
            "verby",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "articlePOS",
            "the",
            "notAble",
            "whatAble",
            "is",
            "toAble",
            "noun",
            "thisitthat",
            "reason",
            "that",
            "orAble",
            "ifAble",
            "*",
            "mathematical_operator",
            "+",
            "/",
            "-",
            "formula",
            "dimension",
            "unit",
            "c1",
            "a1",
            "b1"
          ],
          "parents": {
            "*": [
              "mathematical_operator"
            ],
            "+": [
              "mathematical_operator"
            ],
            "-": [
              "mathematical_operator"
            ],
            "/": [
              "mathematical_operator"
            ],
            "a": [
              "articlePOS"
            ],
            "a1": [
              "unit"
            ],
            "b1": [
              "unit"
            ],
            "between": [
              "preposition"
            ],
            "c1": [
              "dimension"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "dimension": [
              "concept"
            ],
            "formula": [
              "concept"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verby"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "modifies": [
              "verby"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble",
              "unknown"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "articlePOS"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "unit": [
              "concept"
            ],
            "unknown": [
              "hierarchyAble",
              "object",
              "notAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "*": {
              },
              "+": {
              },
              "-": {
              },
              "/": {
              },
              "a": {
              },
              "a1": {
              },
              "articlePOS": {
              },
              "b1": {
              },
              "between": {
              },
              "c1": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "dimension": {
              },
              "formula": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "mathematical_operator": {
              },
              "modifies": {
              },
              "notAble": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "toAble": {
              },
              "unit": {
              },
              "unknown": {
              },
              "verby": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
            {
              "evalue": {
                "from": {
                  "dead": true,
                  "level": 1,
                  "marker": "a1",
                  "number": "one",
                  "range": {
                    "end": 13,
                    "start": 12
                  },
                  "text": "a1",
                  "types": [
                    "a1"
                  ],
                  "value": "a1",
                  "word": "a1"
                },
                "marker": "noconversion",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "b1",
                  "number": "one",
                  "range": {
                    "end": 19,
                    "start": 18
                  },
                  "text": "b1",
                  "types": [
                    "b1"
                  ],
                  "value": "b1",
                  "word": "b1"
                }
              },
              "focusableForPhrase": true,
              "marker": "reason",
              "pullFromContext": false
            }
          ],
          "variables": {
          }
        },
        "testing2": {
        }
      },
      "processed": [
        {
          "context": {
            "context": {
              "dead": true,
              "level": 2,
              "marker": "is",
              "number": "many",
              "one": {
                "dead": true,
                "default": true,
                "determined": true,
                "level": 1,
                "marker": "what",
                "number": "many",
                "query": [
                  "what"
                ],
                "range": {
                  "end": 19,
                  "start": 0
                },
                "text": "what",
                "types": [
                  "what"
                ],
                "value": "what",
                "word": "what"
              },
              "query": [
                "what"
              ],
              "range": {
                "end": 19,
                "start": 0
              },
              "text": "what are 10 a1 in b1",
              "topLevel": true,
              "two": {
                "dead": true,
                "default": true,
                "from": {
                  "amount": {
                    "dead": true,
                    "instance": true,
                    "level": 1,
                    "marker": "number",
                    "range": {
                      "end": 10,
                      "start": 9
                    },
                    "text": "10",
                    "types": [
                      "number"
                    ],
                    "value": 10,
                    "word": "10"
                  },
                  "dead": true,
                  "level": 1,
                  "marker": "dimension",
                  "range": {
                    "end": 13,
                    "start": 9
                  },
                  "text": "10 a1",
                  "types": [
                    "dimension"
                  ],
                  "unit": {
                    "dead": true,
                    "level": 1,
                    "marker": "a1",
                    "number": "one",
                    "range": {
                      "end": 13,
                      "start": 12
                    },
                    "text": "a1",
                    "types": [
                      "a1"
                    ],
                    "value": "a1",
                    "word": "a1"
                  },
                  "value": 10
                },
                "level": 1,
                "marker": "convertToUnits",
                "range": {
                  "end": 19,
                  "start": 9
                },
                "text": "10 a1 in b1",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "b1",
                  "number": "one",
                  "range": {
                    "end": 19,
                    "start": 18
                  },
                  "text": "b1",
                  "types": [
                    "b1"
                  ],
                  "value": "b1",
                  "word": "b1"
                },
                "types": [
                  "convertToUnits"
                ],
                "word": "in"
              },
              "word": "are"
            },
            "error": [
              "ERROR while applying (dialogues/#4) KM 'dialogues' ordinal: 4 where: \"/home/dev/code/theprogrammablemind/kms/common/dialogues.js:666\"\n to\n {\n  \"query\": [\n    \"what\"\n  ],\n  \"number\": \"many\",\n  \"text\": \"what are 10 a1 in b1\",\n  \"marker\": \"is\",\n  \"word\": \"are\",\n  \"range\": {\n    \"start\": 0,\n    \"end\": 19\n  },\n  \"one\": {\n    \"query\": [\n      \"what\"\n    ],\n    \"number\": \"many\",\n    \"marker\": \"what\",\n    \"value\": \"what\",\n    \"default\": true,\n    \"text\": \"what\",\n    \"word\": \"what\",\n    \"range\": {\n      \"start\": 0,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"determined\": true,\n    \"types\": [\n      \"what\"\n    ],\n    \"level\": 1\n  },\n  \"two\": {\n    \"marker\": \"convertToUnits\",\n    \"default\": true,\n    \"word\": \"in\",\n    \"text\": \"10 a1 in b1\",\n    \"range\": {\n      \"start\": 9,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"from\": {\n      \"marker\": \"dimension\",\n      \"unit\": {\n        \"value\": \"a1\",\n        \"number\": \"one\",\n        \"text\": \"a1\",\n        \"marker\": \"a1\",\n        \"word\": \"a1\",\n        \"range\": {\n          \"start\": 12,\n          \"end\": 13\n        },\n        \"dead\": true,\n        \"types\": [\n          \"a1\"\n        ],\n        \"level\": 1\n      },\n      \"value\": 10,\n      \"amount\": {\n        \"value\": 10,\n        \"instance\": true,\n        \"text\": \"10\",\n        \"marker\": \"number\",\n        \"word\": \"10\",\n        \"range\": {\n          \"start\": 9,\n          \"end\": 10\n        },\n        \"dead\": true,\n        \"types\": [\n          \"number\"\n        ],\n        \"level\": 1\n      },\n      \"text\": \"10 a1\",\n      \"range\": {\n        \"start\": 9,\n        \"end\": 13\n      },\n      \"dead\": true,\n      \"types\": [\n        \"dimension\"\n      ],\n      \"level\": 1\n    },\n    \"to\": {\n      \"value\": \"b1\",\n      \"number\": \"one\",\n      \"text\": \"b1\",\n      \"marker\": \"b1\",\n      \"word\": \"b1\",\n      \"range\": {\n        \"start\": 18,\n        \"end\": 19\n      },\n      \"dead\": true,\n      \"types\": [\n        \"b1\"\n      ],\n      \"level\": 1\n    },\n    \"types\": [\n      \"convertToUnits\"\n    ],\n    \"level\": 1\n  },\n  \"dead\": true,\n  \"level\": 2,\n  \"topLevel\": true\n}.\nError applying semantics 'what x is y?/home/dev/code/theprogrammablemind/kms/common/dialogues.js:666'. Error is ERROR while applying (dimension/#0) KM 'dimension' ordinal: 0 where: \"/home/dev/code/theprogrammablemind/kms/common/dimension.js:116\"\n to\n {\n  \"marker\": \"convertToUnits\",\n  \"default\": true,\n  \"word\": \"in\",\n  \"text\": \"10 a1 in b1\",\n  \"range\": {\n    \"start\": 9,\n    \"end\": 19\n  },\n  \"dead\": true,\n  \"from\": {\n    \"marker\": \"dimension\",\n    \"unit\": {\n      \"value\": \"a1\",\n      \"number\": \"one\",\n      \"text\": \"a1\",\n      \"marker\": \"a1\",\n      \"word\": \"a1\",\n      \"range\": {\n        \"start\": 12,\n        \"end\": 13\n      },\n      \"dead\": true,\n      \"types\": [\n        \"a1\"\n      ],\n      \"level\": 1\n    },\n    \"value\": 10,\n    \"amount\": {\n      \"value\": 10,\n      \"instance\": true,\n      \"text\": \"10\",\n      \"marker\": \"number\",\n      \"word\": \"10\",\n      \"range\": {\n        \"start\": 9,\n        \"end\": 10\n      },\n      \"dead\": true,\n      \"types\": [\n        \"number\"\n      ],\n      \"level\": 1\n    },\n    \"text\": \"10 a1\",\n    \"range\": {\n      \"start\": 9,\n      \"end\": 13\n    },\n    \"dead\": true,\n    \"types\": [\n      \"dimension\"\n    ],\n    \"level\": 1\n  },\n  \"to\": {\n    \"value\": \"b1\",\n    \"number\": \"one\",\n    \"text\": \"b1\",\n    \"marker\": \"b1\",\n    \"word\": \"b1\",\n    \"range\": {\n      \"start\": 18,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"types\": [\n      \"b1\"\n    ],\n    \"level\": 1\n  },\n  \"types\": [\n    \"convertToUnits\"\n  ],\n  \"level\": 1,\n  \"evaluate\": true\n}.\nError applying semantics '/home/dev/code/theprogrammablemind/kms/common/dimension.js:116'. Error is Error: {\"marker\":\"reason\",\"focusableForPhrase\":true,\"evalue\":{\"marker\":\"noconversion\",\"from\":{\"value\":\"a1\",\"number\":\"one\",\"text\":\"a1\",\"marker\":\"a1\",\"word\":\"a1\",\"range\":{\"start\":12,\"end\":13},\"dead\":true,\"types\":[\"a1\"],\"level\":1},\"to\":{\"value\":\"b1\",\"number\":\"one\",\"text\":\"b1\",\"marker\":\"b1\",\"word\":\"b1\",\"range\":{\"start\":18,\"end\":19},\"dead\":true,\"types\":[\"b1\"],\"level\":1}}} stack is Error: {\"marker\":\"reason\",\"focusableForPhrase\":true,\"evalue\":{\"marker\":\"noconversion\",\"from\":{\"value\":\"a1\",\"number\":\"one\",\"text\":\"a1\",\"marker\":\"a1\",\"word\":\"a1\",\"range\":{\"start\":12,\"end\":13},\"dead\":true,\"types\":[\"a1\"],\"level\":1},\"to\":{\"value\":\"b1\",\"number\":\"one\",\"text\":\"b1\",\"marker\":\"b1\",\"word\":\"b1\",\"range\":{\"start\":18,\"end\":19},\"dead\":true,\"types\":[\"b1\"],\"level\":1}}}\n    at args.error (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:158:11)\n    at Object.evaluator (/home/dev/code/theprogrammablemind/kms/common/dimension.js:146:13)\n    at Semantic.apply [as _apply] (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/config.js:318:35)\n    at Semantic.apply (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:124:10)\n    at Semantics.applyToContext (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:199:35)\n    at Semantics.apply (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:315:19)\n    at args.s (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:202:47)\n    at Config.getEvaluator (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/config.js:939:22)\n    at args.e (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:213:21)\n    at Semantic.apply [as _apply] (/home/dev/code/theprogrammablemind/kms/common/dialogues.js:689:24). Semantic is Semantic(({ context }) => bridge.id == context.marker && context.evaluate, ({callId, context, kms, e, error}) => {\n        /*\n        error(({context, e}) => {\n          context.evalue = 'dont know...'\n        })\n        */\n        if (callId == 'length#call3') {\n          debugger\n        }\n        const from = context.from;\n        const to = context.to;\n        let evalue;\n        let efrom = from\n        if (!from.unit) {\n          efrom = e(from).evalue\n        }\n        if (to.value == efrom.unit.value) {\n          evalue = efrom.amount\n        } else {\n          const formula = kms.formulas.api.get(to, [efrom.unit])\n          if (!formula) {\n            const reason = { marker: 'reason', focusableForPhrase: true, evalue: { marker: 'noconversion', from: efrom.unit, to } }\n            kms.stm.api.mentioned(reason)\n            error(reason)\n          }\n          kms.stm.api.setVariable(efrom.unit.value, efrom.amount)\n          evalue = e(formula)\n        }\n        /*\n        '{\n            \"marker\":\"dimension\",\n            \"unit\":{\"marker\":\"unit\",\"range\":{\"start\":19,\"end\":25},\"word\":\"celcius\",\"text\":\"celcius\",\"value\":\"celcius\",\"unknown\":true,\"types\":[\"unit\",\"unknown\"]},\n            \"value\":10,\n            \"amount\":{\"word\":\"degrees\",\"number\":\"many\",\"text\":\"10 degrees\",\"marker\":\"degree\",\"range\":{\"start\":8,\"end\":17},\"value\":10,\"amount\":{\"value\":10,\"text\":\"10\",\"marker\":\"number\",\"word\":\"10\",\"range\":{\"start\":8,\"end\":9},\"types\":[\"number\"]}},\n              \"text\":\"10 degrees celcius\",\"range\":{\"start\":8,\"end\":25}}'\n        */\n        context.evalue = { \n          paraphrase: true,\n          marker: 'dimension',\n          level: 1,\n          unit: to,\n          amount: { evalue, paraphrase: undefined }\n        }\n      })\nsee the evaluator property. The error has a retryCall property that will recall the function that failed.'. Semantic is Semantic(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.query, ({context, s, log, km, objects, e}) => {\n        const one = context.one;\n        const two = context.two;\n        let concept, value;\n        if (one.query) {\n          concept = one;\n          value = two;\n        } else {\n          concept = two;\n          value = one;\n        }\n        // km('dialogues').api.mentioned(concept)\n        // TODO wtf is the next line?\n        value = JSON.parse(JSON.stringify(value))\n        let instance = e(value)\n        if (false && instance.evalue) {\n          km('stm').api.mentioned(value)\n        }\n        if (instance.verbatim) {\n          context.evalue = { verbatim: instance.verbatim }\n          context.isResponse = true\n          return\n        }\n        // instance.focusable = ['one', 'two']\n        // concept = JSON.parse(JSON.stringify(value)) \n        concept = _.cloneDeep(value) \n        concept.isQuery = undefined\n        // greg101\n        // instance.focusableForPhrase = true\n        instance.focus = true\n        if (concept.hierarchy) {\n          concept.focusableForPhrase = true\n        }\n        // concept.focus = true\n\n        const many = isMany(concept) || isMany(instance)\n        const evalue = {\n          \"default\": true,\n          \"marker\": \"is\",\n          \"one\": concept,\n          \"two\": instance,\n          \"focusable\": ['two', 'one'],\n          \"word\": many ? \"are\" : \"is\",\n          \"number\": many ? \"many\" : undefined,\n        }\n        context.evalue = evalue\n        context.isResponse = true\n      }). The error has a retryCall property that will recall the function that failed.'"
            ],
            "evalue": "That is not known because there is no conversion between a1 and b1",
            "isResponse": true,
            "marker": "error",
            "reason": {
              "evalue": {
                "from": {
                  "dead": true,
                  "level": 1,
                  "marker": "a1",
                  "number": "one",
                  "range": {
                    "end": 13,
                    "start": 12
                  },
                  "text": "a1",
                  "types": [
                    "a1"
                  ],
                  "value": "a1",
                  "word": "a1"
                },
                "marker": "noconversion",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "b1",
                  "number": "one",
                  "range": {
                    "end": 19,
                    "start": 18
                  },
                  "text": "b1",
                  "types": [
                    "b1"
                  ],
                  "value": "b1",
                  "word": "b1"
                }
              },
              "focusableForPhrase": true,
              "marker": "reason"
            },
            "text": "[object Object]",
            "touchedBy": [
              "dimension#call4"
            ]
          },
          "generatedParenthesized": "(That is not known because there is no conversion between a1 and b1)",
          "paraphrases": "what are 10 a1 in b1?",
          "paraphrasesParenthesized": "((((what) are (((10) (a1)) in (b1)))?))",
          "responses": [
            "That is not known because there is no conversion between a1 and b1"
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 24,
                "start": 0
              },
              "text": "a1 and b1 are units of d1",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 1,
                    "start": 0
                  },
                  "text": "a1",
                  "unknown": true,
                  "value": "a1",
                  "word": "a1"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 8,
                    "start": 7
                  },
                  "text": "b1",
                  "unknown": true,
                  "value": "b1",
                  "word": "b1"
                }
              ]
            },
            "range": {
              "end": 24,
              "start": 0
            },
            "text": "a1 and b1 are units of d1",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 24,
                  "start": 23
                },
                "text": "d1",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "d1",
                "word": "d1"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unit",
                  "number": "many",
                  "range": {
                    "end": 18,
                    "start": 14
                  },
                  "text": "units",
                  "types": [
                    "unit"
                  ],
                  "value": "unit",
                  "word": "units"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 24,
                    "start": 23
                  },
                  "text": "d1",
                  "types": [
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "d1",
                  "word": "d1"
                }
              ],
              "range": {
                "end": 24,
                "start": 14
              },
              "text": "units of d1",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            "word": "are"
          },
          "generatedParenthesized": "",
          "paraphrases": "a1 and b1 are units of d1",
          "paraphrasesParenthesized": "(((a1) and (b1)) are ((units) of (d1)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "one",
              "range": {
                "end": 16,
                "start": 0
              },
              "text": "c1",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "c1",
              "word": "c1"
            },
            "range": {
              "end": 16,
              "start": 0
            },
            "text": "c1 is a dimension",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": {
                "default": true,
                "level": 0,
                "marker": "a",
                "range": {
                  "end": 6,
                  "start": 6
                },
                "text": "a",
                "word": "a"
              },
              "level": 1,
              "marker": "dimension",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "pullFromContext": false,
              "range": {
                "end": 16,
                "start": 6
              },
              "text": "a dimension",
              "types": [
                "dimension"
              ],
              "value": "dimension",
              "wantsValue": true,
              "word": "dimension"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "c1 is a dimension",
          "paraphrasesParenthesized": "((c1) is ((a) (dimension)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "default": true,
              "isList": true,
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 30,
                "start": 0
              },
              "text": "dimension and unit",
              "types": [
                "list",
                "type"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 8,
                    "start": 0
                  },
                  "text": "dimension",
                  "unknown": true,
                  "value": "dimension",
                  "word": "dimension"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 17,
                    "start": 14
                  },
                  "text": "unit",
                  "unknown": true,
                  "value": "unit",
                  "word": "unit"
                }
              ],
              "word": "and"
            },
            "range": {
              "end": 30,
              "start": 0
            },
            "text": "dimension and unit are concepts",
            "topLevel": true,
            "touchedBy": [
              "dimensionTemplate#call2",
              "instance0#dimensionTemplate#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 30,
                "start": 23
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "dimension and unit are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "many",
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "formulas",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "formulas",
              "word": "formulas"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "formulas are concepts",
            "topLevel": true,
            "touchedBy": [
              "formulasTemplate#call2",
              "instance0#formulasTemplate#call2",
              "instance0#formulas#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 13
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "formulas are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 37,
                "start": 0
              },
              "text": "* +",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 0,
                    "start": 0
                  },
                  "text": "*",
                  "unknown": true,
                  "value": "*",
                  "word": "*"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 2,
                    "start": 2
                  },
                  "text": "+",
                  "unknown": true,
                  "value": "+",
                  "word": "+"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 4,
                    "start": 4
                  },
                  "text": "/",
                  "unknown": true,
                  "value": "/",
                  "word": "/"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 10,
                    "start": 10
                  },
                  "text": "-",
                  "unknown": true,
                  "value": "-",
                  "word": "-"
                }
              ]
            },
            "range": {
              "end": 37,
              "start": 0
            },
            "text": "* + / and - are mathematical operators",
            "topLevel": true,
            "touchedBy": [
              "mathTemplate#call2",
              "instance1#mathTemplate#call2",
              "instance1#math#call2",
              "instance1#formulas#call2",
              "instance1#dimension#call2"
            ],
            "two": {
              "atomic": true,
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "mathematical_operator",
              "modifier_mathematical": {
                "level": 0,
                "marker": "mathematical",
                "range": {
                  "end": 27,
                  "start": 16
                },
                "text": "mathematical",
                "types": [
                  "mathematical"
                ],
                "value": "mathematical",
                "word": "mathematical"
              },
              "modifiers": [
                "modifier_mathematical"
              ],
              "number": "many",
              "range": {
                "end": 37,
                "start": 16
              },
              "text": "mathematical operators",
              "types": [
                "mathematical_operator",
                "operator"
              ],
              "value": "mathematical_operator",
              "word": "operators"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "*, +, / and - are mathematical operators",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "c1 is a dimension",
      "a1 and b1 are units of d1",
      "what are 10 a1 in b1?"
    ],
    "paraphrasesParenthesized": [
      "((c1) is ((a) (dimension)))",
      "(((a1) and (b1)) are ((units) of (d1)))",
      "((((what) are (((10) (a1)) in (b1)))?))"
    ],
    "query": "c1 is a dimension\\na1 and b1 are units of d1\\nwhat are 10 a1 in b1 ",
    "responses": [
      "",
      "",
      "That is not known because there is no conversion between a1 and b1"
    ]
  },
  {
    "associations": [
      [
        [
          "is",
          0
        ],
        [
          "reason",
          0
        ],
        [
          "the",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "reason",
          0
        ],
        [
          "the",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "the",
          0
        ]
      ]
    ],
    "config": {
    },
    "contexts": [
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "number": "one",
          "range": {
            "end": 16,
            "start": 0
          },
          "text": "c1",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "c1",
          "word": "c1"
        },
        "range": {
          "end": 16,
          "start": 0
        },
        "text": "c1 is a dimension",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": {
            "default": true,
            "level": 0,
            "marker": "a",
            "range": {
              "end": 6,
              "start": 6
            },
            "text": "a",
            "word": "a"
          },
          "level": 1,
          "marker": "dimension",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "pullFromContext": false,
          "range": {
            "end": 16,
            "start": 6
          },
          "text": "a dimension",
          "types": [
            "dimension"
          ],
          "value": "dimension",
          "wantsValue": true,
          "word": "dimension"
        },
        "word": "is"
      },
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "many",
        "one": {
          "level": 1,
          "listable": true,
          "marker": "list",
          "number": "many",
          "range": {
            "end": 24,
            "start": 0
          },
          "text": "a1 and b1 are units of d1",
          "types": [
            "list",
            "unknown"
          ],
          "value": [
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 1,
                "start": 0
              },
              "text": "a1",
              "unknown": true,
              "value": "a1",
              "word": "a1"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 8,
                "start": 7
              },
              "text": "b1",
              "unknown": true,
              "value": "b1",
              "word": "b1"
            }
          ]
        },
        "range": {
          "end": 24,
          "start": 0
        },
        "text": "a1 and b1 are units of d1",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "level": 1,
          "marker": "unit",
          "number": "many",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "unknown",
            "range": {
              "end": 24,
              "start": 23
            },
            "text": "d1",
            "types": [
              "unknown"
            ],
            "unknown": true,
            "value": "d1",
            "word": "d1"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "range": {
                "end": 18,
                "start": 14
              },
              "text": "units",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 24,
                "start": 23
              },
              "text": "d1",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "d1",
              "word": "d1"
            }
          ],
          "range": {
            "end": 24,
            "start": 14
          },
          "text": "units of d1",
          "types": [
            "unit"
          ],
          "value": "unit",
          "word": "units"
        },
        "word": "are"
      },
      {
        "context": {
          "dead": true,
          "level": 2,
          "marker": "is",
          "number": "many",
          "one": {
            "dead": true,
            "default": true,
            "determined": true,
            "level": 1,
            "marker": "what",
            "number": "many",
            "query": [
              "what"
            ],
            "range": {
              "end": 19,
              "start": 0
            },
            "text": "what",
            "types": [
              "what"
            ],
            "value": "what",
            "word": "what"
          },
          "query": [
            "what"
          ],
          "range": {
            "end": 19,
            "start": 0
          },
          "text": "what are 10 a1 in b1",
          "topLevel": true,
          "two": {
            "dead": true,
            "default": true,
            "from": {
              "amount": {
                "dead": true,
                "instance": true,
                "level": 1,
                "marker": "number",
                "range": {
                  "end": 10,
                  "start": 9
                },
                "text": "10",
                "types": [
                  "number"
                ],
                "value": 10,
                "word": "10"
              },
              "dead": true,
              "level": 1,
              "marker": "dimension",
              "range": {
                "end": 13,
                "start": 9
              },
              "text": "10 a1",
              "types": [
                "dimension"
              ],
              "unit": {
                "dead": true,
                "level": 1,
                "marker": "a1",
                "number": "one",
                "range": {
                  "end": 13,
                  "start": 12
                },
                "text": "a1",
                "types": [
                  "a1"
                ],
                "value": "a1",
                "word": "a1"
              },
              "value": 10
            },
            "level": 1,
            "marker": "convertToUnits",
            "range": {
              "end": 19,
              "start": 9
            },
            "text": "10 a1 in b1",
            "to": {
              "dead": true,
              "level": 1,
              "marker": "b1",
              "number": "one",
              "range": {
                "end": 19,
                "start": 18
              },
              "text": "b1",
              "types": [
                "b1"
              ],
              "value": "b1",
              "word": "b1"
            },
            "types": [
              "convertToUnits"
            ],
            "word": "in"
          },
          "word": "are"
        },
        "error": [
          "ERROR while applying (dialogues/#4) KM 'dialogues' ordinal: 4 where: \"/home/dev/code/theprogrammablemind/kms/common/dialogues.js:666\"\n to\n {\n  \"query\": [\n    \"what\"\n  ],\n  \"number\": \"many\",\n  \"text\": \"what are 10 a1 in b1\",\n  \"marker\": \"is\",\n  \"word\": \"are\",\n  \"range\": {\n    \"start\": 0,\n    \"end\": 19\n  },\n  \"one\": {\n    \"query\": [\n      \"what\"\n    ],\n    \"number\": \"many\",\n    \"marker\": \"what\",\n    \"value\": \"what\",\n    \"default\": true,\n    \"text\": \"what\",\n    \"word\": \"what\",\n    \"range\": {\n      \"start\": 0,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"determined\": true,\n    \"types\": [\n      \"what\"\n    ],\n    \"level\": 1\n  },\n  \"two\": {\n    \"marker\": \"convertToUnits\",\n    \"default\": true,\n    \"word\": \"in\",\n    \"text\": \"10 a1 in b1\",\n    \"range\": {\n      \"start\": 9,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"from\": {\n      \"marker\": \"dimension\",\n      \"unit\": {\n        \"value\": \"a1\",\n        \"number\": \"one\",\n        \"text\": \"a1\",\n        \"marker\": \"a1\",\n        \"word\": \"a1\",\n        \"range\": {\n          \"start\": 12,\n          \"end\": 13\n        },\n        \"dead\": true,\n        \"types\": [\n          \"a1\"\n        ],\n        \"level\": 1\n      },\n      \"value\": 10,\n      \"amount\": {\n        \"value\": 10,\n        \"instance\": true,\n        \"text\": \"10\",\n        \"marker\": \"number\",\n        \"word\": \"10\",\n        \"range\": {\n          \"start\": 9,\n          \"end\": 10\n        },\n        \"dead\": true,\n        \"types\": [\n          \"number\"\n        ],\n        \"level\": 1\n      },\n      \"text\": \"10 a1\",\n      \"range\": {\n        \"start\": 9,\n        \"end\": 13\n      },\n      \"dead\": true,\n      \"types\": [\n        \"dimension\"\n      ],\n      \"level\": 1\n    },\n    \"to\": {\n      \"value\": \"b1\",\n      \"number\": \"one\",\n      \"text\": \"b1\",\n      \"marker\": \"b1\",\n      \"word\": \"b1\",\n      \"range\": {\n        \"start\": 18,\n        \"end\": 19\n      },\n      \"dead\": true,\n      \"types\": [\n        \"b1\"\n      ],\n      \"level\": 1\n    },\n    \"types\": [\n      \"convertToUnits\"\n    ],\n    \"level\": 1\n  },\n  \"dead\": true,\n  \"level\": 2,\n  \"topLevel\": true\n}.\nError applying semantics 'what x is y?/home/dev/code/theprogrammablemind/kms/common/dialogues.js:666'. Error is ERROR while applying (dimension/#0) KM 'dimension' ordinal: 0 where: \"/home/dev/code/theprogrammablemind/kms/common/dimension.js:116\"\n to\n {\n  \"marker\": \"convertToUnits\",\n  \"default\": true,\n  \"word\": \"in\",\n  \"text\": \"10 a1 in b1\",\n  \"range\": {\n    \"start\": 9,\n    \"end\": 19\n  },\n  \"dead\": true,\n  \"from\": {\n    \"marker\": \"dimension\",\n    \"unit\": {\n      \"value\": \"a1\",\n      \"number\": \"one\",\n      \"text\": \"a1\",\n      \"marker\": \"a1\",\n      \"word\": \"a1\",\n      \"range\": {\n        \"start\": 12,\n        \"end\": 13\n      },\n      \"dead\": true,\n      \"types\": [\n        \"a1\"\n      ],\n      \"level\": 1\n    },\n    \"value\": 10,\n    \"amount\": {\n      \"value\": 10,\n      \"instance\": true,\n      \"text\": \"10\",\n      \"marker\": \"number\",\n      \"word\": \"10\",\n      \"range\": {\n        \"start\": 9,\n        \"end\": 10\n      },\n      \"dead\": true,\n      \"types\": [\n        \"number\"\n      ],\n      \"level\": 1\n    },\n    \"text\": \"10 a1\",\n    \"range\": {\n      \"start\": 9,\n      \"end\": 13\n    },\n    \"dead\": true,\n    \"types\": [\n      \"dimension\"\n    ],\n    \"level\": 1\n  },\n  \"to\": {\n    \"value\": \"b1\",\n    \"number\": \"one\",\n    \"text\": \"b1\",\n    \"marker\": \"b1\",\n    \"word\": \"b1\",\n    \"range\": {\n      \"start\": 18,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"types\": [\n      \"b1\"\n    ],\n    \"level\": 1\n  },\n  \"types\": [\n    \"convertToUnits\"\n  ],\n  \"level\": 1,\n  \"evaluate\": true\n}.\nError applying semantics '/home/dev/code/theprogrammablemind/kms/common/dimension.js:116'. Error is Error: {\"marker\":\"reason\",\"focusableForPhrase\":true,\"evalue\":{\"marker\":\"noconversion\",\"from\":{\"value\":\"a1\",\"number\":\"one\",\"text\":\"a1\",\"marker\":\"a1\",\"word\":\"a1\",\"range\":{\"start\":12,\"end\":13},\"dead\":true,\"types\":[\"a1\"],\"level\":1},\"to\":{\"value\":\"b1\",\"number\":\"one\",\"text\":\"b1\",\"marker\":\"b1\",\"word\":\"b1\",\"range\":{\"start\":18,\"end\":19},\"dead\":true,\"types\":[\"b1\"],\"level\":1}}} stack is Error: {\"marker\":\"reason\",\"focusableForPhrase\":true,\"evalue\":{\"marker\":\"noconversion\",\"from\":{\"value\":\"a1\",\"number\":\"one\",\"text\":\"a1\",\"marker\":\"a1\",\"word\":\"a1\",\"range\":{\"start\":12,\"end\":13},\"dead\":true,\"types\":[\"a1\"],\"level\":1},\"to\":{\"value\":\"b1\",\"number\":\"one\",\"text\":\"b1\",\"marker\":\"b1\",\"word\":\"b1\",\"range\":{\"start\":18,\"end\":19},\"dead\":true,\"types\":[\"b1\"],\"level\":1}}}\n    at args.error (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:158:11)\n    at Object.evaluator (/home/dev/code/theprogrammablemind/kms/common/dimension.js:146:13)\n    at Semantic.apply [as _apply] (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/config.js:318:35)\n    at Semantic.apply (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:124:10)\n    at Semantics.applyToContext (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:199:35)\n    at Semantics.apply (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:315:19)\n    at args.s (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:202:47)\n    at Config.getEvaluator (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/config.js:939:22)\n    at args.e (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:213:21)\n    at Semantic.apply [as _apply] (/home/dev/code/theprogrammablemind/kms/common/dialogues.js:689:24). Semantic is Semantic(({ context }) => bridge.id == context.marker && context.evaluate, ({callId, context, kms, e, error}) => {\n        /*\n        error(({context, e}) => {\n          context.evalue = 'dont know...'\n        })\n        */\n        if (callId == 'length#call3') {\n          debugger\n        }\n        const from = context.from;\n        const to = context.to;\n        let evalue;\n        let efrom = from\n        if (!from.unit) {\n          efrom = e(from).evalue\n        }\n        if (to.value == efrom.unit.value) {\n          evalue = efrom.amount\n        } else {\n          const formula = kms.formulas.api.get(to, [efrom.unit])\n          if (!formula) {\n            const reason = { marker: 'reason', focusableForPhrase: true, evalue: { marker: 'noconversion', from: efrom.unit, to } }\n            kms.stm.api.mentioned(reason)\n            error(reason)\n          }\n          kms.stm.api.setVariable(efrom.unit.value, efrom.amount)\n          evalue = e(formula)\n        }\n        /*\n        '{\n            \"marker\":\"dimension\",\n            \"unit\":{\"marker\":\"unit\",\"range\":{\"start\":19,\"end\":25},\"word\":\"celcius\",\"text\":\"celcius\",\"value\":\"celcius\",\"unknown\":true,\"types\":[\"unit\",\"unknown\"]},\n            \"value\":10,\n            \"amount\":{\"word\":\"degrees\",\"number\":\"many\",\"text\":\"10 degrees\",\"marker\":\"degree\",\"range\":{\"start\":8,\"end\":17},\"value\":10,\"amount\":{\"value\":10,\"text\":\"10\",\"marker\":\"number\",\"word\":\"10\",\"range\":{\"start\":8,\"end\":9},\"types\":[\"number\"]}},\n              \"text\":\"10 degrees celcius\",\"range\":{\"start\":8,\"end\":25}}'\n        */\n        context.evalue = { \n          paraphrase: true,\n          marker: 'dimension',\n          level: 1,\n          unit: to,\n          amount: { evalue, paraphrase: undefined }\n        }\n      })\nsee the evaluator property. The error has a retryCall property that will recall the function that failed.'. Semantic is Semantic(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.query, ({context, s, log, km, objects, e}) => {\n        const one = context.one;\n        const two = context.two;\n        let concept, value;\n        if (one.query) {\n          concept = one;\n          value = two;\n        } else {\n          concept = two;\n          value = one;\n        }\n        // km('dialogues').api.mentioned(concept)\n        // TODO wtf is the next line?\n        value = JSON.parse(JSON.stringify(value))\n        let instance = e(value)\n        if (false && instance.evalue) {\n          km('stm').api.mentioned(value)\n        }\n        if (instance.verbatim) {\n          context.evalue = { verbatim: instance.verbatim }\n          context.isResponse = true\n          return\n        }\n        // instance.focusable = ['one', 'two']\n        // concept = JSON.parse(JSON.stringify(value)) \n        concept = _.cloneDeep(value) \n        concept.isQuery = undefined\n        // greg101\n        // instance.focusableForPhrase = true\n        instance.focus = true\n        if (concept.hierarchy) {\n          concept.focusableForPhrase = true\n        }\n        // concept.focus = true\n\n        const many = isMany(concept) || isMany(instance)\n        const evalue = {\n          \"default\": true,\n          \"marker\": \"is\",\n          \"one\": concept,\n          \"two\": instance,\n          \"focusable\": ['two', 'one'],\n          \"word\": many ? \"are\" : \"is\",\n          \"number\": many ? \"many\" : undefined,\n        }\n        context.evalue = evalue\n        context.isResponse = true\n      }). The error has a retryCall property that will recall the function that failed.'"
        ],
        "evalue": "That is not known because there is no conversion between a1 and b1",
        "isResponse": true,
        "marker": "error",
        "reason": {
          "evalue": {
            "from": {
              "dead": true,
              "level": 1,
              "marker": "a1",
              "number": "one",
              "range": {
                "end": 13,
                "start": 12
              },
              "text": "a1",
              "types": [
                "a1"
              ],
              "value": "a1",
              "word": "a1"
            },
            "marker": "noconversion",
            "to": {
              "dead": true,
              "level": 1,
              "marker": "b1",
              "number": "one",
              "range": {
                "end": 19,
                "start": 18
              },
              "text": "b1",
              "types": [
                "b1"
              ],
              "value": "b1",
              "word": "b1"
            }
          },
          "focusableForPhrase": true,
          "marker": "reason"
        },
        "text": "[object Object]",
        "touchedBy": [
          "dimension#call4"
        ]
      },
      {
        "dead": true,
        "evalue": {
          "default": true,
          "focusable": [
            "two",
            "one"
          ],
          "marker": "is",
          "one": {
            "concept": true,
            "dead": true,
            "default": true,
            "determiner": "the",
            "focusableForPhrase": true,
            "level": 1,
            "marker": "reason",
            "modifiers": [
              "determiner"
            ],
            "pullFromContext": true,
            "range": {
              "end": 17,
              "start": 8
            },
            "text": "the reason",
            "types": [
              "reason"
            ],
            "value": "reason",
            "wantsValue": true,
            "word": "reason"
          },
          "two": {
            "concept": true,
            "dead": true,
            "default": true,
            "determiner": "the",
            "evalue": {
              "evalue": {
                "from": {
                  "dead": true,
                  "level": 1,
                  "marker": "a1",
                  "number": "one",
                  "range": {
                    "end": 13,
                    "start": 12
                  },
                  "text": "a1",
                  "types": [
                    "a1"
                  ],
                  "value": "a1",
                  "word": "a1"
                },
                "marker": "noconversion",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "b1",
                  "number": "one",
                  "range": {
                    "end": 19,
                    "start": 18
                  },
                  "text": "b1",
                  "types": [
                    "b1"
                  ],
                  "value": "b1",
                  "word": "b1"
                }
              },
              "focusableForPhrase": true,
              "instance": true,
              "marker": "reason",
              "pullFromContext": false,
              "touchedBy": [
                "dimension#call3"
              ]
            },
            "focus": true,
            "focusableForPhrase": true,
            "instance": true,
            "level": 1,
            "marker": "reason",
            "modifiers": [
              "determiner"
            ],
            "pullFromContext": true,
            "range": {
              "end": 17,
              "start": 8
            },
            "text": "the reason",
            "touchedBy": [
              "dimension#call3",
              "dimension#call2"
            ],
            "types": [
              "reason"
            ],
            "value": {
              "evalue": {
                "from": {
                  "dead": true,
                  "level": 1,
                  "marker": "a1",
                  "number": "one",
                  "range": {
                    "end": 13,
                    "start": 12
                  },
                  "text": "a1",
                  "types": [
                    "a1"
                  ],
                  "value": "a1",
                  "word": "a1"
                },
                "marker": "noconversion",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "b1",
                  "number": "one",
                  "range": {
                    "end": 19,
                    "start": 18
                  },
                  "text": "b1",
                  "types": [
                    "b1"
                  ],
                  "value": "b1",
                  "word": "b1"
                }
              },
              "focusableForPhrase": true,
              "marker": "reason",
              "pullFromContext": false
            },
            "wantsValue": true,
            "word": "reason"
          },
          "word": "is"
        },
        "isResponse": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "default": true,
          "determined": true,
          "level": 1,
          "marker": "what",
          "number": "one",
          "query": [
            "what"
          ],
          "range": {
            "end": 17,
            "start": 0
          },
          "text": "what",
          "types": [
            "what"
          ],
          "value": "what",
          "word": "what"
        },
        "query": [
          "what"
        ],
        "range": {
          "end": 17,
          "start": 0
        },
        "text": "what is the reason",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "default": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "reason",
          "modifiers": [
            "determiner"
          ],
          "pullFromContext": true,
          "range": {
            "end": 17,
            "start": 8
          },
          "text": "the reason",
          "types": [
            "reason"
          ],
          "value": "reason",
          "wantsValue": true,
          "word": "reason"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      "",
      "",
      "(That is not known because there is no conversion between a1 and b1)",
      "(((the (reason)) is (((there is no conversion between (a1) and (b1))))))"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "a",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "list",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "unit",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "number",
            0
          ],
          "ops": [
            [
              "a1",
              0
            ],
            [
              "b1",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "number",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "a1",
            0
          ],
          "ops": [
            [
              "a1",
              0
            ],
            [
              "amountOfDimension",
              0
            ],
            [
              "b1",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "b1",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "b1",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "amountOfDimension",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "convertToUnits",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "reason",
              0
            ],
            [
              "the",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "reason",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "reason",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "comparable": "comparable2",
        "concept": "concept2",
        "countable": "countable2",
        "dialogues": "dialogues2",
        "dimension": "dimension1",
        "dimensionTemplate": "dimensionTemplate2",
        "formulas": "formulas2",
        "formulasTemplate": "formulasTemplate2",
        "gdefaults": "gdefaults2",
        "hierarchy": "hierarchy2",
        "math": "math2",
        "mathTemplate": "mathTemplate2",
        "meta": "meta2",
        "numbers": "numbers2",
        "pos": "pos2",
        "properties": "properties2",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "testing": "testing2"
      },
      "namespaced": {
        "comparable2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "countable2": {
        },
        "dialogues2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "dimension1": {
        },
        "dimensionTemplate2": {
        },
        "formulas2": {
          "formulas": {
          }
        },
        "formulasTemplate2": {
        },
        "gdefaults2": {
        },
        "hierarchy2": {
        },
        "math2": {
        },
        "mathTemplate2": {
        },
        "meta2": {
        },
        "numbers2": {
        },
        "pos2": {
        },
        "properties2": {
          "children": {
            "articlePOS": [
              "a",
              "the"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "concept": [
              "formula",
              "dimension",
              "unit"
            ],
            "dimension": [
              "c1"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "mathematical_operator": [
              "*",
              "+",
              "/",
              "-"
            ],
            "notAble": [
              "unknown"
            ],
            "object": [
              "unknown",
              "what",
              "whose"
            ],
            "preposition": [
              "between"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "xfx",
              "concept",
              "unknown",
              "it",
              "what",
              "whatAble",
              "this",
              "thisitthat",
              "reason"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "noun",
              "reason"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "unit": [
              "a1",
              "b1"
            ],
            "unknown": [
              "property"
            ],
            "verby": [
              "modifies",
              "is"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "object",
            "what",
            "queryable",
            "readonly",
            "property",
            "xfx",
            "theAble",
            "whose",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "between",
            "preposition",
            "concept",
            "modifies",
            "verby",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "articlePOS",
            "the",
            "notAble",
            "whatAble",
            "is",
            "toAble",
            "noun",
            "thisitthat",
            "reason",
            "that",
            "orAble",
            "ifAble",
            "*",
            "mathematical_operator",
            "+",
            "/",
            "-",
            "formula",
            "dimension",
            "unit",
            "c1",
            "a1",
            "b1"
          ],
          "parents": {
            "*": [
              "mathematical_operator"
            ],
            "+": [
              "mathematical_operator"
            ],
            "-": [
              "mathematical_operator"
            ],
            "/": [
              "mathematical_operator"
            ],
            "a": [
              "articlePOS"
            ],
            "a1": [
              "unit"
            ],
            "b1": [
              "unit"
            ],
            "between": [
              "preposition"
            ],
            "c1": [
              "dimension"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "dimension": [
              "concept"
            ],
            "formula": [
              "concept"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verby"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "modifies": [
              "verby"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble",
              "unknown"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "articlePOS"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "unit": [
              "concept"
            ],
            "unknown": [
              "hierarchyAble",
              "object",
              "notAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "*": {
              },
              "+": {
              },
              "-": {
              },
              "/": {
              },
              "a": {
              },
              "a1": {
              },
              "articlePOS": {
              },
              "b1": {
              },
              "between": {
              },
              "c1": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "dimension": {
              },
              "formula": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "mathematical_operator": {
              },
              "modifies": {
              },
              "notAble": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "toAble": {
              },
              "unit": {
              },
              "unknown": {
              },
              "verby": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
            {
              "evalue": {
                "from": {
                  "dead": true,
                  "level": 1,
                  "marker": "a1",
                  "number": "one",
                  "range": {
                    "end": 13,
                    "start": 12
                  },
                  "text": "a1",
                  "types": [
                    "a1"
                  ],
                  "value": "a1",
                  "word": "a1"
                },
                "marker": "noconversion",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "b1",
                  "number": "one",
                  "range": {
                    "end": 19,
                    "start": 18
                  },
                  "text": "b1",
                  "types": [
                    "b1"
                  ],
                  "value": "b1",
                  "word": "b1"
                }
              },
              "focusableForPhrase": true,
              "marker": "reason",
              "pullFromContext": false
            }
          ],
          "variables": {
          }
        },
        "testing2": {
        }
      },
      "processed": [
        {
          "context": {
            "dead": true,
            "evalue": {
              "default": true,
              "focusable": [
                "two",
                "one"
              ],
              "marker": "is",
              "one": {
                "concept": true,
                "dead": true,
                "default": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "reason",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 17,
                  "start": 8
                },
                "text": "the reason",
                "types": [
                  "reason"
                ],
                "value": "reason",
                "wantsValue": true,
                "word": "reason"
              },
              "two": {
                "concept": true,
                "dead": true,
                "default": true,
                "determiner": "the",
                "evalue": {
                  "evalue": {
                    "from": {
                      "dead": true,
                      "level": 1,
                      "marker": "a1",
                      "number": "one",
                      "range": {
                        "end": 13,
                        "start": 12
                      },
                      "text": "a1",
                      "types": [
                        "a1"
                      ],
                      "value": "a1",
                      "word": "a1"
                    },
                    "marker": "noconversion",
                    "to": {
                      "dead": true,
                      "level": 1,
                      "marker": "b1",
                      "number": "one",
                      "range": {
                        "end": 19,
                        "start": 18
                      },
                      "text": "b1",
                      "types": [
                        "b1"
                      ],
                      "value": "b1",
                      "word": "b1"
                    }
                  },
                  "focusableForPhrase": true,
                  "instance": true,
                  "marker": "reason",
                  "pullFromContext": false,
                  "touchedBy": [
                    "dimension#call3"
                  ]
                },
                "focus": true,
                "focusableForPhrase": true,
                "instance": true,
                "level": 1,
                "marker": "reason",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 17,
                  "start": 8
                },
                "text": "the reason",
                "touchedBy": [
                  "dimension#call3",
                  "dimension#call2"
                ],
                "types": [
                  "reason"
                ],
                "value": {
                  "evalue": {
                    "from": {
                      "dead": true,
                      "level": 1,
                      "marker": "a1",
                      "number": "one",
                      "range": {
                        "end": 13,
                        "start": 12
                      },
                      "text": "a1",
                      "types": [
                        "a1"
                      ],
                      "value": "a1",
                      "word": "a1"
                    },
                    "marker": "noconversion",
                    "to": {
                      "dead": true,
                      "level": 1,
                      "marker": "b1",
                      "number": "one",
                      "range": {
                        "end": 19,
                        "start": 18
                      },
                      "text": "b1",
                      "types": [
                        "b1"
                      ],
                      "value": "b1",
                      "word": "b1"
                    }
                  },
                  "focusableForPhrase": true,
                  "marker": "reason",
                  "pullFromContext": false
                },
                "wantsValue": true,
                "word": "reason"
              },
              "word": "is"
            },
            "isResponse": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "default": true,
              "determined": true,
              "level": 1,
              "marker": "what",
              "number": "one",
              "query": [
                "what"
              ],
              "range": {
                "end": 17,
                "start": 0
              },
              "text": "what",
              "types": [
                "what"
              ],
              "value": "what",
              "word": "what"
            },
            "query": [
              "what"
            ],
            "range": {
              "end": 17,
              "start": 0
            },
            "text": "what is the reason",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "default": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "reason",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 17,
                "start": 8
              },
              "text": "the reason",
              "types": [
                "reason"
              ],
              "value": "reason",
              "wantsValue": true,
              "word": "reason"
            },
            "word": "is"
          },
          "generatedParenthesized": "(((the (reason)) is (((there is no conversion between (a1) and (b1))))))",
          "paraphrases": "what is the reason?",
          "paraphrasesParenthesized": "(((what) is (the (reason)))?)",
          "responses": [
            "the reason is there is no conversion between a1 and b1"
          ]
        },
        {
          "context": {
            "context": {
              "dead": true,
              "level": 2,
              "marker": "is",
              "number": "many",
              "one": {
                "dead": true,
                "default": true,
                "determined": true,
                "level": 1,
                "marker": "what",
                "number": "many",
                "query": [
                  "what"
                ],
                "range": {
                  "end": 19,
                  "start": 0
                },
                "text": "what",
                "types": [
                  "what"
                ],
                "value": "what",
                "word": "what"
              },
              "query": [
                "what"
              ],
              "range": {
                "end": 19,
                "start": 0
              },
              "text": "what are 10 a1 in b1",
              "topLevel": true,
              "two": {
                "dead": true,
                "default": true,
                "from": {
                  "amount": {
                    "dead": true,
                    "instance": true,
                    "level": 1,
                    "marker": "number",
                    "range": {
                      "end": 10,
                      "start": 9
                    },
                    "text": "10",
                    "types": [
                      "number"
                    ],
                    "value": 10,
                    "word": "10"
                  },
                  "dead": true,
                  "level": 1,
                  "marker": "dimension",
                  "range": {
                    "end": 13,
                    "start": 9
                  },
                  "text": "10 a1",
                  "types": [
                    "dimension"
                  ],
                  "unit": {
                    "dead": true,
                    "level": 1,
                    "marker": "a1",
                    "number": "one",
                    "range": {
                      "end": 13,
                      "start": 12
                    },
                    "text": "a1",
                    "types": [
                      "a1"
                    ],
                    "value": "a1",
                    "word": "a1"
                  },
                  "value": 10
                },
                "level": 1,
                "marker": "convertToUnits",
                "range": {
                  "end": 19,
                  "start": 9
                },
                "text": "10 a1 in b1",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "b1",
                  "number": "one",
                  "range": {
                    "end": 19,
                    "start": 18
                  },
                  "text": "b1",
                  "types": [
                    "b1"
                  ],
                  "value": "b1",
                  "word": "b1"
                },
                "types": [
                  "convertToUnits"
                ],
                "word": "in"
              },
              "word": "are"
            },
            "error": [
              "ERROR while applying (dialogues/#4) KM 'dialogues' ordinal: 4 where: \"/home/dev/code/theprogrammablemind/kms/common/dialogues.js:666\"\n to\n {\n  \"query\": [\n    \"what\"\n  ],\n  \"number\": \"many\",\n  \"text\": \"what are 10 a1 in b1\",\n  \"marker\": \"is\",\n  \"word\": \"are\",\n  \"range\": {\n    \"start\": 0,\n    \"end\": 19\n  },\n  \"one\": {\n    \"query\": [\n      \"what\"\n    ],\n    \"number\": \"many\",\n    \"marker\": \"what\",\n    \"value\": \"what\",\n    \"default\": true,\n    \"text\": \"what\",\n    \"word\": \"what\",\n    \"range\": {\n      \"start\": 0,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"determined\": true,\n    \"types\": [\n      \"what\"\n    ],\n    \"level\": 1\n  },\n  \"two\": {\n    \"marker\": \"convertToUnits\",\n    \"default\": true,\n    \"word\": \"in\",\n    \"text\": \"10 a1 in b1\",\n    \"range\": {\n      \"start\": 9,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"from\": {\n      \"marker\": \"dimension\",\n      \"unit\": {\n        \"value\": \"a1\",\n        \"number\": \"one\",\n        \"text\": \"a1\",\n        \"marker\": \"a1\",\n        \"word\": \"a1\",\n        \"range\": {\n          \"start\": 12,\n          \"end\": 13\n        },\n        \"dead\": true,\n        \"types\": [\n          \"a1\"\n        ],\n        \"level\": 1\n      },\n      \"value\": 10,\n      \"amount\": {\n        \"value\": 10,\n        \"instance\": true,\n        \"text\": \"10\",\n        \"marker\": \"number\",\n        \"word\": \"10\",\n        \"range\": {\n          \"start\": 9,\n          \"end\": 10\n        },\n        \"dead\": true,\n        \"types\": [\n          \"number\"\n        ],\n        \"level\": 1\n      },\n      \"text\": \"10 a1\",\n      \"range\": {\n        \"start\": 9,\n        \"end\": 13\n      },\n      \"dead\": true,\n      \"types\": [\n        \"dimension\"\n      ],\n      \"level\": 1\n    },\n    \"to\": {\n      \"value\": \"b1\",\n      \"number\": \"one\",\n      \"text\": \"b1\",\n      \"marker\": \"b1\",\n      \"word\": \"b1\",\n      \"range\": {\n        \"start\": 18,\n        \"end\": 19\n      },\n      \"dead\": true,\n      \"types\": [\n        \"b1\"\n      ],\n      \"level\": 1\n    },\n    \"types\": [\n      \"convertToUnits\"\n    ],\n    \"level\": 1\n  },\n  \"dead\": true,\n  \"level\": 2,\n  \"topLevel\": true\n}.\nError applying semantics 'what x is y?/home/dev/code/theprogrammablemind/kms/common/dialogues.js:666'. Error is ERROR while applying (dimension/#0) KM 'dimension' ordinal: 0 where: \"/home/dev/code/theprogrammablemind/kms/common/dimension.js:116\"\n to\n {\n  \"marker\": \"convertToUnits\",\n  \"default\": true,\n  \"word\": \"in\",\n  \"text\": \"10 a1 in b1\",\n  \"range\": {\n    \"start\": 9,\n    \"end\": 19\n  },\n  \"dead\": true,\n  \"from\": {\n    \"marker\": \"dimension\",\n    \"unit\": {\n      \"value\": \"a1\",\n      \"number\": \"one\",\n      \"text\": \"a1\",\n      \"marker\": \"a1\",\n      \"word\": \"a1\",\n      \"range\": {\n        \"start\": 12,\n        \"end\": 13\n      },\n      \"dead\": true,\n      \"types\": [\n        \"a1\"\n      ],\n      \"level\": 1\n    },\n    \"value\": 10,\n    \"amount\": {\n      \"value\": 10,\n      \"instance\": true,\n      \"text\": \"10\",\n      \"marker\": \"number\",\n      \"word\": \"10\",\n      \"range\": {\n        \"start\": 9,\n        \"end\": 10\n      },\n      \"dead\": true,\n      \"types\": [\n        \"number\"\n      ],\n      \"level\": 1\n    },\n    \"text\": \"10 a1\",\n    \"range\": {\n      \"start\": 9,\n      \"end\": 13\n    },\n    \"dead\": true,\n    \"types\": [\n      \"dimension\"\n    ],\n    \"level\": 1\n  },\n  \"to\": {\n    \"value\": \"b1\",\n    \"number\": \"one\",\n    \"text\": \"b1\",\n    \"marker\": \"b1\",\n    \"word\": \"b1\",\n    \"range\": {\n      \"start\": 18,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"types\": [\n      \"b1\"\n    ],\n    \"level\": 1\n  },\n  \"types\": [\n    \"convertToUnits\"\n  ],\n  \"level\": 1,\n  \"evaluate\": true\n}.\nError applying semantics '/home/dev/code/theprogrammablemind/kms/common/dimension.js:116'. Error is Error: {\"marker\":\"reason\",\"focusableForPhrase\":true,\"evalue\":{\"marker\":\"noconversion\",\"from\":{\"value\":\"a1\",\"number\":\"one\",\"text\":\"a1\",\"marker\":\"a1\",\"word\":\"a1\",\"range\":{\"start\":12,\"end\":13},\"dead\":true,\"types\":[\"a1\"],\"level\":1},\"to\":{\"value\":\"b1\",\"number\":\"one\",\"text\":\"b1\",\"marker\":\"b1\",\"word\":\"b1\",\"range\":{\"start\":18,\"end\":19},\"dead\":true,\"types\":[\"b1\"],\"level\":1}}} stack is Error: {\"marker\":\"reason\",\"focusableForPhrase\":true,\"evalue\":{\"marker\":\"noconversion\",\"from\":{\"value\":\"a1\",\"number\":\"one\",\"text\":\"a1\",\"marker\":\"a1\",\"word\":\"a1\",\"range\":{\"start\":12,\"end\":13},\"dead\":true,\"types\":[\"a1\"],\"level\":1},\"to\":{\"value\":\"b1\",\"number\":\"one\",\"text\":\"b1\",\"marker\":\"b1\",\"word\":\"b1\",\"range\":{\"start\":18,\"end\":19},\"dead\":true,\"types\":[\"b1\"],\"level\":1}}}\n    at args.error (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:158:11)\n    at Object.evaluator (/home/dev/code/theprogrammablemind/kms/common/dimension.js:146:13)\n    at Semantic.apply [as _apply] (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/config.js:318:35)\n    at Semantic.apply (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:124:10)\n    at Semantics.applyToContext (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:199:35)\n    at Semantics.apply (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:315:19)\n    at args.s (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:202:47)\n    at Config.getEvaluator (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/config.js:939:22)\n    at args.e (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:213:21)\n    at Semantic.apply [as _apply] (/home/dev/code/theprogrammablemind/kms/common/dialogues.js:689:24). Semantic is Semantic(({ context }) => bridge.id == context.marker && context.evaluate, ({callId, context, kms, e, error}) => {\n        /*\n        error(({context, e}) => {\n          context.evalue = 'dont know...'\n        })\n        */\n        if (callId == 'length#call3') {\n          debugger\n        }\n        const from = context.from;\n        const to = context.to;\n        let evalue;\n        let efrom = from\n        if (!from.unit) {\n          efrom = e(from).evalue\n        }\n        if (to.value == efrom.unit.value) {\n          evalue = efrom.amount\n        } else {\n          const formula = kms.formulas.api.get(to, [efrom.unit])\n          if (!formula) {\n            const reason = { marker: 'reason', focusableForPhrase: true, evalue: { marker: 'noconversion', from: efrom.unit, to } }\n            kms.stm.api.mentioned(reason)\n            error(reason)\n          }\n          kms.stm.api.setVariable(efrom.unit.value, efrom.amount)\n          evalue = e(formula)\n        }\n        /*\n        '{\n            \"marker\":\"dimension\",\n            \"unit\":{\"marker\":\"unit\",\"range\":{\"start\":19,\"end\":25},\"word\":\"celcius\",\"text\":\"celcius\",\"value\":\"celcius\",\"unknown\":true,\"types\":[\"unit\",\"unknown\"]},\n            \"value\":10,\n            \"amount\":{\"word\":\"degrees\",\"number\":\"many\",\"text\":\"10 degrees\",\"marker\":\"degree\",\"range\":{\"start\":8,\"end\":17},\"value\":10,\"amount\":{\"value\":10,\"text\":\"10\",\"marker\":\"number\",\"word\":\"10\",\"range\":{\"start\":8,\"end\":9},\"types\":[\"number\"]}},\n              \"text\":\"10 degrees celcius\",\"range\":{\"start\":8,\"end\":25}}'\n        */\n        context.evalue = { \n          paraphrase: true,\n          marker: 'dimension',\n          level: 1,\n          unit: to,\n          amount: { evalue, paraphrase: undefined }\n        }\n      })\nsee the evaluator property. The error has a retryCall property that will recall the function that failed.'. Semantic is Semantic(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.query, ({context, s, log, km, objects, e}) => {\n        const one = context.one;\n        const two = context.two;\n        let concept, value;\n        if (one.query) {\n          concept = one;\n          value = two;\n        } else {\n          concept = two;\n          value = one;\n        }\n        // km('dialogues').api.mentioned(concept)\n        // TODO wtf is the next line?\n        value = JSON.parse(JSON.stringify(value))\n        let instance = e(value)\n        if (false && instance.evalue) {\n          km('stm').api.mentioned(value)\n        }\n        if (instance.verbatim) {\n          context.evalue = { verbatim: instance.verbatim }\n          context.isResponse = true\n          return\n        }\n        // instance.focusable = ['one', 'two']\n        // concept = JSON.parse(JSON.stringify(value)) \n        concept = _.cloneDeep(value) \n        concept.isQuery = undefined\n        // greg101\n        // instance.focusableForPhrase = true\n        instance.focus = true\n        if (concept.hierarchy) {\n          concept.focusableForPhrase = true\n        }\n        // concept.focus = true\n\n        const many = isMany(concept) || isMany(instance)\n        const evalue = {\n          \"default\": true,\n          \"marker\": \"is\",\n          \"one\": concept,\n          \"two\": instance,\n          \"focusable\": ['two', 'one'],\n          \"word\": many ? \"are\" : \"is\",\n          \"number\": many ? \"many\" : undefined,\n        }\n        context.evalue = evalue\n        context.isResponse = true\n      }). The error has a retryCall property that will recall the function that failed.'"
            ],
            "evalue": "That is not known because there is no conversion between a1 and b1",
            "isResponse": true,
            "marker": "error",
            "reason": {
              "evalue": {
                "from": {
                  "dead": true,
                  "level": 1,
                  "marker": "a1",
                  "number": "one",
                  "range": {
                    "end": 13,
                    "start": 12
                  },
                  "text": "a1",
                  "types": [
                    "a1"
                  ],
                  "value": "a1",
                  "word": "a1"
                },
                "marker": "noconversion",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "b1",
                  "number": "one",
                  "range": {
                    "end": 19,
                    "start": 18
                  },
                  "text": "b1",
                  "types": [
                    "b1"
                  ],
                  "value": "b1",
                  "word": "b1"
                }
              },
              "focusableForPhrase": true,
              "marker": "reason"
            },
            "text": "[object Object]",
            "touchedBy": [
              "dimension#call4"
            ]
          },
          "generatedParenthesized": "(That is not known because there is no conversion between a1 and b1)",
          "paraphrases": "what are 10 a1 in b1?",
          "paraphrasesParenthesized": "((((what) are (((10) (a1)) in (b1)))?))",
          "responses": [
            "That is not known because there is no conversion between a1 and b1"
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 24,
                "start": 0
              },
              "text": "a1 and b1 are units of d1",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 1,
                    "start": 0
                  },
                  "text": "a1",
                  "unknown": true,
                  "value": "a1",
                  "word": "a1"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 8,
                    "start": 7
                  },
                  "text": "b1",
                  "unknown": true,
                  "value": "b1",
                  "word": "b1"
                }
              ]
            },
            "range": {
              "end": 24,
              "start": 0
            },
            "text": "a1 and b1 are units of d1",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 24,
                  "start": 23
                },
                "text": "d1",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "d1",
                "word": "d1"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unit",
                  "number": "many",
                  "range": {
                    "end": 18,
                    "start": 14
                  },
                  "text": "units",
                  "types": [
                    "unit"
                  ],
                  "value": "unit",
                  "word": "units"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 24,
                    "start": 23
                  },
                  "text": "d1",
                  "types": [
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "d1",
                  "word": "d1"
                }
              ],
              "range": {
                "end": 24,
                "start": 14
              },
              "text": "units of d1",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            "word": "are"
          },
          "generatedParenthesized": "",
          "paraphrases": "a1 and b1 are units of d1",
          "paraphrasesParenthesized": "(((a1) and (b1)) are ((units) of (d1)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "one",
              "range": {
                "end": 16,
                "start": 0
              },
              "text": "c1",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "c1",
              "word": "c1"
            },
            "range": {
              "end": 16,
              "start": 0
            },
            "text": "c1 is a dimension",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": {
                "default": true,
                "level": 0,
                "marker": "a",
                "range": {
                  "end": 6,
                  "start": 6
                },
                "text": "a",
                "word": "a"
              },
              "level": 1,
              "marker": "dimension",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "pullFromContext": false,
              "range": {
                "end": 16,
                "start": 6
              },
              "text": "a dimension",
              "types": [
                "dimension"
              ],
              "value": "dimension",
              "wantsValue": true,
              "word": "dimension"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "c1 is a dimension",
          "paraphrasesParenthesized": "((c1) is ((a) (dimension)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "default": true,
              "isList": true,
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 30,
                "start": 0
              },
              "text": "dimension and unit",
              "types": [
                "list",
                "type"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 8,
                    "start": 0
                  },
                  "text": "dimension",
                  "unknown": true,
                  "value": "dimension",
                  "word": "dimension"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 17,
                    "start": 14
                  },
                  "text": "unit",
                  "unknown": true,
                  "value": "unit",
                  "word": "unit"
                }
              ],
              "word": "and"
            },
            "range": {
              "end": 30,
              "start": 0
            },
            "text": "dimension and unit are concepts",
            "topLevel": true,
            "touchedBy": [
              "dimensionTemplate#call2",
              "instance0#dimensionTemplate#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 30,
                "start": 23
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "dimension and unit are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "many",
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "formulas",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "formulas",
              "word": "formulas"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "formulas are concepts",
            "topLevel": true,
            "touchedBy": [
              "formulasTemplate#call2",
              "instance0#formulasTemplate#call2",
              "instance0#formulas#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 13
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "formulas are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "c1 is a dimension",
      "a1 and b1 are units of d1",
      "what are 10 a1 in b1?",
      "what is the reason?"
    ],
    "paraphrasesParenthesized": [
      "((c1) is ((a) (dimension)))",
      "(((a1) and (b1)) are ((units) of (d1)))",
      "((((what) are (((10) (a1)) in (b1)))?))",
      "(((what) is (the (reason)))?)"
    ],
    "query": "c1 is a dimension\\na1 and b1 are units of d1\\nwhat are 10 a1 in b1\\nwhat is the reason",
    "responses": [
      "",
      "",
      "That is not known because there is no conversion between a1 and b1",
      "the reason is there is no conversion between a1 and b1"
    ]
  },
  {
    "associations": [
    ],
    "config": {
    },
    "contexts": [
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "number": "one",
          "range": {
            "end": 16,
            "start": 0
          },
          "text": "c1",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "c1",
          "word": "c1"
        },
        "range": {
          "end": 16,
          "start": 0
        },
        "text": "c1 is a dimension",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": {
            "default": true,
            "level": 0,
            "marker": "a",
            "range": {
              "end": 6,
              "start": 6
            },
            "text": "a",
            "word": "a"
          },
          "level": 1,
          "marker": "dimension",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "pullFromContext": false,
          "range": {
            "end": 16,
            "start": 6
          },
          "text": "a dimension",
          "types": [
            "dimension"
          ],
          "value": "dimension",
          "wantsValue": true,
          "word": "dimension"
        },
        "word": "is"
      },
      {
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "many",
        "one": {
          "level": 1,
          "listable": true,
          "marker": "list",
          "number": "many",
          "range": {
            "end": 24,
            "start": 0
          },
          "text": "a1 and b1 are units of d1",
          "types": [
            "list",
            "unknown"
          ],
          "value": [
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 1,
                "start": 0
              },
              "text": "a1",
              "unknown": true,
              "value": "a1",
              "word": "a1"
            },
            {
              "dead": true,
              "level": 2,
              "marker": "unknown",
              "range": {
                "end": 8,
                "start": 7
              },
              "text": "b1",
              "unknown": true,
              "value": "b1",
              "word": "b1"
            }
          ]
        },
        "range": {
          "end": 24,
          "start": 0
        },
        "text": "a1 and b1 are units of d1",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "level": 1,
          "marker": "unit",
          "number": "many",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "unknown",
            "range": {
              "end": 24,
              "start": 23
            },
            "text": "d1",
            "types": [
              "unknown"
            ],
            "unknown": true,
            "value": "d1",
            "word": "d1"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "range": {
                "end": 18,
                "start": 14
              },
              "text": "units",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 24,
                "start": 23
              },
              "text": "d1",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "d1",
              "word": "d1"
            }
          ],
          "range": {
            "end": 24,
            "start": 14
          },
          "text": "units of d1",
          "types": [
            "unit"
          ],
          "value": "unit",
          "word": "units"
        },
        "word": "are"
      },
      {
        "context": {
          "dead": true,
          "level": 2,
          "marker": "is",
          "number": "many",
          "one": {
            "dead": true,
            "default": true,
            "determined": true,
            "level": 1,
            "marker": "what",
            "number": "many",
            "query": [
              "what"
            ],
            "range": {
              "end": 19,
              "start": 0
            },
            "text": "what",
            "types": [
              "what"
            ],
            "value": "what",
            "word": "what"
          },
          "query": [
            "what"
          ],
          "range": {
            "end": 19,
            "start": 0
          },
          "text": "what are 10 a1 in b1",
          "topLevel": true,
          "two": {
            "dead": true,
            "default": true,
            "from": {
              "amount": {
                "dead": true,
                "instance": true,
                "level": 1,
                "marker": "number",
                "range": {
                  "end": 10,
                  "start": 9
                },
                "text": "10",
                "types": [
                  "number"
                ],
                "value": 10,
                "word": "10"
              },
              "dead": true,
              "level": 1,
              "marker": "dimension",
              "range": {
                "end": 13,
                "start": 9
              },
              "text": "10 a1",
              "types": [
                "dimension"
              ],
              "unit": {
                "dead": true,
                "level": 1,
                "marker": "a1",
                "number": "one",
                "range": {
                  "end": 13,
                  "start": 12
                },
                "text": "a1",
                "types": [
                  "a1"
                ],
                "value": "a1",
                "word": "a1"
              },
              "value": 10
            },
            "level": 1,
            "marker": "convertToUnits",
            "range": {
              "end": 19,
              "start": 9
            },
            "text": "10 a1 in b1",
            "to": {
              "dead": true,
              "level": 1,
              "marker": "b1",
              "number": "one",
              "range": {
                "end": 19,
                "start": 18
              },
              "text": "b1",
              "types": [
                "b1"
              ],
              "value": "b1",
              "word": "b1"
            },
            "types": [
              "convertToUnits"
            ],
            "word": "in"
          },
          "word": "are"
        },
        "error": [
          "ERROR while applying (dialogues/#4) KM 'dialogues' ordinal: 4 where: \"/home/dev/code/theprogrammablemind/kms/common/dialogues.js:666\"\n to\n {\n  \"query\": [\n    \"what\"\n  ],\n  \"number\": \"many\",\n  \"text\": \"what are 10 a1 in b1\",\n  \"marker\": \"is\",\n  \"word\": \"are\",\n  \"range\": {\n    \"start\": 0,\n    \"end\": 19\n  },\n  \"one\": {\n    \"query\": [\n      \"what\"\n    ],\n    \"number\": \"many\",\n    \"marker\": \"what\",\n    \"value\": \"what\",\n    \"default\": true,\n    \"text\": \"what\",\n    \"word\": \"what\",\n    \"range\": {\n      \"start\": 0,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"determined\": true,\n    \"types\": [\n      \"what\"\n    ],\n    \"level\": 1\n  },\n  \"two\": {\n    \"marker\": \"convertToUnits\",\n    \"default\": true,\n    \"word\": \"in\",\n    \"text\": \"10 a1 in b1\",\n    \"range\": {\n      \"start\": 9,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"from\": {\n      \"marker\": \"dimension\",\n      \"unit\": {\n        \"value\": \"a1\",\n        \"number\": \"one\",\n        \"text\": \"a1\",\n        \"marker\": \"a1\",\n        \"word\": \"a1\",\n        \"range\": {\n          \"start\": 12,\n          \"end\": 13\n        },\n        \"dead\": true,\n        \"types\": [\n          \"a1\"\n        ],\n        \"level\": 1\n      },\n      \"value\": 10,\n      \"amount\": {\n        \"value\": 10,\n        \"instance\": true,\n        \"text\": \"10\",\n        \"marker\": \"number\",\n        \"word\": \"10\",\n        \"range\": {\n          \"start\": 9,\n          \"end\": 10\n        },\n        \"dead\": true,\n        \"types\": [\n          \"number\"\n        ],\n        \"level\": 1\n      },\n      \"text\": \"10 a1\",\n      \"range\": {\n        \"start\": 9,\n        \"end\": 13\n      },\n      \"dead\": true,\n      \"types\": [\n        \"dimension\"\n      ],\n      \"level\": 1\n    },\n    \"to\": {\n      \"value\": \"b1\",\n      \"number\": \"one\",\n      \"text\": \"b1\",\n      \"marker\": \"b1\",\n      \"word\": \"b1\",\n      \"range\": {\n        \"start\": 18,\n        \"end\": 19\n      },\n      \"dead\": true,\n      \"types\": [\n        \"b1\"\n      ],\n      \"level\": 1\n    },\n    \"types\": [\n      \"convertToUnits\"\n    ],\n    \"level\": 1\n  },\n  \"dead\": true,\n  \"level\": 2,\n  \"topLevel\": true\n}.\nError applying semantics 'what x is y?/home/dev/code/theprogrammablemind/kms/common/dialogues.js:666'. Error is ERROR while applying (dimension/#0) KM 'dimension' ordinal: 0 where: \"/home/dev/code/theprogrammablemind/kms/common/dimension.js:116\"\n to\n {\n  \"marker\": \"convertToUnits\",\n  \"default\": true,\n  \"word\": \"in\",\n  \"text\": \"10 a1 in b1\",\n  \"range\": {\n    \"start\": 9,\n    \"end\": 19\n  },\n  \"dead\": true,\n  \"from\": {\n    \"marker\": \"dimension\",\n    \"unit\": {\n      \"value\": \"a1\",\n      \"number\": \"one\",\n      \"text\": \"a1\",\n      \"marker\": \"a1\",\n      \"word\": \"a1\",\n      \"range\": {\n        \"start\": 12,\n        \"end\": 13\n      },\n      \"dead\": true,\n      \"types\": [\n        \"a1\"\n      ],\n      \"level\": 1\n    },\n    \"value\": 10,\n    \"amount\": {\n      \"value\": 10,\n      \"instance\": true,\n      \"text\": \"10\",\n      \"marker\": \"number\",\n      \"word\": \"10\",\n      \"range\": {\n        \"start\": 9,\n        \"end\": 10\n      },\n      \"dead\": true,\n      \"types\": [\n        \"number\"\n      ],\n      \"level\": 1\n    },\n    \"text\": \"10 a1\",\n    \"range\": {\n      \"start\": 9,\n      \"end\": 13\n    },\n    \"dead\": true,\n    \"types\": [\n      \"dimension\"\n    ],\n    \"level\": 1\n  },\n  \"to\": {\n    \"value\": \"b1\",\n    \"number\": \"one\",\n    \"text\": \"b1\",\n    \"marker\": \"b1\",\n    \"word\": \"b1\",\n    \"range\": {\n      \"start\": 18,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"types\": [\n      \"b1\"\n    ],\n    \"level\": 1\n  },\n  \"types\": [\n    \"convertToUnits\"\n  ],\n  \"level\": 1,\n  \"evaluate\": true\n}.\nError applying semantics '/home/dev/code/theprogrammablemind/kms/common/dimension.js:116'. Error is Error: {\"marker\":\"reason\",\"focusableForPhrase\":true,\"evalue\":{\"marker\":\"noconversion\",\"from\":{\"value\":\"a1\",\"number\":\"one\",\"text\":\"a1\",\"marker\":\"a1\",\"word\":\"a1\",\"range\":{\"start\":12,\"end\":13},\"dead\":true,\"types\":[\"a1\"],\"level\":1},\"to\":{\"value\":\"b1\",\"number\":\"one\",\"text\":\"b1\",\"marker\":\"b1\",\"word\":\"b1\",\"range\":{\"start\":18,\"end\":19},\"dead\":true,\"types\":[\"b1\"],\"level\":1}}} stack is Error: {\"marker\":\"reason\",\"focusableForPhrase\":true,\"evalue\":{\"marker\":\"noconversion\",\"from\":{\"value\":\"a1\",\"number\":\"one\",\"text\":\"a1\",\"marker\":\"a1\",\"word\":\"a1\",\"range\":{\"start\":12,\"end\":13},\"dead\":true,\"types\":[\"a1\"],\"level\":1},\"to\":{\"value\":\"b1\",\"number\":\"one\",\"text\":\"b1\",\"marker\":\"b1\",\"word\":\"b1\",\"range\":{\"start\":18,\"end\":19},\"dead\":true,\"types\":[\"b1\"],\"level\":1}}}\n    at args.error (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:158:11)\n    at Object.evaluator (/home/dev/code/theprogrammablemind/kms/common/dimension.js:146:13)\n    at Semantic.apply [as _apply] (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/config.js:318:35)\n    at Semantic.apply (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:124:10)\n    at Semantics.applyToContext (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:199:35)\n    at Semantics.apply (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:315:19)\n    at args.s (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:202:47)\n    at Config.getEvaluator (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/config.js:939:22)\n    at args.e (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:213:21)\n    at Semantic.apply [as _apply] (/home/dev/code/theprogrammablemind/kms/common/dialogues.js:689:24). Semantic is Semantic(({ context }) => bridge.id == context.marker && context.evaluate, ({callId, context, kms, e, error}) => {\n        /*\n        error(({context, e}) => {\n          context.evalue = 'dont know...'\n        })\n        */\n        if (callId == 'length#call3') {\n          debugger\n        }\n        const from = context.from;\n        const to = context.to;\n        let evalue;\n        let efrom = from\n        if (!from.unit) {\n          efrom = e(from).evalue\n        }\n        if (to.value == efrom.unit.value) {\n          evalue = efrom.amount\n        } else {\n          const formula = kms.formulas.api.get(to, [efrom.unit])\n          if (!formula) {\n            const reason = { marker: 'reason', focusableForPhrase: true, evalue: { marker: 'noconversion', from: efrom.unit, to } }\n            kms.stm.api.mentioned(reason)\n            error(reason)\n          }\n          kms.stm.api.setVariable(efrom.unit.value, efrom.amount)\n          evalue = e(formula)\n        }\n        /*\n        '{\n            \"marker\":\"dimension\",\n            \"unit\":{\"marker\":\"unit\",\"range\":{\"start\":19,\"end\":25},\"word\":\"celcius\",\"text\":\"celcius\",\"value\":\"celcius\",\"unknown\":true,\"types\":[\"unit\",\"unknown\"]},\n            \"value\":10,\n            \"amount\":{\"word\":\"degrees\",\"number\":\"many\",\"text\":\"10 degrees\",\"marker\":\"degree\",\"range\":{\"start\":8,\"end\":17},\"value\":10,\"amount\":{\"value\":10,\"text\":\"10\",\"marker\":\"number\",\"word\":\"10\",\"range\":{\"start\":8,\"end\":9},\"types\":[\"number\"]}},\n              \"text\":\"10 degrees celcius\",\"range\":{\"start\":8,\"end\":25}}'\n        */\n        context.evalue = { \n          paraphrase: true,\n          marker: 'dimension',\n          level: 1,\n          unit: to,\n          amount: { evalue, paraphrase: undefined }\n        }\n      })\nsee the evaluator property. The error has a retryCall property that will recall the function that failed.'. Semantic is Semantic(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.query, ({context, s, log, km, objects, e}) => {\n        const one = context.one;\n        const two = context.two;\n        let concept, value;\n        if (one.query) {\n          concept = one;\n          value = two;\n        } else {\n          concept = two;\n          value = one;\n        }\n        // km('dialogues').api.mentioned(concept)\n        // TODO wtf is the next line?\n        value = JSON.parse(JSON.stringify(value))\n        let instance = e(value)\n        if (false && instance.evalue) {\n          km('stm').api.mentioned(value)\n        }\n        if (instance.verbatim) {\n          context.evalue = { verbatim: instance.verbatim }\n          context.isResponse = true\n          return\n        }\n        // instance.focusable = ['one', 'two']\n        // concept = JSON.parse(JSON.stringify(value)) \n        concept = _.cloneDeep(value) \n        concept.isQuery = undefined\n        // greg101\n        // instance.focusableForPhrase = true\n        instance.focus = true\n        if (concept.hierarchy) {\n          concept.focusableForPhrase = true\n        }\n        // concept.focus = true\n\n        const many = isMany(concept) || isMany(instance)\n        const evalue = {\n          \"default\": true,\n          \"marker\": \"is\",\n          \"one\": concept,\n          \"two\": instance,\n          \"focusable\": ['two', 'one'],\n          \"word\": many ? \"are\" : \"is\",\n          \"number\": many ? \"many\" : undefined,\n        }\n        context.evalue = evalue\n        context.isResponse = true\n      }). The error has a retryCall property that will recall the function that failed.'"
        ],
        "evalue": "That is not known because there is no conversion between a1 and b1",
        "isResponse": true,
        "marker": "error",
        "reason": {
          "evalue": {
            "from": {
              "dead": true,
              "level": 1,
              "marker": "a1",
              "number": "one",
              "range": {
                "end": 13,
                "start": 12
              },
              "text": "a1",
              "types": [
                "a1"
              ],
              "value": "a1",
              "word": "a1"
            },
            "marker": "noconversion",
            "to": {
              "dead": true,
              "level": 1,
              "marker": "b1",
              "number": "one",
              "range": {
                "end": 19,
                "start": 18
              },
              "text": "b1",
              "types": [
                "b1"
              ],
              "value": "b1",
              "word": "b1"
            }
          },
          "focusableForPhrase": true,
          "marker": "reason"
        },
        "text": "[object Object]",
        "touchedBy": [
          "dimension#call4"
        ]
      },
      {
        "dead": true,
        "default": true,
        "isResponse": true,
        "level": 1,
        "marker": "why",
        "pullFromContext": true,
        "range": {
          "end": 2,
          "start": 0
        },
        "text": "why",
        "topLevel": true,
        "touchedBy": [
          "dimension#call2"
        ],
        "types": [
          "reason",
          "why"
        ],
        "value": {
          "from": {
            "dead": true,
            "level": 1,
            "marker": "a1",
            "number": "one",
            "range": {
              "end": 13,
              "start": 12
            },
            "text": "a1",
            "types": [
              "a1"
            ],
            "value": "a1",
            "word": "a1"
          },
          "marker": "noconversion",
          "to": {
            "dead": true,
            "level": 1,
            "marker": "b1",
            "number": "one",
            "range": {
              "end": 19,
              "start": 18
            },
            "text": "b1",
            "types": [
              "b1"
            ],
            "value": "b1",
            "word": "b1"
          }
        },
        "word": "why"
      }
    ],
    "generatedParenthesized": [
      "",
      "",
      "(That is not known because there is no conversion between a1 and b1)",
      "((there is no conversion between (a1) and (b1)))"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "a",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "list",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "list",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "list",
              1
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "unit",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "unit",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "number",
            0
          ],
          "ops": [
            [
              "a1",
              0
            ],
            [
              "b1",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "number",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "a1",
            0
          ],
          "ops": [
            [
              "a1",
              0
            ],
            [
              "amountOfDimension",
              0
            ],
            [
              "b1",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "b1",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "b1",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "amountOfDimension",
            0
          ],
          "ops": [
            [
              "amountOfDimension",
              0
            ],
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "dimension",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "dimension",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "convertToUnits",
            0
          ],
          "ops": [
            [
              "convertToUnits",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 1,
          "op": [
            "why",
            0
          ],
          "ops": [
            [
              "why",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "comparable": "comparable2",
        "concept": "concept2",
        "countable": "countable2",
        "dialogues": "dialogues2",
        "dimension": "dimension1",
        "dimensionTemplate": "dimensionTemplate2",
        "formulas": "formulas2",
        "formulasTemplate": "formulasTemplate2",
        "gdefaults": "gdefaults2",
        "hierarchy": "hierarchy2",
        "math": "math2",
        "mathTemplate": "mathTemplate2",
        "meta": "meta2",
        "numbers": "numbers2",
        "pos": "pos2",
        "properties": "properties2",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "testing": "testing2"
      },
      "namespaced": {
        "comparable2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "countable2": {
        },
        "dialogues2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "dimension1": {
        },
        "dimensionTemplate2": {
        },
        "formulas2": {
          "formulas": {
          }
        },
        "formulasTemplate2": {
        },
        "gdefaults2": {
        },
        "hierarchy2": {
        },
        "math2": {
        },
        "mathTemplate2": {
        },
        "meta2": {
        },
        "numbers2": {
        },
        "pos2": {
        },
        "properties2": {
          "children": {
            "articlePOS": [
              "a",
              "the"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "concept": [
              "formula",
              "dimension",
              "unit"
            ],
            "dimension": [
              "c1"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "mathematical_operator": [
              "*",
              "+",
              "/",
              "-"
            ],
            "notAble": [
              "unknown"
            ],
            "object": [
              "unknown",
              "what",
              "whose"
            ],
            "preposition": [
              "between"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "xfx",
              "concept",
              "unknown",
              "it",
              "what",
              "whatAble",
              "this",
              "thisitthat",
              "reason"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "noun",
              "reason"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "unit": [
              "a1",
              "b1"
            ],
            "unknown": [
              "property"
            ],
            "verby": [
              "modifies",
              "is"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "object",
            "what",
            "queryable",
            "readonly",
            "property",
            "xfx",
            "theAble",
            "whose",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "between",
            "preposition",
            "concept",
            "modifies",
            "verby",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "articlePOS",
            "the",
            "notAble",
            "whatAble",
            "is",
            "toAble",
            "noun",
            "thisitthat",
            "reason",
            "that",
            "orAble",
            "ifAble",
            "*",
            "mathematical_operator",
            "+",
            "/",
            "-",
            "formula",
            "dimension",
            "unit",
            "c1",
            "a1",
            "b1"
          ],
          "parents": {
            "*": [
              "mathematical_operator"
            ],
            "+": [
              "mathematical_operator"
            ],
            "-": [
              "mathematical_operator"
            ],
            "/": [
              "mathematical_operator"
            ],
            "a": [
              "articlePOS"
            ],
            "a1": [
              "unit"
            ],
            "b1": [
              "unit"
            ],
            "between": [
              "preposition"
            ],
            "c1": [
              "dimension"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "dimension": [
              "concept"
            ],
            "formula": [
              "concept"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verby"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "modifies": [
              "verby"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble",
              "unknown"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "articlePOS"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "unit": [
              "concept"
            ],
            "unknown": [
              "hierarchyAble",
              "object",
              "notAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "*": {
              },
              "+": {
              },
              "-": {
              },
              "/": {
              },
              "a": {
              },
              "a1": {
              },
              "articlePOS": {
              },
              "b1": {
              },
              "between": {
              },
              "c1": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "dimension": {
              },
              "formula": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "mathematical_operator": {
              },
              "modifies": {
              },
              "notAble": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "toAble": {
              },
              "unit": {
              },
              "unknown": {
              },
              "verby": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
            {
              "evalue": {
                "from": {
                  "dead": true,
                  "level": 1,
                  "marker": "a1",
                  "number": "one",
                  "range": {
                    "end": 13,
                    "start": 12
                  },
                  "text": "a1",
                  "types": [
                    "a1"
                  ],
                  "value": "a1",
                  "word": "a1"
                },
                "marker": "noconversion",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "b1",
                  "number": "one",
                  "range": {
                    "end": 19,
                    "start": 18
                  },
                  "text": "b1",
                  "types": [
                    "b1"
                  ],
                  "value": "b1",
                  "word": "b1"
                }
              },
              "focusableForPhrase": true,
              "marker": "reason",
              "pullFromContext": false
            }
          ],
          "variables": {
          }
        },
        "testing2": {
        }
      },
      "processed": [
        {
          "context": {
            "dead": true,
            "default": true,
            "isResponse": true,
            "level": 1,
            "marker": "why",
            "pullFromContext": true,
            "range": {
              "end": 2,
              "start": 0
            },
            "text": "why",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "types": [
              "reason",
              "why"
            ],
            "value": {
              "from": {
                "dead": true,
                "level": 1,
                "marker": "a1",
                "number": "one",
                "range": {
                  "end": 13,
                  "start": 12
                },
                "text": "a1",
                "types": [
                  "a1"
                ],
                "value": "a1",
                "word": "a1"
              },
              "marker": "noconversion",
              "to": {
                "dead": true,
                "level": 1,
                "marker": "b1",
                "number": "one",
                "range": {
                  "end": 19,
                  "start": 18
                },
                "text": "b1",
                "types": [
                  "b1"
                ],
                "value": "b1",
                "word": "b1"
              }
            },
            "word": "why"
          },
          "generatedParenthesized": "((there is no conversion between (a1) and (b1)))",
          "paraphrases": "why",
          "paraphrasesParenthesized": "(why)",
          "responses": [
            "there is no conversion between a1 and b1"
          ]
        },
        {
          "context": {
            "context": {
              "dead": true,
              "level": 2,
              "marker": "is",
              "number": "many",
              "one": {
                "dead": true,
                "default": true,
                "determined": true,
                "level": 1,
                "marker": "what",
                "number": "many",
                "query": [
                  "what"
                ],
                "range": {
                  "end": 19,
                  "start": 0
                },
                "text": "what",
                "types": [
                  "what"
                ],
                "value": "what",
                "word": "what"
              },
              "query": [
                "what"
              ],
              "range": {
                "end": 19,
                "start": 0
              },
              "text": "what are 10 a1 in b1",
              "topLevel": true,
              "two": {
                "dead": true,
                "default": true,
                "from": {
                  "amount": {
                    "dead": true,
                    "instance": true,
                    "level": 1,
                    "marker": "number",
                    "range": {
                      "end": 10,
                      "start": 9
                    },
                    "text": "10",
                    "types": [
                      "number"
                    ],
                    "value": 10,
                    "word": "10"
                  },
                  "dead": true,
                  "level": 1,
                  "marker": "dimension",
                  "range": {
                    "end": 13,
                    "start": 9
                  },
                  "text": "10 a1",
                  "types": [
                    "dimension"
                  ],
                  "unit": {
                    "dead": true,
                    "level": 1,
                    "marker": "a1",
                    "number": "one",
                    "range": {
                      "end": 13,
                      "start": 12
                    },
                    "text": "a1",
                    "types": [
                      "a1"
                    ],
                    "value": "a1",
                    "word": "a1"
                  },
                  "value": 10
                },
                "level": 1,
                "marker": "convertToUnits",
                "range": {
                  "end": 19,
                  "start": 9
                },
                "text": "10 a1 in b1",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "b1",
                  "number": "one",
                  "range": {
                    "end": 19,
                    "start": 18
                  },
                  "text": "b1",
                  "types": [
                    "b1"
                  ],
                  "value": "b1",
                  "word": "b1"
                },
                "types": [
                  "convertToUnits"
                ],
                "word": "in"
              },
              "word": "are"
            },
            "error": [
              "ERROR while applying (dialogues/#4) KM 'dialogues' ordinal: 4 where: \"/home/dev/code/theprogrammablemind/kms/common/dialogues.js:666\"\n to\n {\n  \"query\": [\n    \"what\"\n  ],\n  \"number\": \"many\",\n  \"text\": \"what are 10 a1 in b1\",\n  \"marker\": \"is\",\n  \"word\": \"are\",\n  \"range\": {\n    \"start\": 0,\n    \"end\": 19\n  },\n  \"one\": {\n    \"query\": [\n      \"what\"\n    ],\n    \"number\": \"many\",\n    \"marker\": \"what\",\n    \"value\": \"what\",\n    \"default\": true,\n    \"text\": \"what\",\n    \"word\": \"what\",\n    \"range\": {\n      \"start\": 0,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"determined\": true,\n    \"types\": [\n      \"what\"\n    ],\n    \"level\": 1\n  },\n  \"two\": {\n    \"marker\": \"convertToUnits\",\n    \"default\": true,\n    \"word\": \"in\",\n    \"text\": \"10 a1 in b1\",\n    \"range\": {\n      \"start\": 9,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"from\": {\n      \"marker\": \"dimension\",\n      \"unit\": {\n        \"value\": \"a1\",\n        \"number\": \"one\",\n        \"text\": \"a1\",\n        \"marker\": \"a1\",\n        \"word\": \"a1\",\n        \"range\": {\n          \"start\": 12,\n          \"end\": 13\n        },\n        \"dead\": true,\n        \"types\": [\n          \"a1\"\n        ],\n        \"level\": 1\n      },\n      \"value\": 10,\n      \"amount\": {\n        \"value\": 10,\n        \"instance\": true,\n        \"text\": \"10\",\n        \"marker\": \"number\",\n        \"word\": \"10\",\n        \"range\": {\n          \"start\": 9,\n          \"end\": 10\n        },\n        \"dead\": true,\n        \"types\": [\n          \"number\"\n        ],\n        \"level\": 1\n      },\n      \"text\": \"10 a1\",\n      \"range\": {\n        \"start\": 9,\n        \"end\": 13\n      },\n      \"dead\": true,\n      \"types\": [\n        \"dimension\"\n      ],\n      \"level\": 1\n    },\n    \"to\": {\n      \"value\": \"b1\",\n      \"number\": \"one\",\n      \"text\": \"b1\",\n      \"marker\": \"b1\",\n      \"word\": \"b1\",\n      \"range\": {\n        \"start\": 18,\n        \"end\": 19\n      },\n      \"dead\": true,\n      \"types\": [\n        \"b1\"\n      ],\n      \"level\": 1\n    },\n    \"types\": [\n      \"convertToUnits\"\n    ],\n    \"level\": 1\n  },\n  \"dead\": true,\n  \"level\": 2,\n  \"topLevel\": true\n}.\nError applying semantics 'what x is y?/home/dev/code/theprogrammablemind/kms/common/dialogues.js:666'. Error is ERROR while applying (dimension/#0) KM 'dimension' ordinal: 0 where: \"/home/dev/code/theprogrammablemind/kms/common/dimension.js:116\"\n to\n {\n  \"marker\": \"convertToUnits\",\n  \"default\": true,\n  \"word\": \"in\",\n  \"text\": \"10 a1 in b1\",\n  \"range\": {\n    \"start\": 9,\n    \"end\": 19\n  },\n  \"dead\": true,\n  \"from\": {\n    \"marker\": \"dimension\",\n    \"unit\": {\n      \"value\": \"a1\",\n      \"number\": \"one\",\n      \"text\": \"a1\",\n      \"marker\": \"a1\",\n      \"word\": \"a1\",\n      \"range\": {\n        \"start\": 12,\n        \"end\": 13\n      },\n      \"dead\": true,\n      \"types\": [\n        \"a1\"\n      ],\n      \"level\": 1\n    },\n    \"value\": 10,\n    \"amount\": {\n      \"value\": 10,\n      \"instance\": true,\n      \"text\": \"10\",\n      \"marker\": \"number\",\n      \"word\": \"10\",\n      \"range\": {\n        \"start\": 9,\n        \"end\": 10\n      },\n      \"dead\": true,\n      \"types\": [\n        \"number\"\n      ],\n      \"level\": 1\n    },\n    \"text\": \"10 a1\",\n    \"range\": {\n      \"start\": 9,\n      \"end\": 13\n    },\n    \"dead\": true,\n    \"types\": [\n      \"dimension\"\n    ],\n    \"level\": 1\n  },\n  \"to\": {\n    \"value\": \"b1\",\n    \"number\": \"one\",\n    \"text\": \"b1\",\n    \"marker\": \"b1\",\n    \"word\": \"b1\",\n    \"range\": {\n      \"start\": 18,\n      \"end\": 19\n    },\n    \"dead\": true,\n    \"types\": [\n      \"b1\"\n    ],\n    \"level\": 1\n  },\n  \"types\": [\n    \"convertToUnits\"\n  ],\n  \"level\": 1,\n  \"evaluate\": true\n}.\nError applying semantics '/home/dev/code/theprogrammablemind/kms/common/dimension.js:116'. Error is Error: {\"marker\":\"reason\",\"focusableForPhrase\":true,\"evalue\":{\"marker\":\"noconversion\",\"from\":{\"value\":\"a1\",\"number\":\"one\",\"text\":\"a1\",\"marker\":\"a1\",\"word\":\"a1\",\"range\":{\"start\":12,\"end\":13},\"dead\":true,\"types\":[\"a1\"],\"level\":1},\"to\":{\"value\":\"b1\",\"number\":\"one\",\"text\":\"b1\",\"marker\":\"b1\",\"word\":\"b1\",\"range\":{\"start\":18,\"end\":19},\"dead\":true,\"types\":[\"b1\"],\"level\":1}}} stack is Error: {\"marker\":\"reason\",\"focusableForPhrase\":true,\"evalue\":{\"marker\":\"noconversion\",\"from\":{\"value\":\"a1\",\"number\":\"one\",\"text\":\"a1\",\"marker\":\"a1\",\"word\":\"a1\",\"range\":{\"start\":12,\"end\":13},\"dead\":true,\"types\":[\"a1\"],\"level\":1},\"to\":{\"value\":\"b1\",\"number\":\"one\",\"text\":\"b1\",\"marker\":\"b1\",\"word\":\"b1\",\"range\":{\"start\":18,\"end\":19},\"dead\":true,\"types\":[\"b1\"],\"level\":1}}}\n    at args.error (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:158:11)\n    at Object.evaluator (/home/dev/code/theprogrammablemind/kms/common/dimension.js:146:13)\n    at Semantic.apply [as _apply] (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/config.js:318:35)\n    at Semantic.apply (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:124:10)\n    at Semantics.applyToContext (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:199:35)\n    at Semantics.apply (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/semantics.js:315:19)\n    at args.s (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:202:47)\n    at Config.getEvaluator (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/src/config.js:939:22)\n    at args.e (/home/dev/code/theprogrammablemind/kms/node_modules/theprogrammablemind/client.js:213:21)\n    at Semantic.apply [as _apply] (/home/dev/code/theprogrammablemind/kms/common/dialogues.js:689:24). Semantic is Semantic(({ context }) => bridge.id == context.marker && context.evaluate, ({callId, context, kms, e, error}) => {\n        /*\n        error(({context, e}) => {\n          context.evalue = 'dont know...'\n        })\n        */\n        if (callId == 'length#call3') {\n          debugger\n        }\n        const from = context.from;\n        const to = context.to;\n        let evalue;\n        let efrom = from\n        if (!from.unit) {\n          efrom = e(from).evalue\n        }\n        if (to.value == efrom.unit.value) {\n          evalue = efrom.amount\n        } else {\n          const formula = kms.formulas.api.get(to, [efrom.unit])\n          if (!formula) {\n            const reason = { marker: 'reason', focusableForPhrase: true, evalue: { marker: 'noconversion', from: efrom.unit, to } }\n            kms.stm.api.mentioned(reason)\n            error(reason)\n          }\n          kms.stm.api.setVariable(efrom.unit.value, efrom.amount)\n          evalue = e(formula)\n        }\n        /*\n        '{\n            \"marker\":\"dimension\",\n            \"unit\":{\"marker\":\"unit\",\"range\":{\"start\":19,\"end\":25},\"word\":\"celcius\",\"text\":\"celcius\",\"value\":\"celcius\",\"unknown\":true,\"types\":[\"unit\",\"unknown\"]},\n            \"value\":10,\n            \"amount\":{\"word\":\"degrees\",\"number\":\"many\",\"text\":\"10 degrees\",\"marker\":\"degree\",\"range\":{\"start\":8,\"end\":17},\"value\":10,\"amount\":{\"value\":10,\"text\":\"10\",\"marker\":\"number\",\"word\":\"10\",\"range\":{\"start\":8,\"end\":9},\"types\":[\"number\"]}},\n              \"text\":\"10 degrees celcius\",\"range\":{\"start\":8,\"end\":25}}'\n        */\n        context.evalue = { \n          paraphrase: true,\n          marker: 'dimension',\n          level: 1,\n          unit: to,\n          amount: { evalue, paraphrase: undefined }\n        }\n      })\nsee the evaluator property. The error has a retryCall property that will recall the function that failed.'. Semantic is Semantic(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.query, ({context, s, log, km, objects, e}) => {\n        const one = context.one;\n        const two = context.two;\n        let concept, value;\n        if (one.query) {\n          concept = one;\n          value = two;\n        } else {\n          concept = two;\n          value = one;\n        }\n        // km('dialogues').api.mentioned(concept)\n        // TODO wtf is the next line?\n        value = JSON.parse(JSON.stringify(value))\n        let instance = e(value)\n        if (false && instance.evalue) {\n          km('stm').api.mentioned(value)\n        }\n        if (instance.verbatim) {\n          context.evalue = { verbatim: instance.verbatim }\n          context.isResponse = true\n          return\n        }\n        // instance.focusable = ['one', 'two']\n        // concept = JSON.parse(JSON.stringify(value)) \n        concept = _.cloneDeep(value) \n        concept.isQuery = undefined\n        // greg101\n        // instance.focusableForPhrase = true\n        instance.focus = true\n        if (concept.hierarchy) {\n          concept.focusableForPhrase = true\n        }\n        // concept.focus = true\n\n        const many = isMany(concept) || isMany(instance)\n        const evalue = {\n          \"default\": true,\n          \"marker\": \"is\",\n          \"one\": concept,\n          \"two\": instance,\n          \"focusable\": ['two', 'one'],\n          \"word\": many ? \"are\" : \"is\",\n          \"number\": many ? \"many\" : undefined,\n        }\n        context.evalue = evalue\n        context.isResponse = true\n      }). The error has a retryCall property that will recall the function that failed.'"
            ],
            "evalue": "That is not known because there is no conversion between a1 and b1",
            "isResponse": true,
            "marker": "error",
            "reason": {
              "evalue": {
                "from": {
                  "dead": true,
                  "level": 1,
                  "marker": "a1",
                  "number": "one",
                  "range": {
                    "end": 13,
                    "start": 12
                  },
                  "text": "a1",
                  "types": [
                    "a1"
                  ],
                  "value": "a1",
                  "word": "a1"
                },
                "marker": "noconversion",
                "to": {
                  "dead": true,
                  "level": 1,
                  "marker": "b1",
                  "number": "one",
                  "range": {
                    "end": 19,
                    "start": 18
                  },
                  "text": "b1",
                  "types": [
                    "b1"
                  ],
                  "value": "b1",
                  "word": "b1"
                }
              },
              "focusableForPhrase": true,
              "marker": "reason"
            },
            "text": "[object Object]",
            "touchedBy": [
              "dimension#call4"
            ]
          },
          "generatedParenthesized": "(That is not known because there is no conversion between a1 and b1)",
          "paraphrases": "what are 10 a1 in b1?",
          "paraphrasesParenthesized": "((((what) are (((10) (a1)) in (b1)))?))",
          "responses": [
            "That is not known because there is no conversion between a1 and b1"
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 24,
                "start": 0
              },
              "text": "a1 and b1 are units of d1",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 1,
                    "start": 0
                  },
                  "text": "a1",
                  "unknown": true,
                  "value": "a1",
                  "word": "a1"
                },
                {
                  "dead": true,
                  "level": 2,
                  "marker": "unknown",
                  "range": {
                    "end": 8,
                    "start": 7
                  },
                  "text": "b1",
                  "unknown": true,
                  "value": "b1",
                  "word": "b1"
                }
              ]
            },
            "range": {
              "end": 24,
              "start": 0
            },
            "text": "a1 and b1 are units of d1",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unit",
              "number": "many",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 24,
                  "start": 23
                },
                "text": "d1",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "d1",
                "word": "d1"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unit",
                  "number": "many",
                  "range": {
                    "end": 18,
                    "start": 14
                  },
                  "text": "units",
                  "types": [
                    "unit"
                  ],
                  "value": "unit",
                  "word": "units"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 24,
                    "start": 23
                  },
                  "text": "d1",
                  "types": [
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "d1",
                  "word": "d1"
                }
              ],
              "range": {
                "end": 24,
                "start": 14
              },
              "text": "units of d1",
              "types": [
                "unit"
              ],
              "value": "unit",
              "word": "units"
            },
            "word": "are"
          },
          "generatedParenthesized": "",
          "paraphrases": "a1 and b1 are units of d1",
          "paraphrasesParenthesized": "(((a1) and (b1)) are ((units) of (d1)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "one",
              "range": {
                "end": 16,
                "start": 0
              },
              "text": "c1",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "c1",
              "word": "c1"
            },
            "range": {
              "end": 16,
              "start": 0
            },
            "text": "c1 is a dimension",
            "topLevel": true,
            "touchedBy": [
              "dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": {
                "default": true,
                "level": 0,
                "marker": "a",
                "range": {
                  "end": 6,
                  "start": 6
                },
                "text": "a",
                "word": "a"
              },
              "level": 1,
              "marker": "dimension",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "pullFromContext": false,
              "range": {
                "end": 16,
                "start": 6
              },
              "text": "a dimension",
              "types": [
                "dimension"
              ],
              "value": "dimension",
              "wantsValue": true,
              "word": "dimension"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "c1 is a dimension",
          "paraphrasesParenthesized": "((c1) is ((a) (dimension)))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "default": true,
              "isList": true,
              "level": 1,
              "listable": true,
              "marker": "list",
              "number": "many",
              "range": {
                "end": 30,
                "start": 0
              },
              "text": "dimension and unit",
              "types": [
                "list",
                "type"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 8,
                    "start": 0
                  },
                  "text": "dimension",
                  "unknown": true,
                  "value": "dimension",
                  "word": "dimension"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "type",
                  "range": {
                    "end": 17,
                    "start": 14
                  },
                  "text": "unit",
                  "unknown": true,
                  "value": "unit",
                  "word": "unit"
                }
              ],
              "word": "and"
            },
            "range": {
              "end": 30,
              "start": 0
            },
            "text": "dimension and unit are concepts",
            "topLevel": true,
            "touchedBy": [
              "dimensionTemplate#call2",
              "instance0#dimensionTemplate#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 30,
                "start": 23
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "dimension and unit are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "many",
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "formulas",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "formulas",
              "word": "formulas"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "formulas are concepts",
            "topLevel": true,
            "touchedBy": [
              "formulasTemplate#call2",
              "instance0#formulasTemplate#call2",
              "instance0#formulas#call2",
              "instance0#dimension#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 13
              },
              "text": "concepts",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "concepts",
              "word": "concepts"
            },
            "word": "are"
          },
          "generatedParenthesized": [
          ],
          "paraphrases": "formulas are concepts",
          "paraphrasesParenthesized": [
          ],
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "c1 is a dimension",
      "a1 and b1 are units of d1",
      "what are 10 a1 in b1?",
      "why"
    ],
    "paraphrasesParenthesized": [
      "((c1) is ((a) (dimension)))",
      "(((a1) and (b1)) are ((units) of (d1)))",
      "((((what) are (((10) (a1)) in (b1)))?))",
      "(why)"
    ],
    "query": "c1 is a dimension\\na1 and b1 are units of d1\\nwhat are 10 a1 in b1\\nwhy",
    "responses": [
      "",
      "",
      "That is not known because there is no conversion between a1 and b1",
      "there is no conversion between a1 and b1"
    ]
  }
]