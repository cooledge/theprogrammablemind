{
  "queries": [
    "wants is xfx between wanter and wantee",
    "if x likes y or x loves y then x wants y"
  ],
  "resultss": [
    {
      "hierarchy": [
        [
          "a",
          "articlePOS"
        ],
        [
          "articlePOS",
          "articlePOS"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "canBeQuestion"
        ],
        [
          "concept",
          "queryable"
        ],
        [
          "concept",
          "theAble"
        ],
        [
          "dislike",
          "canBeDoQuestion"
        ],
        [
          "dislike",
          "canBeQuestion"
        ],
        [
          "dislike",
          "ifAble"
        ],
        [
          "dislike",
          "orAble"
        ],
        [
          "hate",
          "canBeDoQuestion"
        ],
        [
          "hate",
          "canBeQuestion"
        ],
        [
          "hate",
          "ifAble"
        ],
        [
          "hate",
          "orAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "ifAble",
          "ifAble"
        ],
        [
          "is",
          "canBeQuestion"
        ],
        [
          "is",
          "verby"
        ],
        [
          "it",
          "pronoun"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "it",
          "thisitthat"
        ],
        [
          "it",
          "toAble"
        ],
        [
          "like",
          "canBeDoQuestion"
        ],
        [
          "like",
          "canBeQuestion"
        ],
        [
          "like",
          "ifAble"
        ],
        [
          "like",
          "orAble"
        ],
        [
          "love",
          "canBeDoQuestion"
        ],
        [
          "love",
          "canBeQuestion"
        ],
        [
          "love",
          "ifAble"
        ],
        [
          "love",
          "orAble"
        ],
        [
          "notAble",
          "notAble"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "orAble",
          "ifAble"
        ],
        [
          "pronoun",
          "pronoun"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "punctuation",
          "punctuation"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "questionMark",
          "punctuation"
        ],
        [
          "readonly",
          "queryable"
        ],
        [
          "that",
          "thisitthat"
        ],
        [
          "the",
          "articlePOS"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "this",
          "pronoun"
        ],
        [
          "this",
          "queryable"
        ],
        [
          "this",
          "thisitthat"
        ],
        [
          "thisitthat",
          "queryable"
        ],
        [
          "toAble",
          "toAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "type",
          "whatAble"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "unknown",
          "notAble"
        ],
        [
          "unknown",
          "object"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "verby",
          "verby"
        ],
        [
          "what",
          "object"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "whatAble",
          "queryable"
        ],
        [
          "whose",
          "object"
        ],
        [
          "xfx",
          "queryable"
        ]
      ],
      "logs": [
        "Undefined word 'wants'",
        "Undefined word 'wanter'",
        "Undefined word 'wantee'",
        "Counter == 2. Applying\n\t\t\t\t\t\t\t\tOperator(list/1, PASS, None, evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({'type': ['queryable', 'notAble', 'object', 'unknown', 'theAble', 'hierarchyAble']}) bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType(variable: 'type')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, marker: Operator(between/0, None, evaluator(Bridge('{ ...next(operator), arguments: after[0] }')), variables({}) bridge(bridge)), range: {'start': 13, 'end': 19}, text: between, value: between, word: between})\n\n\n",
        "Counter == 3. Applying\n\t\t\t\t\t\t\t\tOperator(list/1, PASS, None, evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({'type': ['queryable', 'notAble', 'object', 'unknown', 'theAble', 'hierarchyAble']}) bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType(variable: 'type')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, marker: Operator(between/0, None, evaluator(Bridge('{ ...next(operator), arguments: after[0] }')), variables({}) bridge(bridge)), range: {'start': 13, 'end': 19}, text: between, value: between, word: between})\n\n\n",
        "Counter == 4. Applying\n\t\t\t\t\t\t\t\tOperator(list/1, PASS, None, evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({'type': ['queryable', 'notAble', 'object', 'unknown', 'theAble', 'hierarchyAble']}) bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType(variable: 'type')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, marker: Operator(between/0, None, evaluator(Bridge('{ ...next(operator), arguments: after[0] }')), variables({}) bridge(bridge)), range: {'start': 13, 'end': 19}, text: between, value: between, word: between})\n\n\n",
        "Op choices were: [(('list', 0), [('between', 0), ('is', 0), ('unknown', 0), ('xfx', 0)], 1), (('list', 1), [('between', 0), ('is', 0), ('unknown', 0), ('xfx', 0)], 2), (('unknown', 0), [('between', 0), ('is', 0), ('unknown', 0), ('xfx', 0)], 2), (('list', 1), [('between', 0), ('is', 0), ('unknown', 0), ('unknown', 1), ('xfx', 0)], 3), (('list', 1), [('between', 0), ('is', 0), ('unknown', 0), ('unknown', 1), ('xfx', 0)], 3), (('list', 1), [('between', 0), ('is', 0), ('unknown', 1), ('xfx', 0)], 4), (('between', 0), [('between', 0), ('is', 0), ('unknown', 1), ('xfx', 0)], 4), (('unknown', 1), [('between', 1), ('is', 0), ('unknown', 1), ('xfx', 0)], 5), (('xfx', 0), [('between', 1), ('is', 0), ('xfx', 0)], 6), (('between', 1), [('between', 1), ('is', 0)], 7), (('is', 0), [('is', 0)], 8), (('is', 1), [('is', 1)], 9)]",
        "Contexts used for choosing operators (if the wrong choices were made update the priorities array. Put the expected choice at the end of the list. you can check for loops in the priorities by adding the -cl flag and running a query): \n  Context for choosing the operator list/0 was [['between', 0], ['is', 0], ['unknown', 0], ['xfx', 0]]. Counter 1\n  Context for choosing the operator list/1 was [['between', 0], ['is', 0], ['unknown', 0], ['xfx', 0]]. Counter 2\n  Context for choosing the operator unknown/0 was [['between', 0], ['is', 0], ['unknown', 0], ['xfx', 0]]. Counter 2\n  Context for choosing the operator list/1 was [['between', 0], ['is', 0], ['unknown', 0], ['unknown', 1], ['xfx', 0]]. Counter 3\n  Context for choosing the operator list/1 was [['between', 0], ['is', 0], ['unknown', 0], ['unknown', 1], ['xfx', 0]]. Counter 3\n  Context for choosing the operator list/1 was [['between', 0], ['is', 0], ['unknown', 1], ['xfx', 0]]. Counter 4\n  Context for choosing the operator between/0 was [['between', 0], ['is', 0], ['unknown', 1], ['xfx', 0]]. Counter 4\n  Context for choosing the operator unknown/1 was [['between', 1], ['is', 0], ['unknown', 1], ['xfx', 0]]. Counter 5\n  Context for choosing the operator xfx/0 was [['between', 1], ['is', 0], ['xfx', 0]]. Counter 6\n  Context for choosing the operator between/1 was [['between', 1], ['is', 0]]. Counter 7\n  Context for choosing the operator is/0 was [['is', 0]]. Counter 8\n  Context for choosing the operator is/1 was [['is', 1]]. Counter 9",
        "Associations made with probabilities (each group is a choice point. if the wrong choices were made update the associations list): \n  Group 0\n    0.6000000000000001 - [['unknown', 0], \">>>>1 ['is', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 0), ('is', 0), ('xfx', 0))\n    0.375 - [['unknown', 0], \">>>>1 ['isEd', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 0), ('isEd', 0))\n  Group 1\n    0.6000000000000001 - [['unknown', 0], \">>>>1 ['is', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 0), ('is', 0), ('xfx', 0))\n    0.375 - [['unknown', 0], \">>>>1 ['isEd', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 0), ('isEd', 0))\n  Group 2\n    0.6000000000000001 - [['unknown', 0], \">>>>1 ['is', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 1), ('is', 0), ('xfx', 0))\n    0.375 - [['unknown', 0], \">>>>1 ['isEd', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 1), ('isEd', 0))\n  Group 3\n    0.6000000000000001 - [['unknown', 0], \">>>>1 ['is', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 1), ('is', 0), ('xfx', 0))\n    0.375 - [['unknown', 0], \">>>>1 ['isEd', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 1), ('isEd', 0))\n  Group 4\n    0.6000000000000001 - [['unknown', 0], \">>>>1 ['is', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 1), ('is', 0), ('xfx', 0))\n    0.375 - [['unknown', 0], \">>>>1 ['isEd', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 1), ('isEd', 0))\n  Group 5\n    0.6000000000000001 - [['unknown', 0], \">>>>1 ['is', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 1), ('is', 0), ('xfx', 0))\n    0.375 - [['unknown', 0], \">>>>1 ['isEd', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 1), ('isEd', 0))\n  Group 6\n    0.6000000000000001 - [['unknown', 0], \">>>>1 ['is', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 1), ('is', 0), ('xfx', 0))\n    0.375 - [['unknown', 0], \">>>>1 ['isEd', 0] <<<<1\", ['xfx', 0], ['between', 0]]\n      (('unknown', 1), ('isEd', 0))\n  Group 7\n    1.0 - [['unknown', 0], \">>>>1 ['is', 0] <<<<1\", ['xfx', 0]]\n      (('unknown', 1), ('is', 0), ('xfx', 0))\n    0.5 - [['unknown', 0], \">>>>1 ['isEd', 0] <<<<1\", ['xfx', 0]]\n      (('unknown', 1), ('isEd', 0))",
        "    WARNING from Dialogues KM: For the \"X is Y\" type phrase implement a same handler.\n    The semantic would be\n      match: ({context}) => context.marker == 'unknown' && context.same && <other conditions as you like>\n      apply: ({context}) => <do stuff... context.same is the other value>; context.sameWasProcessed = true\n    The input context would be:\n      {\n        \"number\": \"one\",\n        \"marker\": \"unknown\",\n        \"range\": {\n          \"start\": 0,\n          \"end\": 37\n        },\n        \"word\": \"wants\",\n        \"text\": \"wants\",\n        \"value\": \"wants\",\n        \"unknown\": true,\n        \"types\": [\n          \"unknown\"\n        ],\n        \"same\": {\n          \"marker\": \"xfx\",\n          \"value\": \"xfx\",\n          \"default\": true,\n          \"text\": \"xfx between\",\n          \"word\": \"xfx\",\n          \"range\": {\n            \"start\": 9,\n            \"end\": 37\n          },\n          \"types\": [\n            \"xfx\"\n          ],\n          \"arguments\": {\n            \"marker\": \"list\",\n            \"value\": [\n              {\n                \"marker\": \"unknown\",\n                \"range\": {\n                  \"start\": 21,\n                  \"end\": 26\n                },\n                \"word\": \"wanter\",\n                \"text\": \"wanter\",\n                \"value\": \"wanter\",\n                \"unknown\": true\n              },\n              {\n                \"marker\": \"unknown\",\n                \"range\": {\n                  \"start\": 32,\n                  \"end\": 37\n                },\n                \"word\": \"wantee\",\n                \"text\": \"wantee\",\n                \"value\": \"wantee\",\n                \"unknown\": true\n              }\n            ],\n            \"range\": {\n              \"start\": 21,\n              \"end\": 37\n            }\n          }\n        }\n      }\n    ",
        "    WARNING from Dialogues KM: For the \"X is Y\" type phrase implement a same handler.\n    The semantic would be\n      match: ({context}) => context.marker == 'xfx' && context.same && <other conditions as you like>\n      apply: ({context}) => <do stuff... context.same is the other value>; context.sameWasProcessed = true\n    The input context would be:\n      {\n        \"marker\": \"xfx\",\n        \"value\": \"xfx\",\n        \"default\": true,\n        \"text\": \"xfx between\",\n        \"word\": \"xfx\",\n        \"range\": {\n          \"start\": 9,\n          \"end\": 37\n        },\n        \"types\": [\n          \"xfx\"\n        ],\n        \"arguments\": {\n          \"marker\": \"list\",\n          \"value\": [\n            {\n              \"marker\": \"unknown\",\n              \"range\": {\n                \"start\": 21,\n                \"end\": 26\n              },\n              \"word\": \"wanter\",\n              \"text\": \"wanter\",\n              \"value\": \"wanter\",\n              \"unknown\": true\n            },\n            {\n              \"marker\": \"unknown\",\n              \"range\": {\n                \"start\": 32,\n                \"end\": 37\n              },\n              \"word\": \"wantee\",\n              \"text\": \"wantee\",\n              \"value\": \"wantee\",\n              \"unknown\": true\n            }\n          ],\n          \"range\": {\n            \"start\": 21,\n            \"end\": 37\n          }\n        },\n        \"same\": {\n          \"number\": \"one\",\n          \"marker\": \"unknown\",\n          \"range\": {\n            \"start\": 0,\n            \"end\": 37\n          },\n          \"word\": \"wants\",\n          \"text\": \"wants\",\n          \"value\": \"wants\",\n          \"unknown\": true,\n          \"types\": [\n            \"unknown\"\n          ],\n          \"concept\": true\n        }\n      }\n    "
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "list",
              0
            ],
            "ops": [
              [
                "between",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "xfx",
                0
              ]
            ],
            "counter": 1
          },
          {
            "op": [
              "list",
              1
            ],
            "ops": [
              [
                "between",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "xfx",
                0
              ]
            ],
            "counter": 2
          },
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "between",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "xfx",
                0
              ]
            ],
            "counter": 2
          },
          {
            "op": [
              "list",
              1
            ],
            "ops": [
              [
                "between",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "xfx",
                0
              ]
            ],
            "counter": 3
          },
          {
            "op": [
              "list",
              1
            ],
            "ops": [
              [
                "between",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "xfx",
                0
              ]
            ],
            "counter": 3
          },
          {
            "op": [
              "list",
              1
            ],
            "ops": [
              [
                "between",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "xfx",
                0
              ]
            ],
            "counter": 4
          },
          {
            "op": [
              "between",
              0
            ],
            "ops": [
              [
                "between",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "xfx",
                0
              ]
            ],
            "counter": 4
          },
          {
            "op": [
              "unknown",
              1
            ],
            "ops": [
              [
                "between",
                1
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "xfx",
                0
              ]
            ],
            "counter": 5
          },
          {
            "op": [
              "xfx",
              0
            ],
            "ops": [
              [
                "between",
                1
              ],
              [
                "is",
                0
              ],
              [
                "xfx",
                0
              ]
            ],
            "counter": 6
          },
          {
            "op": [
              "between",
              1
            ],
            "ops": [
              [
                "between",
                1
              ],
              [
                "is",
                0
              ]
            ],
            "counter": 7
          },
          {
            "op": [
              "is",
              0
            ],
            "ops": [
              [
                "is",
                0
              ]
            ],
            "counter": 8
          },
          {
            "op": [
              "is",
              1
            ],
            "ops": [
              [
                "is",
                1
              ]
            ],
            "counter": 9
          }
        ]
      },
      "trace": "undefined",
      "contexts": [
        {
          "number": "one",
          "text": "wants is xfx between",
          "marker": "is",
          "word": "is",
          "range": {
            "start": 0,
            "end": 37
          },
          "one": {
            "number": "one",
            "marker": "unknown",
            "range": {
              "start": 0,
              "end": 37
            },
            "word": "wants",
            "text": "wants",
            "value": "wants",
            "unknown": true,
            "types": [
              "unknown"
            ],
            "concept": true
          },
          "two": {
            "marker": "xfx",
            "value": "xfx",
            "default": true,
            "text": "xfx between",
            "word": "xfx",
            "range": {
              "start": 9,
              "end": 37
            },
            "types": [
              "xfx"
            ],
            "arguments": {
              "marker": "list",
              "value": [
                {
                  "marker": "unknown",
                  "range": {
                    "start": 21,
                    "end": 26
                  },
                  "word": "wanter",
                  "text": "wanter",
                  "value": "wanter",
                  "unknown": true
                },
                {
                  "marker": "unknown",
                  "range": {
                    "start": 32,
                    "end": 37
                  },
                  "word": "wantee",
                  "text": "wantee",
                  "value": "wantee",
                  "unknown": true
                }
              ],
              "range": {
                "start": 21,
                "end": 37
              }
            }
          },
          "topLevel": true,
          "touchedBy": [
            "call2"
          ]
        }
      ],
      "generated": [
        "wants is xfx between wanter and wantee"
      ],
      "paraphrases": [
        "wants is xfx between wanter and wantee"
      ],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "between",
            0
          ],
          [
            "is",
            0
          ],
          [
            "list",
            0
          ],
          [
            "unknown",
            0
          ],
          [
            "xfx",
            0
          ]
        ],
        [
          [
            "between",
            0
          ],
          [
            "is",
            0
          ],
          [
            "list",
            1
          ],
          [
            "unknown",
            0
          ],
          [
            "xfx",
            0
          ]
        ],
        [
          [
            "between",
            0
          ],
          [
            "is",
            0
          ],
          [
            "list",
            1
          ],
          [
            "unknown",
            1
          ],
          [
            "xfx",
            0
          ]
        ],
        [
          [
            "between",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            0
          ],
          [
            "xfx",
            0
          ]
        ],
        [
          [
            "between",
            1
          ],
          [
            "is",
            0
          ]
        ],
        [
          [
            "between",
            1
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            1
          ],
          [
            "xfx",
            0
          ]
        ],
        [
          [
            "between",
            1
          ],
          [
            "is",
            0
          ],
          [
            "xfx",
            0
          ]
        ]
      ],
      "version": "7.5.5-beta.1",
      "query": "wants is xfx between wanter and wantee",
      "key": {
        "query": "wants is xfx between wanter and wantee"
      }
    },
    {
      "hierarchy": [
        [
          "a",
          "articlePOS"
        ],
        [
          "articlePOS",
          "articlePOS"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "canBeQuestion"
        ],
        [
          "concept",
          "queryable"
        ],
        [
          "concept",
          "theAble"
        ],
        [
          "dislike",
          "canBeDoQuestion"
        ],
        [
          "dislike",
          "canBeQuestion"
        ],
        [
          "dislike",
          "ifAble"
        ],
        [
          "dislike",
          "orAble"
        ],
        [
          "hate",
          "canBeDoQuestion"
        ],
        [
          "hate",
          "canBeQuestion"
        ],
        [
          "hate",
          "ifAble"
        ],
        [
          "hate",
          "orAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "ifAble",
          "ifAble"
        ],
        [
          "is",
          "canBeQuestion"
        ],
        [
          "is",
          "verby"
        ],
        [
          "it",
          "pronoun"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "it",
          "thisitthat"
        ],
        [
          "it",
          "toAble"
        ],
        [
          "like",
          "canBeDoQuestion"
        ],
        [
          "like",
          "canBeQuestion"
        ],
        [
          "like",
          "ifAble"
        ],
        [
          "like",
          "orAble"
        ],
        [
          "love",
          "canBeDoQuestion"
        ],
        [
          "love",
          "canBeQuestion"
        ],
        [
          "love",
          "ifAble"
        ],
        [
          "love",
          "orAble"
        ],
        [
          "notAble",
          "notAble"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "orAble",
          "ifAble"
        ],
        [
          "pronoun",
          "pronoun"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "punctuation",
          "punctuation"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "questionMark",
          "punctuation"
        ],
        [
          "readonly",
          "queryable"
        ],
        [
          "that",
          "thisitthat"
        ],
        [
          "the",
          "articlePOS"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "this",
          "pronoun"
        ],
        [
          "this",
          "queryable"
        ],
        [
          "this",
          "thisitthat"
        ],
        [
          "thisitthat",
          "queryable"
        ],
        [
          "toAble",
          "toAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "type",
          "whatAble"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "unknown",
          "notAble"
        ],
        [
          "unknown",
          "object"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "verby",
          "verby"
        ],
        [
          "want",
          "canBeDoQuestion"
        ],
        [
          "want",
          "canBeQuestion"
        ],
        [
          "want",
          "ifAble"
        ],
        [
          "want",
          "orAble"
        ],
        [
          "what",
          "object"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "whatAble",
          "queryable"
        ],
        [
          "whose",
          "object"
        ],
        [
          "xfx",
          "queryable"
        ]
      ],
      "logs": [
        "Undefined word 'x'",
        "Undefined word 'y'",
        "Counter == 15. Applying\n\t\t\t\t\t\t\t\tOperator(orList/1, PASS, None, evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({}) bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('orAble')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, marker: Operator(if/0, None, evaluator(Bridge('{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }')), variables({}) bridge(bridge)), range: {'start': 0, 'end': 1}, text: if, value: if, word: if})\n\n\n",
        "Op choices were: [(('unknown', 0), [('if', 0), ('like', 0), ('love', 0), ('orList', 0), ('then', 0), ('unknown', 0), ('want', 0)], 1), (('unknown', 0), [('if', 0), ('like', 0), ('love', 0), ('orList', 0), ('then', 0), ('unknown', 0), ('unknown', 1), ('want', 0)], 2), (('unknown', 0), [('if', 0), ('like', 0), ('love', 0), ('orList', 0), ('then', 0), ('unknown', 0), ('unknown', 1), ('want', 0)], 3), (('unknown', 0), [('if', 0), ('like', 0), ('love', 0), ('orList', 0), ('then', 0), ('unknown', 0), ('unknown', 1), ('want', 0)], 4), (('unknown', 0), [('if', 0), ('like', 0), ('love', 0), ('orList', 0), ('then', 0), ('unknown', 0), ('unknown', 1), ('want', 0)], 5), (('unknown', 0), [('if', 0), ('like', 0), ('love', 0), ('orList', 0), ('then', 0), ('unknown', 0), ('unknown', 1), ('want', 0)], 6), (('like', 0), [('if', 0), ('like', 0), ('love', 0), ('orList', 0), ('then', 0), ('unknown', 1), ('want', 0)], 7), (('love', 0), [('if', 0), ('like', 1), ('love', 0), ('orList', 0), ('then', 0), ('unknown', 1), ('want', 0)], 8), (('unknown', 1), [('if', 0), ('like', 1), ('love', 1), ('orList', 0), ('then', 0), ('unknown', 1), ('want', 0)], 9), (('unknown', 1), [('if', 0), ('like', 1), ('love', 1), ('orList', 0), ('then', 0), ('unknown', 1), ('want', 0)], 10), (('want', 0), [('if', 0), ('like', 1), ('love', 1), ('orList', 0), ('then', 0), ('want', 0)], 11), (('like', 1), [('if', 0), ('like', 1), ('love', 1), ('orList', 0), ('then', 0), ('want', 1)], 12), (('love', 1), [('if', 0), ('love', 1), ('orList', 0), ('then', 0), ('want', 1)], 13), (('orList', 0), [('if', 0), ('orList', 0), ('then', 0), ('want', 1)], 14), (('orList', 1), [('if', 0), ('orList', 1), ('then', 0), ('want', 1)], 15), (('then', 0), [('if', 0), ('then', 0), ('want', 1)], 16), (('if', 0), [('if', 0)], 17)]",
        "Contexts used for choosing operators (if the wrong choices were made update the priorities array. Put the expected choice at the end of the list. you can check for loops in the priorities by adding the -cl flag and running a query): \n  Context for choosing the operator unknown/0 was [['if', 0], ['like', 0], ['love', 0], ['orList', 0], ['then', 0], ['unknown', 0], ['want', 0]]. Counter 1\n  Context for choosing the operator unknown/0 was [['if', 0], ['like', 0], ['love', 0], ['orList', 0], ['then', 0], ['unknown', 0], ['unknown', 1], ['want', 0]]. Counter 2\n  Context for choosing the operator unknown/0 was [['if', 0], ['like', 0], ['love', 0], ['orList', 0], ['then', 0], ['unknown', 0], ['unknown', 1], ['want', 0]]. Counter 3\n  Context for choosing the operator unknown/0 was [['if', 0], ['like', 0], ['love', 0], ['orList', 0], ['then', 0], ['unknown', 0], ['unknown', 1], ['want', 0]]. Counter 4\n  Context for choosing the operator unknown/0 was [['if', 0], ['like', 0], ['love', 0], ['orList', 0], ['then', 0], ['unknown', 0], ['unknown', 1], ['want', 0]]. Counter 5\n  Context for choosing the operator unknown/0 was [['if', 0], ['like', 0], ['love', 0], ['orList', 0], ['then', 0], ['unknown', 0], ['unknown', 1], ['want', 0]]. Counter 6\n  Context for choosing the operator like/0 was [['if', 0], ['like', 0], ['love', 0], ['orList', 0], ['then', 0], ['unknown', 1], ['want', 0]]. Counter 7\n  Context for choosing the operator love/0 was [['if', 0], ['like', 1], ['love', 0], ['orList', 0], ['then', 0], ['unknown', 1], ['want', 0]]. Counter 8\n  Context for choosing the operator unknown/1 was [['if', 0], ['like', 1], ['love', 1], ['orList', 0], ['then', 0], ['unknown', 1], ['want', 0]]. Counter 9\n  Context for choosing the operator unknown/1 was [['if', 0], ['like', 1], ['love', 1], ['orList', 0], ['then', 0], ['unknown', 1], ['want', 0]]. Counter 10\n  Context for choosing the operator want/0 was [['if', 0], ['like', 1], ['love', 1], ['orList', 0], ['then', 0], ['want', 0]]. Counter 11\n  Context for choosing the operator like/1 was [['if', 0], ['like', 1], ['love', 1], ['orList', 0], ['then', 0], ['want', 1]]. Counter 12\n  Context for choosing the operator love/1 was [['if', 0], ['love', 1], ['orList', 0], ['then', 0], ['want', 1]]. Counter 13\n  Context for choosing the operator orList/0 was [['if', 0], ['orList', 0], ['then', 0], ['want', 1]]. Counter 14\n  Context for choosing the operator orList/1 was [['if', 0], ['orList', 1], ['then', 0], ['want', 1]]. Counter 15\n  Context for choosing the operator then/0 was [['if', 0], ['then', 0], ['want', 1]]. Counter 16\n  Context for choosing the operator if/0 was [['if', 0]]. Counter 17",
        ""
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "like",
                0
              ],
              [
                "love",
                0
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "want",
                0
              ]
            ],
            "counter": 1
          },
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "like",
                0
              ],
              [
                "love",
                0
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "want",
                0
              ]
            ],
            "counter": 2
          },
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "like",
                0
              ],
              [
                "love",
                0
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "want",
                0
              ]
            ],
            "counter": 3
          },
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "like",
                0
              ],
              [
                "love",
                0
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "want",
                0
              ]
            ],
            "counter": 4
          },
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "like",
                0
              ],
              [
                "love",
                0
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "want",
                0
              ]
            ],
            "counter": 5
          },
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "like",
                0
              ],
              [
                "love",
                0
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "want",
                0
              ]
            ],
            "counter": 6
          },
          {
            "op": [
              "like",
              0
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "like",
                0
              ],
              [
                "love",
                0
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "want",
                0
              ]
            ],
            "counter": 7
          },
          {
            "op": [
              "love",
              0
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "like",
                1
              ],
              [
                "love",
                0
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "want",
                0
              ]
            ],
            "counter": 8
          },
          {
            "op": [
              "unknown",
              1
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "like",
                1
              ],
              [
                "love",
                1
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "want",
                0
              ]
            ],
            "counter": 9
          },
          {
            "op": [
              "unknown",
              1
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "like",
                1
              ],
              [
                "love",
                1
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "want",
                0
              ]
            ],
            "counter": 10
          },
          {
            "op": [
              "want",
              0
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "like",
                1
              ],
              [
                "love",
                1
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "want",
                0
              ]
            ],
            "counter": 11
          },
          {
            "op": [
              "like",
              1
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "like",
                1
              ],
              [
                "love",
                1
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "want",
                1
              ]
            ],
            "counter": 12
          },
          {
            "op": [
              "love",
              1
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "love",
                1
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "want",
                1
              ]
            ],
            "counter": 13
          },
          {
            "op": [
              "orList",
              0
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "orList",
                0
              ],
              [
                "then",
                0
              ],
              [
                "want",
                1
              ]
            ],
            "counter": 14
          },
          {
            "op": [
              "orList",
              1
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "orList",
                1
              ],
              [
                "then",
                0
              ],
              [
                "want",
                1
              ]
            ],
            "counter": 15
          },
          {
            "op": [
              "then",
              0
            ],
            "ops": [
              [
                "if",
                0
              ],
              [
                "then",
                0
              ],
              [
                "want",
                1
              ]
            ],
            "counter": 16
          },
          {
            "op": [
              "if",
              0
            ],
            "ops": [
              [
                "if",
                0
              ]
            ],
            "counter": 17
          }
        ]
      },
      "trace": "undefined",
      "contexts": [
        {
          "marker": "if",
          "value": "if",
          "default": true,
          "text": "if x likes y or x loves y then x wants y",
          "word": "if",
          "range": {
            "start": 0,
            "end": 39
          },
          "antecedant": {
            "marker": "orList",
            "default": true,
            "word": "or",
            "text": "x likes y or x loves y",
            "range": {
              "start": 3,
              "end": 24
            },
            "value": [
              {
                "value": "like",
                "number": "one",
                "text": "x likes y",
                "marker": "like",
                "word": "likes",
                "range": {
                  "start": 3,
                  "end": 11
                },
                "do": {
                  "left": "liker",
                  "right": "likee",
                  "range": {
                    "start": 3,
                    "end": 11
                  }
                },
                "liker": {
                  "marker": "unknown",
                  "range": {
                    "start": 3,
                    "end": 3
                  },
                  "word": "x",
                  "text": "x",
                  "value": "x",
                  "unknown": true,
                  "types": [
                    "unknown"
                  ]
                },
                "likee": {
                  "marker": "unknown",
                  "range": {
                    "start": 11,
                    "end": 11
                  },
                  "word": "y",
                  "text": "y",
                  "value": "y",
                  "unknown": true,
                  "types": [
                    "unknown"
                  ]
                },
                "unflatten": [
                  "liker",
                  "likee"
                ],
                "focusable": [
                  "liker",
                  "likee"
                ],
                "types": [
                  "like"
                ]
              },
              {
                "value": "love",
                "number": "one",
                "text": "x loves y",
                "marker": "love",
                "word": "loves",
                "range": {
                  "start": 16,
                  "end": 24
                },
                "do": {
                  "left": "lover",
                  "right": "lovee",
                  "range": {
                    "start": 16,
                    "end": 24
                  }
                },
                "lover": {
                  "marker": "unknown",
                  "range": {
                    "start": 16,
                    "end": 16
                  },
                  "word": "x",
                  "text": "x",
                  "value": "x",
                  "unknown": true,
                  "types": [
                    "unknown"
                  ]
                },
                "lovee": {
                  "marker": "unknown",
                  "range": {
                    "start": 24,
                    "end": 24
                  },
                  "word": "y",
                  "text": "y",
                  "value": "y",
                  "unknown": true,
                  "types": [
                    "unknown"
                  ]
                },
                "unflatten": [
                  "lover",
                  "lovee"
                ],
                "focusable": [
                  "lover",
                  "lovee"
                ],
                "types": [
                  "love"
                ]
              }
            ],
            "dead": true,
            "types": [
              "like",
              "orList"
            ]
          },
          "consequence": {
            "value": "want",
            "text": "x wants y",
            "marker": "want",
            "word": "wants",
            "range": {
              "start": 31,
              "end": 39
            },
            "do": {
              "left": "wanter",
              "right": "wantee",
              "range": {
                "start": 31,
                "end": 39
              }
            },
            "wanter": {
              "marker": "unknown",
              "range": {
                "start": 31,
                "end": 31
              },
              "word": "x",
              "text": "x",
              "value": "x",
              "unknown": true,
              "types": [
                "unknown"
              ]
            },
            "wantee": {
              "marker": "unknown",
              "range": {
                "start": 39,
                "end": 39
              },
              "word": "y",
              "text": "y",
              "value": "y",
              "unknown": true,
              "types": [
                "unknown"
              ]
            },
            "unflatten": [
              "wanter",
              "wantee"
            ],
            "focusable": [
              "wanter",
              "wantee"
            ],
            "types": [
              "want"
            ]
          },
          "topLevel": true,
          "touchedBy": [
            "call2"
          ]
        }
      ],
      "generated": [
        "if like love then want"
      ],
      "paraphrases": [
        "if x likes y or x loves y then x wants y"
      ],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "if",
            0
          ],
          [
            "like",
            0
          ],
          [
            "love",
            0
          ],
          [
            "orList",
            0
          ],
          [
            "then",
            0
          ],
          [
            "unknown",
            0
          ],
          [
            "unknown",
            1
          ],
          [
            "want",
            0
          ]
        ],
        [
          [
            "if",
            0
          ],
          [
            "like",
            0
          ],
          [
            "love",
            0
          ],
          [
            "orList",
            0
          ],
          [
            "then",
            0
          ],
          [
            "unknown",
            0
          ],
          [
            "want",
            0
          ]
        ],
        [
          [
            "if",
            0
          ],
          [
            "like",
            0
          ],
          [
            "love",
            0
          ],
          [
            "orList",
            0
          ],
          [
            "then",
            0
          ],
          [
            "unknown",
            1
          ],
          [
            "want",
            0
          ]
        ],
        [
          [
            "if",
            0
          ],
          [
            "like",
            0
          ],
          [
            "love",
            0
          ],
          [
            "orList",
            0
          ],
          [
            "then",
            0
          ],
          [
            "want",
            0
          ]
        ],
        [
          [
            "if",
            0
          ],
          [
            "like",
            0
          ],
          [
            "love",
            1
          ],
          [
            "orList",
            0
          ],
          [
            "then",
            0
          ],
          [
            "want",
            0
          ]
        ],
        [
          [
            "if",
            0
          ],
          [
            "like",
            1
          ],
          [
            "love",
            0
          ],
          [
            "orList",
            0
          ],
          [
            "then",
            0
          ],
          [
            "unknown",
            1
          ],
          [
            "want",
            0
          ]
        ],
        [
          [
            "if",
            0
          ],
          [
            "like",
            1
          ],
          [
            "love",
            1
          ],
          [
            "orList",
            0
          ],
          [
            "then",
            0
          ],
          [
            "unknown",
            0
          ],
          [
            "unknown",
            1
          ],
          [
            "want",
            0
          ]
        ],
        [
          [
            "if",
            0
          ],
          [
            "like",
            1
          ],
          [
            "love",
            1
          ],
          [
            "orList",
            0
          ],
          [
            "then",
            0
          ],
          [
            "unknown",
            0
          ],
          [
            "want",
            0
          ]
        ],
        [
          [
            "if",
            0
          ],
          [
            "like",
            1
          ],
          [
            "love",
            1
          ],
          [
            "orList",
            0
          ],
          [
            "then",
            0
          ],
          [
            "unknown",
            1
          ],
          [
            "want",
            0
          ]
        ],
        [
          [
            "if",
            0
          ],
          [
            "like",
            1
          ],
          [
            "love",
            1
          ],
          [
            "orList",
            0
          ],
          [
            "then",
            0
          ],
          [
            "want",
            0
          ]
        ],
        [
          [
            "if",
            0
          ],
          [
            "orList",
            1
          ]
        ],
        [
          [
            "if",
            0
          ],
          [
            "orList",
            1
          ],
          [
            "then",
            0
          ],
          [
            "want",
            0
          ]
        ],
        [
          [
            "if",
            0
          ],
          [
            "then",
            0
          ],
          [
            "unknown",
            0
          ]
        ]
      ],
      "version": "7.5.5-beta.1",
      "query": "if x likes y or x loves y then x wants y",
      "key": {
        "query": "if x likes y or x loves y then x wants y"
      }
    }
  ],
  "fragments": [],
  "semantics": [],
  "associations": [
    [
      [
        "between",
        0
      ],
      [
        "is",
        0
      ],
      [
        "list",
        0
      ],
      [
        "unknown",
        0
      ],
      [
        "xfx",
        0
      ]
    ],
    [
      [
        "between",
        0
      ],
      [
        "is",
        0
      ],
      [
        "list",
        1
      ],
      [
        "unknown",
        0
      ],
      [
        "xfx",
        0
      ]
    ],
    [
      [
        "between",
        0
      ],
      [
        "is",
        0
      ],
      [
        "list",
        1
      ],
      [
        "unknown",
        1
      ],
      [
        "xfx",
        0
      ]
    ],
    [
      [
        "between",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        0
      ],
      [
        "xfx",
        0
      ]
    ],
    [
      [
        "between",
        1
      ],
      [
        "is",
        0
      ]
    ],
    [
      [
        "between",
        1
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        1
      ],
      [
        "xfx",
        0
      ]
    ],
    [
      [
        "between",
        1
      ],
      [
        "is",
        0
      ],
      [
        "xfx",
        0
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "like",
        0
      ],
      [
        "love",
        0
      ],
      [
        "orList",
        0
      ],
      [
        "then",
        0
      ],
      [
        "unknown",
        0
      ],
      [
        "unknown",
        1
      ],
      [
        "want",
        0
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "like",
        0
      ],
      [
        "love",
        0
      ],
      [
        "orList",
        0
      ],
      [
        "then",
        0
      ],
      [
        "unknown",
        0
      ],
      [
        "want",
        0
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "like",
        0
      ],
      [
        "love",
        0
      ],
      [
        "orList",
        0
      ],
      [
        "then",
        0
      ],
      [
        "unknown",
        1
      ],
      [
        "want",
        0
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "like",
        0
      ],
      [
        "love",
        0
      ],
      [
        "orList",
        0
      ],
      [
        "then",
        0
      ],
      [
        "want",
        0
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "like",
        0
      ],
      [
        "love",
        1
      ],
      [
        "orList",
        0
      ],
      [
        "then",
        0
      ],
      [
        "want",
        0
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "like",
        1
      ],
      [
        "love",
        0
      ],
      [
        "orList",
        0
      ],
      [
        "then",
        0
      ],
      [
        "unknown",
        1
      ],
      [
        "want",
        0
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "like",
        1
      ],
      [
        "love",
        1
      ],
      [
        "orList",
        0
      ],
      [
        "then",
        0
      ],
      [
        "unknown",
        0
      ],
      [
        "unknown",
        1
      ],
      [
        "want",
        0
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "like",
        1
      ],
      [
        "love",
        1
      ],
      [
        "orList",
        0
      ],
      [
        "then",
        0
      ],
      [
        "unknown",
        0
      ],
      [
        "want",
        0
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "like",
        1
      ],
      [
        "love",
        1
      ],
      [
        "orList",
        0
      ],
      [
        "then",
        0
      ],
      [
        "unknown",
        1
      ],
      [
        "want",
        0
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "like",
        1
      ],
      [
        "love",
        1
      ],
      [
        "orList",
        0
      ],
      [
        "then",
        0
      ],
      [
        "want",
        0
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "orList",
        1
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "orList",
        1
      ],
      [
        "then",
        0
      ],
      [
        "want",
        0
      ]
    ],
    [
      [
        "if",
        0
      ],
      [
        "then",
        0
      ],
      [
        "unknown",
        0
      ]
    ]
  ]
}